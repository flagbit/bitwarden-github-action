{"version":3,"file":"bw.js","mappings":"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","sources":["webpack://@bitwarden/cli/external commonjs \"open\"","webpack://@bitwarden/cli/external node-commonjs \"url\"","webpack://@bitwarden/cli/webpack/bootstrap","webpack://@bitwarden/cli/webpack/runtime/compat get default export","webpack://@bitwarden/cli/webpack/runtime/define property getters","webpack://@bitwarden/cli/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/cli/external node-commonjs \"fs\"","webpack://@bitwarden/cli/external node-commonjs \"path\"","webpack://@bitwarden/cli/external commonjs \"commander\"","webpack://@bitwarden/cli/external commonjs \"jsdom\"","webpack://@bitwarden/cli/./jslib/common/src/enums/clientType.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/logLevelType.ts","webpack://@bitwarden/cli/./jslib/common/src/factories/accountFactory.ts","webpack://@bitwarden/cli/./jslib/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/cli/./jslib/common/src/factories/stateFactory.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/account.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/stateVersion.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/themeType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/windowState.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/globalState.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/cli/external commonjs \"tldjs\"","webpack://@bitwarden/cli/./jslib/common/src/misc/utils.ts","webpack://@bitwarden/cli/./jslib/common/src/services/appId.service.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/throttle.ts","webpack://@bitwarden/cli/./jslib/common/src/services/audit.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/authenticationType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/authResult.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/keysRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/baseResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/hashPurpose.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/errorResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/services/auth.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/cipherType.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/fieldType.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/uriMatchType.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/sequentialize.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/attachmentData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/cardData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/fieldData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/identityData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/loginUriData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/loginData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/cipherData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/attachmentView.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/encryptionType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/encString.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/domainBase.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/attachment.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/linkedIdType.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/itemView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/cardView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/card.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/identityView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/loginView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/cipherView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/fieldView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/field.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/identity.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/loginUriView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/loginUri.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/login.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/password.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/secureNote.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/cipher.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/cardApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/fieldApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/identityApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/loginApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/services/cipher.service.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/treeNode.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/serviceUtils.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/collectionData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/collectionView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/collection.ts","webpack://@bitwarden/cli/./jslib/common/src/services/collection.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/container.service.ts","webpack://@bitwarden/cli/external commonjs \"big-integer\"","webpack://@bitwarden/cli/./jslib/common/src/enums/kdfType.ts","webpack://@bitwarden/cli/./jslib/common/src/misc/wordlist.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/cli/./jslib/common/src/services/crypto.service.ts","webpack://@bitwarden/cli/external commonjs \"rxjs\"","webpack://@bitwarden/cli/./jslib/common/src/services/environment.service.ts","webpack://@bitwarden/cli/external commonjs \"papaparse\"","webpack://@bitwarden/cli/./jslib/common/src/models/export/card.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/field.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/identity.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/loginUri.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/login.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/secureNoteType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/secureNote.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/cipher.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/cipherWithIds.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/collection.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/collectionWithId.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/eventType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/event.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/folderView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/folder.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/folder.ts","webpack://@bitwarden/cli/./jslib/common/src/models/export/folderWithId.ts","webpack://@bitwarden/cli/./jslib/common/src/services/export.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/fileUploadType.ts","webpack://@bitwarden/cli/./jslib/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/fileUpload.service.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/folderData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/folderRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/services/folder.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/importOptions.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/importResult.ts","webpack://@bitwarden/cli/external commonjs \"browser-hrtime\"","webpack://@bitwarden/cli/./jslib/common/src/services/consoleLog.service.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/baseImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/ascendoCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/avastCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/avastJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/aviraCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/bitwardenPasswordProtectedImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/blurCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/buttercupCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/chromeCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/codebookCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/dashlaneImporters/dashlaneCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/dashlaneImporters/dashlaneJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/encryptrCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/enpassCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/enpassJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/firefoxCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/fsecureFskImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/gnomeJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/importError.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/keepass2XmlImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/keepassxCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/keeperImporters/keeperCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/lastpassCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/meldiumCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/msecureCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/mykiCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/nordpassCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/types/onepassword1PuxImporterTypes.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/onepassword1PuxImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/padlockCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passkeepCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passmanJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passpackCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/rememBearCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/roboformCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/safariCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/saferpassCsvImport.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/splashIdCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/truekeyCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/upmCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/yotiCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/importCiphersRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/kvpRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/services/import.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/organizationUserType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/services/keyConnector.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/noopMessaging.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/organization.ts","webpack://@bitwarden/cli/./jslib/common/src/services/organization.service.ts","webpack://@bitwarden/cli/external commonjs \"zxcvbn\"","webpack://@bitwarden/cli/./jslib/common/src/enums/policyType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/cli/./jslib/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/policyData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/policy.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/cli/./jslib/common/src/services/policy.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/providerUserType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/provider.ts","webpack://@bitwarden/cli/./jslib/common/src/services/provider.service.ts","webpack://@bitwarden/cli/external commonjs \"lunr\"","webpack://@bitwarden/cli/./jslib/common/src/services/search.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/sendType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/sendFileData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/sendTextData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/sendData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/sendFileView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/sendTextView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/sendView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/sendFile.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/sendText.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/send.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/sendRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/services/send.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/settings.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/storageLocation.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/state.ts","webpack://@bitwarden/cli/./jslib/common/src/services/state.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/token.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/stateMigration.service.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/organizationData.ts","webpack://@bitwarden/cli/./jslib/common/src/models/data/providerData.ts","webpack://@bitwarden/cli/./jslib/common/src/services/sync.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/totp.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/twoFactor.service.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/verificationType.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/services/userVerification.service.ts","webpack://@bitwarden/cli/./jslib/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/cli/external node-commonjs \"child_process\"","webpack://@bitwarden/cli/./jslib/common/src/enums/deviceType.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/services/cliPlatformUtils.service.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/services/consoleLog.service.ts","webpack://@bitwarden/cli/external commonjs \"form-data\"","webpack://@bitwarden/cli/external commonjs \"https-proxy-agent\"","webpack://@bitwarden/cli/external commonjs \"node-fetch\"","webpack://@bitwarden/cli/./jslib/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/billingResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/eventResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/folderResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/groupResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/listResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/enums/ssoEnums.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/keysResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/planResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/profileResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/policyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/sendResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/syncResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/services/api.service.ts","webpack://@bitwarden/cli/./jslib/node/src/services/nodeApi.service.ts","webpack://@bitwarden/cli/external node-commonjs \"crypto\"","webpack://@bitwarden/cli/external commonjs \"node-forge\"","webpack://@bitwarden/cli/./jslib/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/cli/./jslib/node/src/services/nodeCryptoFunction.service.ts","webpack://@bitwarden/cli/external commonjs \"chalk\"","webpack://@bitwarden/cli/./jslib/node/src/cli/models/response.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/baseProgram.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/models/response/messageResponse.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/commands/logout.command.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/commands/update.command.ts","webpack://@bitwarden/cli/./src/commands/completion.command.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/models/response/stringResponse.ts","webpack://@bitwarden/cli/./src/commands/config.command.ts","webpack://@bitwarden/cli/external commonjs \"inquirer\"","webpack://@bitwarden/cli/external commonjs \"jszip\"","webpack://@bitwarden/cli/external node-commonjs \"readline\"","webpack://@bitwarden/cli/./jslib/common/src/misc/nodeUtils.ts","webpack://@bitwarden/cli/./src/utils.ts","webpack://@bitwarden/cli/./src/commands/encode.command.ts","webpack://@bitwarden/cli/./src/commands/generate.command.ts","webpack://@bitwarden/cli/./src/commands/lock.command.ts","webpack://@bitwarden/cli/external node-commonjs \"http\"","webpack://@bitwarden/cli/./jslib/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/commands/login.command.ts","webpack://@bitwarden/cli/./src/commands/login.command.ts","webpack://@bitwarden/cli/external commonjs \"@koa/multer\"","webpack://@bitwarden/cli/external commonjs \"@koa/router\"","webpack://@bitwarden/cli/external commonjs \"koa\"","webpack://@bitwarden/cli/external commonjs \"koa-bodyparser\"","webpack://@bitwarden/cli/external commonjs \"koa-json\"","webpack://@bitwarden/cli/./jslib/node/src/cli/models/response/fileResponse.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/cli/./src/commands/confirm.command.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/cli/./src/models/response/attachmentResponse.ts","webpack://@bitwarden/cli/./src/models/response/loginResponse.ts","webpack://@bitwarden/cli/./src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/cli/./src/models/response/cipherResponse.ts","webpack://@bitwarden/cli/./src/models/response/folderResponse.ts","webpack://@bitwarden/cli/./src/models/response/collectionResponse.ts","webpack://@bitwarden/cli/./src/models/response/organizationCollectionResponse.ts","webpack://@bitwarden/cli/./src/commands/create.command.ts","webpack://@bitwarden/cli/./src/commands/delete.command.ts","webpack://@bitwarden/cli/./src/commands/edit.command.ts","webpack://@bitwarden/cli/./src/models/selectionReadOnly.ts","webpack://@bitwarden/cli/./src/models/request/organizationCollectionRequest.ts","webpack://@bitwarden/cli/./src/models/response/organizationResponse.ts","webpack://@bitwarden/cli/./src/models/response/sendFileResponse.ts","webpack://@bitwarden/cli/./src/models/response/sendTextResponse.ts","webpack://@bitwarden/cli/./src/models/response/sendResponse.ts","webpack://@bitwarden/cli/./src/models/response/templateResponse.ts","webpack://@bitwarden/cli/./src/commands/download.command.ts","webpack://@bitwarden/cli/./src/commands/get.command.ts","webpack://@bitwarden/cli/./jslib/node/src/cli/models/response/listResponse.ts","webpack://@bitwarden/cli/./src/models/response/organizationUserResponse.ts","webpack://@bitwarden/cli/./src/commands/list.command.ts","webpack://@bitwarden/cli/./src/commands/restore.command.ts","webpack://@bitwarden/cli/./src/commands/send/create.command.ts","webpack://@bitwarden/cli/./src/commands/send/delete.command.ts","webpack://@bitwarden/cli/./src/commands/send/edit.command.ts","webpack://@bitwarden/cli/./src/commands/send/get.command.ts","webpack://@bitwarden/cli/./src/commands/send/list.command.ts","webpack://@bitwarden/cli/./src/commands/send/removePassword.command.ts","webpack://@bitwarden/cli/./src/commands/share.command.ts","webpack://@bitwarden/cli/./src/commands/status.command.ts","webpack://@bitwarden/cli/./src/commands/sync.command.ts","webpack://@bitwarden/cli/./src/commands/convertToKeyConnector.command.ts","webpack://@bitwarden/cli/./src/commands/unlock.command.ts","webpack://@bitwarden/cli/./src/commands/serve.command.ts","webpack://@bitwarden/cli/./src/program.ts","webpack://@bitwarden/cli/./jslib/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/cli/./jslib/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/cli/./jslib/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/cli/./src/models/response/sendAccessResponse.ts","webpack://@bitwarden/cli/./src/commands/send/receive.command.ts","webpack://@bitwarden/cli/./src/send.program.ts","webpack://@bitwarden/cli/./jslib/common/src/services/i18n.service.ts","webpack://@bitwarden/cli/./src/services/i18n.service.ts","webpack://@bitwarden/cli/external commonjs \"proper-lockfile\"","webpack://@bitwarden/cli/external commonjs \"lowdb\"","webpack://@bitwarden/cli/external commonjs \"lowdb/adapters/FileSync\"","webpack://@bitwarden/cli/./jslib/node/src/services/lowdbStorage.service.ts","webpack://@bitwarden/cli/./src/services/lowdbStorage.service.ts","webpack://@bitwarden/cli/./src/services/nodeEnvSecureStorage.service.ts","webpack://@bitwarden/cli/./src/commands/export.command.ts","webpack://@bitwarden/cli/./src/commands/import.command.ts","webpack://@bitwarden/cli/./src/vault.program.ts","webpack://@bitwarden/cli/./src/bw.ts"],"sourcesContent":["module.exports = require(\"open\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"commander\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jsdom\");","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tldjs\");","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"big-integer\");","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs\");","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"papaparse\");","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUri } from \"./loginUri\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher } from \"./cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection } from \"./collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder } from \"./folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export interface ImportOption {\n  id: string;\n  name: string;\n}\n\nexport const featuredImportOptions = [\n  { id: \"bitwardenjson\", name: \"Bitwarden (json)\" },\n  { id: \"bitwardencsv\", name: \"Bitwarden (csv)\" },\n  { id: \"chromecsv\", name: \"Chrome (csv)\" },\n  { id: \"dashlanecsv\", name: \"Dashlane (csv)\" },\n  { id: \"firefoxcsv\", name: \"Firefox (csv)\" },\n  { id: \"keepass2xml\", name: \"KeePass 2 (xml)\" },\n  { id: \"lastpasscsv\", name: \"LastPass (csv)\" },\n  { id: \"safaricsv\", name: \"Safari and macOS (csv)\" },\n  { id: \"1password1pux\", name: \"1Password (1pux)\" },\n] as const;\n\nexport const regularImportOptions = [\n  { id: \"keepassxcsv\", name: \"KeePassX (csv)\" },\n  { id: \"1password1pif\", name: \"1Password (1pif)\" },\n  { id: \"1passwordwincsv\", name: \"1Password 6 and 7 Windows (csv)\" },\n  { id: \"1passwordmaccsv\", name: \"1Password 6 and 7 Mac (csv)\" },\n  { id: \"dashlanejson\", name: \"Dashlane (json)\" },\n  { id: \"roboformcsv\", name: \"RoboForm (csv)\" },\n  { id: \"keepercsv\", name: \"Keeper (csv)\" },\n  // Temporarily remove this option for the Feb release\n  // { id: \"keeperjson\", name: \"Keeper (json)\" },\n  { id: \"enpasscsv\", name: \"Enpass (csv)\" },\n  { id: \"enpassjson\", name: \"Enpass (json)\" },\n  { id: \"safeincloudxml\", name: \"SafeInCloud (xml)\" },\n  { id: \"pwsafexml\", name: \"Password Safe (xml)\" },\n  { id: \"stickypasswordxml\", name: \"Sticky Password (xml)\" },\n  { id: \"msecurecsv\", name: \"mSecure (csv)\" },\n  { id: \"truekeycsv\", name: \"True Key (csv)\" },\n  { id: \"passwordbossjson\", name: \"Password Boss (json)\" },\n  { id: \"zohovaultcsv\", name: \"Zoho Vault (csv)\" },\n  { id: \"splashidcsv\", name: \"SplashID (csv)\" },\n  { id: \"passworddragonxml\", name: \"Password Dragon (xml)\" },\n  { id: \"padlockcsv\", name: \"Padlock (csv)\" },\n  { id: \"passboltcsv\", name: \"Passbolt (csv)\" },\n  { id: \"clipperzhtml\", name: \"Clipperz (html)\" },\n  { id: \"aviracsv\", name: \"Avira (csv)\" },\n  { id: \"saferpasscsv\", name: \"SaferPass (csv)\" },\n  { id: \"upmcsv\", name: \"Universal Password Manager (csv)\" },\n  { id: \"ascendocsv\", name: \"Ascendo DataVault (csv)\" },\n  { id: \"meldiumcsv\", name: \"Meldium (csv)\" },\n  { id: \"passkeepcsv\", name: \"PassKeep (csv)\" },\n  { id: \"operacsv\", name: \"Opera (csv)\" },\n  { id: \"vivaldicsv\", name: \"Vivaldi (csv)\" },\n  { id: \"gnomejson\", name: \"GNOME Passwords and Keys/Seahorse (json)\" },\n  { id: \"blurcsv\", name: \"Blur (csv)\" },\n  { id: \"passwordagentcsv\", name: \"Password Agent (csv)\" },\n  { id: \"passpackcsv\", name: \"Passpack (csv)\" },\n  { id: \"passmanjson\", name: \"Passman (json)\" },\n  { id: \"avastcsv\", name: \"Avast Passwords (csv)\" },\n  { id: \"avastjson\", name: \"Avast Passwords (json)\" },\n  { id: \"fsecurefsk\", name: \"F-Secure KEY (fsk)\" },\n  { id: \"kasperskytxt\", name: \"Kaspersky Password Manager (txt)\" },\n  { id: \"remembearcsv\", name: \"RememBear (csv)\" },\n  { id: \"passwordwallettxt\", name: \"PasswordWallet (txt)\" },\n  { id: \"mykicsv\", name: \"Myki (csv)\" },\n  { id: \"securesafecsv\", name: \"SecureSafe (csv)\" },\n  { id: \"logmeoncecsv\", name: \"LogMeOnce (csv)\" },\n  { id: \"blackberrycsv\", name: \"BlackBerry Password Keeper (csv)\" },\n  { id: \"buttercupcsv\", name: \"Buttercup (csv)\" },\n  { id: \"codebookcsv\", name: \"Codebook (csv)\" },\n  { id: \"encryptrcsv\", name: \"Encryptr (csv)\" },\n  { id: \"yoticsv\", name: \"Yoti (csv)\" },\n  { id: \"nordpasscsv\", name: \"Nordpass (csv)\" },\n] as const;\n\nexport type ImportType =\n  | typeof featuredImportOptions[number][\"id\"]\n  | typeof regularImportOptions[number][\"id\"];\n","import { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class ImportResult {\n  success = false;\n  missingPassword = false;\n  errorMessage: string;\n  ciphers: CipherView[] = [];\n  folders: FolderView[] = [];\n  folderRelationships: [number, number][] = [];\n  collections: CollectionView[] = [];\n  collectionRelationships: [number, number][] = [];\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"browser-hrtime\");","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { Utils } from \"../misc/utils\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { LoginUriView } from \"../models/view/loginUriView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\nimport { ConsoleLogService } from \"../services/consoleLog.service\";\n\nexport abstract class BaseImporter {\n  organizationId: string = null;\n\n  protected logService: LogService = new ConsoleLogService(false);\n\n  protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n  protected passwordFieldNames = [\n    \"password\",\n    \"pass word\",\n    \"passphrase\",\n    \"pass phrase\",\n    \"pass\",\n    \"code\",\n    \"code word\",\n    \"codeword\",\n    \"secret\",\n    \"secret word\",\n    \"personpwd\",\n    \"key\",\n    \"keyword\",\n    \"key word\",\n    \"keyphrase\",\n    \"key phrase\",\n    \"form_pw\",\n    \"wppassword\",\n    \"pin\",\n    \"pwd\",\n    \"pw\",\n    \"pword\",\n    \"passwd\",\n    \"p\",\n    \"serial\",\n    \"serial#\",\n    \"license key\",\n    \"reg #\",\n\n    // Non-English names\n    \"passwort\",\n  ];\n\n  protected usernameFieldNames = [\n    \"user\",\n    \"name\",\n    \"user name\",\n    \"username\",\n    \"login name\",\n    \"email\",\n    \"e-mail\",\n    \"id\",\n    \"userid\",\n    \"user id\",\n    \"login\",\n    \"form_loginname\",\n    \"wpname\",\n    \"mail\",\n    \"loginid\",\n    \"login id\",\n    \"log\",\n    \"personlogin\",\n    \"first name\",\n    \"last name\",\n    \"card#\",\n    \"account #\",\n    \"member\",\n    \"member #\",\n\n    // Non-English names\n    \"nom\",\n    \"benutzername\",\n  ];\n\n  protected notesFieldNames = [\n    \"note\",\n    \"notes\",\n    \"comment\",\n    \"comments\",\n    \"memo\",\n    \"description\",\n    \"free form\",\n    \"freeform\",\n    \"free text\",\n    \"freetext\",\n    \"free\",\n\n    // Non-English names\n    \"kommentar\",\n  ];\n\n  protected uriFieldNames: string[] = [\n    \"url\",\n    \"hyper link\",\n    \"hyperlink\",\n    \"link\",\n    \"host\",\n    \"hostname\",\n    \"host name\",\n    \"server\",\n    \"address\",\n    \"hyper ref\",\n    \"href\",\n    \"web\",\n    \"website\",\n    \"web site\",\n    \"site\",\n    \"web-site\",\n    \"uri\",\n\n    // Non-English names\n    \"ort\",\n    \"adresse\",\n  ];\n\n  protected parseCsvOptions = {\n    encoding: \"UTF-8\",\n    skipEmptyLines: false,\n  };\n\n  protected get organization() {\n    return this.organizationId != null;\n  }\n\n  protected parseXml(data: string): Document {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(data, \"application/xml\");\n    return doc != null && doc.querySelector(\"parsererror\") == null ? doc : null;\n  }\n\n  protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n    const parseOptions: papa.ParseConfig<string> = Object.assign(\n      { header: header },\n      this.parseCsvOptions,\n      options\n    );\n    data = this.splitNewLine(data).join(\"\\n\").trim();\n    const result = papa.parse(data, parseOptions);\n    if (result.errors != null && result.errors.length > 0) {\n      result.errors.forEach((e) => {\n        if (e.row != null) {\n          this.logService.warning(\"Error parsing row \" + e.row + \": \" + e.message);\n        }\n      });\n    }\n    return result.data && result.data.length > 0 ? result.data : null;\n  }\n\n  protected parseSingleRowCsv(rowData: string) {\n    if (this.isNullOrWhitespace(rowData)) {\n      return null;\n    }\n    const parsedRow = this.parseCsv(rowData, false);\n    if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n      return parsedRow[0];\n    }\n    return null;\n  }\n\n  protected makeUriArray(uri: string | string[]): LoginUriView[] {\n    if (uri == null) {\n      return null;\n    }\n\n    if (typeof uri === \"string\") {\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.fixUri(uri);\n      if (this.isNullOrWhitespace(loginUri.uri)) {\n        return null;\n      }\n      loginUri.match = null;\n      return [loginUri];\n    }\n\n    if (uri.length > 0) {\n      const returnArr: LoginUriView[] = [];\n      uri.forEach((u) => {\n        const loginUri = new LoginUriView();\n        loginUri.uri = this.fixUri(u);\n        if (this.isNullOrWhitespace(loginUri.uri)) {\n          return;\n        }\n        loginUri.match = null;\n        returnArr.push(loginUri);\n      });\n      return returnArr.length === 0 ? null : returnArr;\n    }\n\n    return null;\n  }\n\n  protected fixUri(uri: string) {\n    if (uri == null) {\n      return null;\n    }\n    uri = uri.trim();\n    if (uri.indexOf(\"://\") === -1 && uri.indexOf(\".\") >= 0) {\n      uri = \"http://\" + uri;\n    }\n    if (uri.length > 1000) {\n      return uri.substring(0, 1000);\n    }\n    return uri;\n  }\n\n  protected nameFromUrl(url: string) {\n    const hostname = Utils.getHostname(url);\n    if (this.isNullOrWhitespace(hostname)) {\n      return null;\n    }\n    return hostname.startsWith(\"www.\") ? hostname.replace(\"www.\", \"\") : hostname;\n  }\n\n  protected isNullOrWhitespace(str: string): boolean {\n    return Utils.isNullOrWhitespace(str);\n  }\n\n  protected getValueOrDefault(str: string, defaultValue: string = null): string {\n    if (this.isNullOrWhitespace(str)) {\n      return defaultValue;\n    }\n    return str;\n  }\n\n  protected splitNewLine(str: string): string[] {\n    return str.split(this.newLineRegex);\n  }\n\n  // ref https://stackoverflow.com/a/5911300\n  protected getCardBrand(cardNum: string) {\n    if (this.isNullOrWhitespace(cardNum)) {\n      return null;\n    }\n\n    // Visa\n    let re = new RegExp(\"^4\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    // Mastercard\n    // Updated for Mastercard 2017 BINs expansion\n    if (\n      /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(\n        cardNum\n      )\n    ) {\n      return \"Mastercard\";\n    }\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (cardNum.match(re) != null) {\n      return \"Amex\";\n    }\n\n    // Discover\n    re = new RegExp(\n      \"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\"\n    );\n    if (cardNum.match(re) != null) {\n      return \"Discover\";\n    }\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (cardNum.match(re) != null) {\n      return \"JCB\";\n    }\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    return null;\n  }\n\n  protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n    if (!this.isNullOrWhitespace(expiration)) {\n      expiration = expiration.replace(/\\s/g, \"\");\n      const parts = expiration.split(\"/\");\n      if (parts.length === 2) {\n        let month: string = null;\n        let year: string = null;\n        if (parts[0].length === 1 || parts[0].length === 2) {\n          month = parts[0];\n          if (month.length === 2 && month[0] === \"0\") {\n            month = month.substr(1, 1);\n          }\n        }\n        if (parts[1].length === 2 || parts[1].length === 4) {\n          year = month.length === 2 ? \"20\" + parts[1] : parts[1];\n        }\n        if (month != null && year != null) {\n          cipher.card.expMonth = month;\n          cipher.card.expYear = year;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected moveFoldersToCollections(result: ImportResult) {\n    result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n    result.collections = result.folders.map((f) => {\n      const collection = new CollectionView();\n      collection.name = f.name;\n      return collection;\n    });\n    result.folderRelationships = [];\n    result.folders = [];\n  }\n\n  protected querySelectorDirectChild(parentEl: Element, query: string) {\n    const els = this.querySelectorAllDirectChild(parentEl, query);\n    return els.length === 0 ? null : els[0];\n  }\n\n  protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n    return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n  }\n\n  protected initLoginCipher() {\n    const cipher = new CipherView();\n    cipher.favorite = false;\n    cipher.notes = \"\";\n    cipher.fields = [];\n    cipher.login = new LoginView();\n    cipher.type = CipherType.Login;\n    return cipher;\n  }\n\n  protected cleanupCipher(cipher: CipherView) {\n    if (cipher == null) {\n      return;\n    }\n    if (cipher.type !== CipherType.Login) {\n      cipher.login = null;\n    }\n    if (this.isNullOrWhitespace(cipher.name)) {\n      cipher.name = \"--\";\n    }\n    if (this.isNullOrWhitespace(cipher.notes)) {\n      cipher.notes = null;\n    } else {\n      cipher.notes = cipher.notes.trim();\n    }\n    if (cipher.fields != null && cipher.fields.length === 0) {\n      cipher.fields = null;\n    }\n  }\n\n  protected processKvp(\n    cipher: CipherView,\n    key: string,\n    value: string,\n    type: FieldType = FieldType.Text\n  ) {\n    if (this.isNullOrWhitespace(value)) {\n      return;\n    }\n    if (this.isNullOrWhitespace(key)) {\n      key = \"\";\n    }\n    if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n      if (cipher.notes == null) {\n        cipher.notes = \"\";\n      }\n      cipher.notes += key + \": \" + this.splitNewLine(value).join(\"\\n\") + \"\\n\";\n    } else {\n      if (cipher.fields == null) {\n        cipher.fields = [];\n      }\n      const field = new FieldView();\n      field.type = type;\n      field.name = key;\n      field.value = value;\n      cipher.fields.push(field);\n    }\n  }\n\n  protected processFolder(result: ImportResult, folderName: string) {\n    let folderIndex = result.folders.length;\n    const hasFolder = !this.isNullOrWhitespace(folderName);\n    let addFolder = hasFolder;\n\n    if (hasFolder) {\n      for (let i = 0; i < result.folders.length; i++) {\n        if (result.folders[i].name === folderName) {\n          addFolder = false;\n          folderIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (addFolder) {\n      const f = new FolderView();\n      f.name = folderName;\n      result.folders.push(f);\n    }\n    if (hasFolder) {\n      result.folderRelationships.push([result.ciphers.length, folderIndex]);\n    }\n  }\n\n  protected convertToNoteIfNeeded(cipher: CipherView) {\n    if (\n      cipher.type === CipherType.Login &&\n      this.isNullOrWhitespace(cipher.login.username) &&\n      this.isNullOrWhitespace(cipher.login.password) &&\n      (cipher.login.uris == null || cipher.login.uris.length === 0)\n    ) {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    }\n  }\n\n  protected processFullName(cipher: CipherView, fullName: string) {\n    if (this.isNullOrWhitespace(fullName)) {\n      return;\n    }\n\n    const nameParts = fullName.split(\" \");\n    if (nameParts.length > 0) {\n      cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n    }\n    if (nameParts.length === 2) {\n      cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n    } else if (nameParts.length >= 3) {\n      cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n      cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(\" \");\n    }\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 2) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const val: string = value[i + 2];\n          const field: string = value[i + 1];\n          if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n            continue;\n          }\n\n          const fieldLower = field.toLowerCase();\n          if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n            cipher.login.password = this.getValueOrDefault(val);\n          } else if (\n            cipher.login.username == null &&\n            this.usernameFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.username = this.getValueOrDefault(val);\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n          } else {\n            this.processKvp(cipher, field, val);\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.login.uris = this.makeUriArray(value.web);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.username = this.getValueOrDefault(value.login);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results.logins != null) {\n      results.logins.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.pwd);\n        cipher.login.username = this.getValueOrDefault(value.loginName);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.notes != null) {\n      results.notes.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.name = this.getValueOrDefault(value.label);\n        cipher.notes = this.getValueOrDefault(value.text);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.cards != null) {\n      results.cards.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Card;\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (value.expirationDate != null) {\n          if (value.expirationDate.month != null) {\n            cipher.card.expMonth = value.expirationDate.month + \"\";\n          }\n          if (value.expirationDate.year != null) {\n            cipher.card.expYear = value.expirationDate.year + \"\";\n          }\n        }\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.name,\n        this.getValueOrDefault(this.nameFromUrl(value.website), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.website);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (\n        this.isNullOrWhitespace(value.username) &&\n        !this.isNullOrWhitespace(value.secondary_username)\n      ) {\n        cipher.login.username = value.secondary_username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.notes = this.getValueOrDefault(value.secondary_username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherRepromptType } from \"../enums/cipherRepromptType\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n        const collections = (value.collections as string).split(\",\");\n        collections.forEach((col) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === col) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = col;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization) {\n        this.processFolder(result, value.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.favorite =\n        !this.organization && this.getValueOrDefault(value.favorite, \"0\") !== \"0\" ? true : false;\n      cipher.type = CipherType.Login;\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      try {\n        cipher.reprompt = parseInt(\n          this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()),\n          10\n        );\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(\"Unable to parse reprompt value\", e);\n        cipher.reprompt = CipherRepromptType.None;\n      }\n\n      if (!this.isNullOrWhitespace(value.fields)) {\n        const fields = this.splitNewLine(value.fields);\n        for (let i = 0; i < fields.length; i++) {\n          if (this.isNullOrWhitespace(fields[i])) {\n            continue;\n          }\n\n          const delimPosition = fields[i].lastIndexOf(\": \");\n          if (delimPosition === -1) {\n            continue;\n          }\n\n          if (cipher.fields == null) {\n            cipher.fields = [];\n          }\n\n          const field = new FieldView();\n          field.name = fields[i].substr(0, delimPosition);\n          field.value = null;\n          field.type = FieldType.Text;\n          if (fields[i].length > delimPosition + 2) {\n            field.value = fields[i].substr(delimPosition + 2);\n          }\n          cipher.fields.push(field);\n        }\n      }\n\n      const valueType = value.type != null ? value.type.toLowerCase() : null;\n      switch (valueType) {\n        case \"note\":\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote = new SecureNoteView();\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default: {\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n          cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n          cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n          const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n          cipher.login.uris = this.makeUriArray(uris);\n          break;\n        }\n      }\n\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherWithIds } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId } from \"../models/export/collectionWithId\";\nimport { FolderWithId } from \"../models/export/folderWithId\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n  private results: any;\n  private result: ImportResult;\n\n  constructor(protected cryptoService: CryptoService, protected i18nService: I18nService) {\n    super();\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    this.results = JSON.parse(data);\n    if (this.results == null || this.results.items == null) {\n      if (this.results?.passwordProtected) {\n        this.result.success = false;\n        this.result.missingPassword = true;\n        this.result.errorMessage = this.i18nService.t(\"importPasswordRequired\");\n        return this.result;\n      }\n\n      this.result.success = false;\n      return this.result;\n    }\n\n    if (this.results.encrypted) {\n      await this.parseEncrypted();\n    } else {\n      this.parseDecrypted();\n    }\n\n    return this.result;\n  }\n\n  private async parseEncrypted() {\n    if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n      const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n      const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n        encKeyValidation,\n        orgKey\n      );\n      if (encKeyValidationDecrypt === null) {\n        this.result.success = false;\n        this.result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n        return;\n      }\n    }\n\n    const groupingsMap = new Map<string, number>();\n\n    if (this.organization && this.results.collections != null) {\n      for (const c of this.results.collections as CollectionWithId[]) {\n        const collection = CollectionWithId.toDomain(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = this.organizationId;\n          const view = await collection.decrypt();\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(view);\n        }\n      }\n    } else if (!this.organization && this.results.folders != null) {\n      for (const f of this.results.folders as FolderWithId[]) {\n        const folder = FolderWithId.toDomain(f);\n        if (folder != null) {\n          folder.id = null;\n          const view = await folder.decrypt();\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(view);\n        }\n      }\n    }\n\n    for (const c of this.results.items as CipherWithIds[]) {\n      const cipher = CipherWithIds.toDomain(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = this.organizationId;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      const view = await cipher.decrypt();\n      this.cleanupCipher(view);\n      this.result.ciphers.push(view);\n    }\n\n    this.result.success = true;\n  }\n\n  private parseDecrypted() {\n    const groupingsMap = new Map<string, number>();\n    if (this.organization && this.results.collections != null) {\n      this.results.collections.forEach((c: CollectionWithId) => {\n        const collection = CollectionWithId.toView(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = null;\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(collection);\n        }\n      });\n    } else if (!this.organization && this.results.folders != null) {\n      this.results.folders.forEach((f: FolderWithId) => {\n        const folder = FolderWithId.toView(f);\n        if (folder != null) {\n          folder.id = null;\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(folder);\n        }\n      });\n    }\n\n    this.results.items.forEach((c: CipherWithIds) => {\n      const cipher = CipherWithIds.toView(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = null;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { BitwardenJsonImporter } from \"./bitwardenJsonImporter\";\nimport { Importer } from \"./importer\";\n\ninterface BitwardenPasswordProtectedFileFormat {\n  encrypted: boolean;\n  passwordProtected: boolean;\n  salt: string;\n  kdfIterations: number;\n  kdfType: number;\n  encKeyValidation_DO_NOT_EDIT: string;\n  data: string;\n}\n\nexport class BitwardenPasswordProtectedImporter extends BitwardenJsonImporter implements Importer {\n  private key: SymmetricCryptoKey;\n\n  constructor(cryptoService: CryptoService, i18nService: I18nService, private password: string) {\n    super(cryptoService, i18nService);\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const parsedData = JSON.parse(data);\n    if (this.cannotParseFile(parsedData)) {\n      result.success = false;\n      return result;\n    }\n\n    if (!(await this.checkPassword(parsedData))) {\n      result.success = false;\n      result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n      return result;\n    }\n\n    const encData = new EncString(parsedData.data);\n    const clearTextData = await this.cryptoService.decryptToUtf8(encData, this.key);\n    return await super.parse(clearTextData);\n  }\n\n  private async checkPassword(jdoc: BitwardenPasswordProtectedFileFormat): Promise<boolean> {\n    this.key = await this.cryptoService.makePinKey(\n      this.password,\n      jdoc.salt,\n      KdfType.PBKDF2_SHA256,\n      jdoc.kdfIterations\n    );\n\n    const encKeyValidation = new EncString(jdoc.encKeyValidation_DO_NOT_EDIT);\n\n    const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n      encKeyValidation,\n      this.key\n    );\n    if (encKeyValidationDecrypt === null) {\n      return false;\n    }\n    return true;\n  }\n\n  private cannotParseFile(jdoc: BitwardenPasswordProtectedFileFormat): boolean {\n    return (\n      !jdoc ||\n      !jdoc.encrypted ||\n      !jdoc.passwordProtected ||\n      !jdoc.salt ||\n      !jdoc.kdfIterations ||\n      typeof jdoc.kdfIterations !== \"number\" ||\n      jdoc.kdfType == null ||\n      KdfType[jdoc.kdfType] == null ||\n      !jdoc.encKeyValidation_DO_NOT_EDIT ||\n      !jdoc.data\n    );\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.grouping === \"list\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.favorite = value.fav === \"1\";\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.extra);\n      if (value.grouping !== \"note\") {\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.label === \"null\") {\n        value.label = null;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.label,\n        this.getValueOrDefault(this.nameFromUrl(value.domain), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.domain);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n        cipher.login.username = value.username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.email);\n        cipher.notes = this.getValueOrDefault(value.username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst OfficialProps = [\"!group_id\", \"!group_name\", \"title\", \"username\", \"password\", \"URL\", \"id\"];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value[\"!group_name\"]));\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      let processingCustomFields = false;\n      for (const prop in value) {\n        // eslint-disable-next-line\n        if (value.hasOwnProperty(prop)) {\n          if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n            processingCustomFields = true;\n          }\n          if (processingCustomFields) {\n            this.processKvp(cipher, prop, value[prop]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const textarea = doc.querySelector(\"textarea\");\n    if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n      result.errorMessage = \"Missing textarea.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const entries = JSON.parse(textarea.textContent);\n    entries.forEach((entry: any) => {\n      const cipher = this.initLoginCipher();\n      if (!this.isNullOrWhitespace(entry.label)) {\n        cipher.name = entry.label.split(\" \")[0];\n      }\n      if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n        cipher.notes = entry.data.notes.split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n        for (const property in entry.currentVersion.fields) {\n          // eslint-disable-next-line\n          if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n            continue;\n          }\n\n          const field = entry.currentVersion.fields[property];\n          const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n          switch (actionType) {\n            case \"password\":\n              cipher.login.password = this.getValueOrDefault(field.value);\n              break;\n            case \"email\":\n            case \"username\":\n            case \"user\":\n            case \"name\":\n              cipher.login.username = this.getValueOrDefault(field.value);\n              break;\n            case \"url\":\n              cipher.login.uris = this.makeUriArray(field.value);\n              break;\n            default: {\n              const labelLower = field.label != null ? field.label.toLowerCase() : null;\n              if (\n                cipher.login.password == null &&\n                this.passwordFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.password = this.getValueOrDefault(field.value);\n              } else if (\n                cipher.login.username == null &&\n                this.usernameFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.username = this.getValueOrDefault(field.value);\n              } else if (\n                (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                this.uriFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.uris = this.makeUriArray(field.value);\n              } else {\n                this.processKvp(cipher, field.label, field.value);\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value.Category));\n\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite) === \"True\";\n      cipher.name = this.getValueOrDefault(value.Entry, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.totp = this.getValueOrDefault(value.TOTP);\n      cipher.login.uris = this.makeUriArray(value.Website);\n\n      if (!this.isNullOrWhitespace(value.Username)) {\n        this.processKvp(cipher, \"Email\", value.Email);\n      }\n      this.processKvp(cipher, \"Phone\", value.Phone);\n      this.processKvp(cipher, \"PIN\", value.PIN);\n      this.processKvp(cipher, \"Account\", value.Account);\n      this.processKvp(cipher, \"Date\", value.Date);\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport {\n  CredentialsRecord,\n  IdRecord,\n  PaymentsRecord,\n  PersonalInformationRecord,\n  SecureNoteRecord,\n} from \"./types/dashlaneCsvTypes\";\n\nconst _mappedCredentialsColums = new Set([\n  \"title\",\n  \"note\",\n  \"username\",\n  \"password\",\n  \"url\",\n  \"otpSecret\",\n  \"category\",\n]);\n\nconst _mappedPersonalInfoAsIdentiyColumns = new Set([\n  \"type\",\n  \"title\",\n  \"first_name\",\n  \"middle_name\",\n  \"last_name\",\n  \"login\",\n  \"email\",\n  \"phone_number\",\n  \"address\",\n  \"country\",\n  \"state\",\n  \"city\",\n  \"zip\",\n  // Skip item_name as we already have set a combined name\n  \"item_name\",\n]);\n\nconst _mappedSecureNoteColumns = new Set([\"title\", \"note\"]);\n\nexport class DashlaneCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results[0].type != null && results[0].title != null) {\n      const personalRecords = results as PersonalInformationRecord[];\n\n      // If personalRecords has only one \"name\" then create an Identity-Cipher\n      if (personalRecords.filter((x) => x.type === \"name\").length === 1) {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        results.forEach((row) => {\n          this.parsePersonalInformationRecordAsIdentity(cipher, row);\n        });\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n        result.success = true;\n        return Promise.resolve(result);\n      }\n    }\n\n    results.forEach((row) => {\n      const cipher = this.initLoginCipher();\n\n      const rowKeys = Object.keys(row);\n      if (rowKeys[0] === \"username\") {\n        this.processFolder(result, row.category);\n        this.parseCredentialsRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"type\" && rowKeys[1] === \"account_name\") {\n        this.parsePaymentRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"type\" && rowKeys[1] === \"number\") {\n        this.parseIdRecord(cipher, row);\n      }\n\n      if ((rowKeys[0] === \"type\") != null && rowKeys[1] === \"title\") {\n        this.parsePersonalInformationRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"title\" && rowKeys[1] === \"note\") {\n        this.parseSecureNoteRecords(cipher, row);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  parseCredentialsRecord(cipher: CipherView, row: CredentialsRecord) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    cipher.name = row.title;\n    cipher.notes = row.note;\n    cipher.login.username = row.username;\n    cipher.login.password = row.password;\n    cipher.login.totp = row.otpSecret;\n    cipher.login.uris = this.makeUriArray(row.url);\n\n    this.importUnmappedFields(cipher, row, _mappedCredentialsColums);\n  }\n\n  parsePaymentRecord(cipher: CipherView, row: PaymentsRecord) {\n    cipher.type = CipherType.Card;\n    cipher.card = new CardView();\n\n    cipher.name = row.account_name;\n    let mappedValues: string[] = [];\n    switch (row.type) {\n      case \"credit_card\":\n        cipher.card.cardholderName = row.account_name;\n        cipher.card.number = row.cc_number;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = row.code;\n        cipher.card.expMonth = row.expiration_month;\n        cipher.card.expYear = row.expiration_year.substring(2, 4);\n\n        // If you add more mapped fields please extend this\n        mappedValues = [\n          \"account_name\",\n          \"account_holder\",\n          \"cc_number\",\n          \"code\",\n          \"expiration_month\",\n          \"expiration_year\",\n        ];\n        break;\n      case \"bank\":\n        cipher.card.cardholderName = row.account_holder;\n        cipher.card.number = row.account_number;\n\n        // If you add more mapped fields please extend this\n        mappedValues = [\"account_name\", \"account_holder\", \"account_number\"];\n        break;\n      default:\n        break;\n    }\n\n    this.importUnmappedFields(cipher, row, new Set(mappedValues));\n  }\n\n  parseIdRecord(cipher: CipherView, row: IdRecord) {\n    cipher.type = CipherType.Identity;\n    cipher.identity = new IdentityView();\n\n    const mappedValues: string[] = [\"name\", \"number\"];\n    switch (row.type) {\n      case \"card\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.licenseNumber = row.number;\n        break;\n      case \"passport\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.passportNumber = row.number;\n        break;\n      case \"license\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.licenseNumber = row.number;\n        cipher.identity.state = row.state;\n\n        mappedValues.push(\"state\");\n        break;\n      case \"social_security\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.ssn = row.number;\n        break;\n      case \"tax_number\":\n        cipher.name = row.type;\n        cipher.identity.licenseNumber = row.number;\n        break;\n\n      default:\n        break;\n    }\n\n    // If you add more mapped fields please extend this\n    this.importUnmappedFields(cipher, row, new Set(mappedValues));\n  }\n\n  parsePersonalInformationRecord(cipher: CipherView, row: PersonalInformationRecord) {\n    cipher.type = CipherType.SecureNote;\n    cipher.secureNote.type = SecureNoteType.Generic;\n    if (row.type === \"name\") {\n      cipher.name = `${row.title} ${row.first_name} ${row.middle_name} ${row.last_name}`\n        .replace(\"  \", \" \")\n        .trim();\n    } else {\n      cipher.name = row.item_name;\n    }\n\n    const dataRow = row as any;\n    Object.keys(row).forEach((key) => {\n      this.processKvp(cipher, key, dataRow[key]);\n    });\n  }\n\n  parsePersonalInformationRecordAsIdentity(cipher: CipherView, row: PersonalInformationRecord) {\n    switch (row.type) {\n      case \"name\":\n        this.processFullName(cipher, `${row.first_name} ${row.middle_name} ${row.last_name}`);\n        cipher.identity.title = row.title;\n        cipher.name = cipher.identity.fullName;\n\n        cipher.identity.username = row.login;\n        break;\n      case \"email\":\n        cipher.identity.email = row.email;\n        break;\n      case \"number\":\n        cipher.identity.phone = row.phone_number;\n        break;\n      case \"address\":\n        cipher.identity.address1 = row.address;\n        cipher.identity.city = row.city;\n        cipher.identity.postalCode = row.zip;\n        cipher.identity.state = row.state;\n        cipher.identity.country = row.country;\n        break;\n      default:\n        break;\n    }\n\n    this.importUnmappedFields(cipher, row, _mappedPersonalInfoAsIdentiyColumns);\n  }\n\n  parseSecureNoteRecords(cipher: CipherView, row: SecureNoteRecord) {\n    cipher.type = CipherType.SecureNote;\n    cipher.secureNote.type = SecureNoteType.Generic;\n    cipher.name = row.title;\n    cipher.notes = row.note;\n\n    this.importUnmappedFields(cipher, row, _mappedSecureNoteColumns);\n  }\n\n  importUnmappedFields(cipher: CipherView, row: any, mappedValues: Set<string>) {\n    const unmappedFields = Object.keys(row).filter((x) => !mappedValues.has(x));\n    unmappedFields.forEach((key) => {\n      const item = row as any;\n      this.processKvp(cipher, key, item[key]);\n    });\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nconst HandledResults = new Set([\n  \"ADDRESS\",\n  \"AUTHENTIFIANT\",\n  \"BANKSTATEMENT\",\n  \"IDCARD\",\n  \"IDENTITY\",\n  \"PAYMENTMEANS_CREDITCARD\",\n  \"PAYMENTMEAN_PAYPAL\",\n  \"EMAIL\",\n]);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n  private result: ImportResult;\n\n  parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    if (results.ADDRESS != null) {\n      this.processAddress(results.ADDRESS);\n    }\n    if (results.AUTHENTIFIANT != null) {\n      this.processAuth(results.AUTHENTIFIANT);\n    }\n    if (results.BANKSTATEMENT != null) {\n      this.processNote(results.BANKSTATEMENT, \"BankAccountName\");\n    }\n    if (results.IDCARD != null) {\n      this.processNote(results.IDCARD, \"Fullname\");\n    }\n    if (results.PAYMENTMEANS_CREDITCARD != null) {\n      this.processCard(results.PAYMENTMEANS_CREDITCARD);\n    }\n    if (results.IDENTITY != null) {\n      this.processIdentity(results.IDENTITY);\n    }\n\n    for (const key in results) {\n      // eslint-disable-next-line\n      if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n        this.processNote(results[key], null, \"Generic Note\");\n      }\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processAuth(results: any[]) {\n    results.forEach((credential: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(credential.title);\n\n      cipher.login.username = this.getValueOrDefault(\n        credential.login,\n        this.getValueOrDefault(credential.secondaryLogin)\n      );\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.domain);\n      cipher.notes += this.getValueOrDefault(credential.note, \"\");\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processIdentity(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.fullName, \"\");\n      const nameParts = cipher.name.split(\" \");\n      if (nameParts.length > 0) {\n        cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n      }\n      if (nameParts.length === 2) {\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n      } else if (nameParts.length === 3) {\n        cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n      }\n      cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processAddress(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.addressName);\n      cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n      cipher.identity.city = this.getValueOrDefault(obj.city);\n      cipher.identity.state = this.getValueOrDefault(obj.state);\n      cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n      cipher.identity.country = this.getValueOrDefault(obj.country);\n      if (cipher.identity.country != null) {\n        cipher.identity.country = cipher.identity.country.toUpperCase();\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processCard(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.card = new CardView();\n      cipher.type = CipherType.Card;\n      cipher.name = this.getValueOrDefault(obj.bank);\n      cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n      cipher.card.brand = this.getCardBrand(cipher.card.number);\n      cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n      if (!this.isNullOrWhitespace(cipher.card.brand)) {\n        if (this.isNullOrWhitespace(cipher.name)) {\n          cipher.name = cipher.card.brand;\n        } else {\n          cipher.name += \" - \" + cipher.card.brand;\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processNote(results: any[], nameProperty: string, name: string = null) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.secureNote = new SecureNoteView();\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote.type = SecureNoteType.Generic;\n      if (name != null) {\n        cipher.name = name;\n      } else {\n        cipher.name = this.getValueOrDefault(obj[nameProperty]);\n      }\n      for (const key in obj) {\n        // eslint-disable-next-line\n        if (obj.hasOwnProperty(key) && key !== nameProperty) {\n          this.processKvp(cipher, key, obj[key].toString());\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Label, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      const text = this.getValueOrDefault(value.Text);\n      if (!this.isNullOrWhitespace(text)) {\n        if (this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = text;\n        } else {\n          cipher.notes += \"\\n\\n\" + text;\n        }\n      }\n\n      const type = value[\"Entry Type\"];\n      if (type === \"Password\") {\n        cipher.login.username = this.getValueOrDefault(value.Username);\n        cipher.login.password = this.getValueOrDefault(value.Password);\n        cipher.login.uris = this.makeUriArray(value[\"Site URL\"]);\n      } else if (type === \"Credit Card\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value[\"Name on card\"]);\n        cipher.card.number = this.getValueOrDefault(value[\"Card Number\"]);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.CVV);\n        const expiry = this.getValueOrDefault(value.Expiry);\n        if (!this.isNullOrWhitespace(expiry)) {\n          const expParts = expiry.split(\"/\");\n          if (expParts.length > 1) {\n            cipher.card.expMonth = parseInt(expParts[0], null).toString();\n            cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let firstRow = true;\n    results.forEach((value) => {\n      if (value.length < 2 || (firstRow && (value[0] === \"Title\" || value[0] === \"title\"))) {\n        firstRow = false;\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (\n        value.length === 2 ||\n        (!this.containsField(value, \"username\") &&\n          !this.containsField(value, \"password\") &&\n          !this.containsField(value, \"email\") &&\n          !this.containsField(value, \"url\"))\n      ) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      }\n\n      if (\n        this.containsField(value, \"cardholder\") &&\n        this.containsField(value, \"number\") &&\n        this.containsField(value, \"expiry date\")\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      }\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const fieldValue: string = value[i + 2];\n          if (this.isNullOrWhitespace(fieldValue)) {\n            continue;\n          }\n\n          const fieldName: string = value[i + 1];\n          const fieldNameLower = fieldName.toLowerCase();\n\n          if (cipher.type === CipherType.Login) {\n            if (\n              fieldNameLower === \"url\" &&\n              (cipher.login.uris == null || cipher.login.uris.length === 0)\n            ) {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              continue;\n            } else if (\n              (fieldNameLower === \"username\" || fieldNameLower === \"email\") &&\n              this.isNullOrWhitespace(cipher.login.username)\n            ) {\n              cipher.login.username = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"password\" &&\n              this.isNullOrWhitespace(cipher.login.password)\n            ) {\n              cipher.login.password = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n              cipher.login.totp = fieldValue;\n              continue;\n            }\n          } else if (cipher.type === CipherType.Card) {\n            if (\n              fieldNameLower === \"cardholder\" &&\n              this.isNullOrWhitespace(cipher.card.cardholderName)\n            ) {\n              cipher.card.cardholderName = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"number\" && this.isNullOrWhitespace(cipher.card.number)) {\n              cipher.card.number = fieldValue;\n              cipher.card.brand = this.getCardBrand(fieldValue);\n              continue;\n            } else if (fieldNameLower === \"cvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n              cipher.card.code = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"expiry date\" &&\n              this.isNullOrWhitespace(cipher.card.expMonth) &&\n              this.isNullOrWhitespace(cipher.card.expYear)\n            ) {\n              if (this.setCardExpiration(cipher, fieldValue)) {\n                continue;\n              }\n            } else if (fieldNameLower === \"type\") {\n              // Skip since brand was determined from number above\n              continue;\n            }\n          }\n\n          this.processKvp(cipher, fieldName, fieldValue);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private containsField(fields: any[], name: string) {\n    if (fields == null || name == null) {\n      return false;\n    }\n    return (\n      fields.filter((f) => !this.isNullOrWhitespace(f) && f.toLowerCase() === name.toLowerCase())\n        .length > 0\n    );\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null || results.items.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    const foldersIndexMap = new Map<string, number>();\n    const folderTree = this.buildFolderTree(results.folders);\n    this.flattenFolderTree(null, folderTree, foldersMap);\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((item: any) => {\n      if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n        result.folderRelationships.push([\n          result.ciphers.length,\n          foldersIndexMap.get(item.folders[0]),\n        ]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(item.title);\n      cipher.favorite = item.favorite > 0;\n\n      if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n        if (\n          item.template_type.indexOf(\"login.\") === 0 ||\n          item.template_type.indexOf(\"password.\") === 0\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else if (item.template_type.indexOf(\"creditcard.\") === 0) {\n          this.processCard(cipher, item.fields);\n        } else if (\n          item.template_type.indexOf(\"identity.\") < 0 &&\n          item.fields.some((f: any) => f.type === \"password\" && !this.isNullOrWhitespace(f.value))\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else {\n          this.processNote(cipher, item.fields);\n        }\n      }\n\n      cipher.notes += \"\\n\" + this.getValueOrDefault(item.note, \"\");\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private processLogin(cipher: CipherView, fields: any[]) {\n    const urls: string[] = [];\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n\n      if (\n        (field.type === \"username\" || field.type === \"email\") &&\n        this.isNullOrWhitespace(cipher.login.username)\n      ) {\n        cipher.login.username = field.value;\n      } else if (field.type === \"password\" && this.isNullOrWhitespace(cipher.login.password)) {\n        cipher.login.password = field.value;\n      } else if (field.type === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n        cipher.login.totp = field.value;\n      } else if (field.type === \"url\") {\n        urls.push(field.value);\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n    cipher.login.uris = this.makeUriArray(urls);\n  }\n\n  private processCard(cipher: CipherView, fields: any[]) {\n    cipher.card = new CardView();\n    cipher.type = CipherType.Card;\n    fields.forEach((field: any) => {\n      if (\n        this.isNullOrWhitespace(field.value) ||\n        field.type === \"section\" ||\n        field.type === \"ccType\"\n      ) {\n        return;\n      }\n\n      if (field.type === \"ccName\" && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n        cipher.card.cardholderName = field.value;\n      } else if (field.type === \"ccNumber\" && this.isNullOrWhitespace(cipher.card.number)) {\n        cipher.card.number = field.value;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n      } else if (field.type === \"ccCvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n        cipher.card.code = field.value;\n      } else if (field.type === \"ccExpiry\" && this.isNullOrWhitespace(cipher.card.expYear)) {\n        if (!this.setCardExpiration(cipher, field.value)) {\n          this.processKvp(\n            cipher,\n            field.label,\n            field.value,\n            field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n          );\n        }\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n  }\n\n  private processNote(cipher: CipherView, fields: any[]) {\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n      this.processKvp(\n        cipher,\n        field.label,\n        field.value,\n        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n      );\n    });\n  }\n\n  private buildFolderTree(folders: any[]): any[] {\n    if (folders == null) {\n      return [];\n    }\n    const folderTree: any[] = [];\n    const map = new Map<string, any>([]);\n    folders.forEach((obj: any) => {\n      map.set(obj.uuid, obj);\n      obj.children = [];\n    });\n    folders.forEach((obj: any) => {\n      if (obj.parent_uuid != null && obj.parent_uuid !== \"\" && map.has(obj.parent_uuid)) {\n        map.get(obj.parent_uuid).children.push(obj);\n      } else {\n        folderTree.push(obj);\n      }\n    });\n    return folderTree;\n  }\n\n  private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n    if (tree == null) {\n      return;\n    }\n    tree.forEach((f: any) => {\n      if (f.title != null && f.title.trim() !== \"\") {\n        let title = f.title.trim();\n        if (titlePrefix != null && titlePrefix.trim() !== \"\") {\n          title = titlePrefix + \"/\" + title;\n        }\n        map.set(f.uuid, title);\n        if (f.children != null && f.children.length !== 0) {\n          this.flattenFolderTree(title, f.children, map);\n        }\n      }\n    });\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results\n      .filter((value) => {\n        return value.url !== \"chrome://FirefoxAccounts\";\n      })\n      .forEach((value) => {\n        const cipher = this.initLoginCipher();\n        const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n        cipher.name = this.getValueOrDefault(this.nameFromUrl(url), \"--\");\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(url);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.data == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const key in results.data) {\n      // eslint-disable-next-line\n      if (!results.data.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const value = results.data[key];\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.service);\n      cipher.notes = this.getValueOrDefault(value.notes);\n\n      if (value.style === \"website\" || value.style === \"globe\") {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(value.url);\n      } else if (value.style === \"creditcard\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.username);\n        cipher.card.number = this.getValueOrDefault(value.creditNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.creditCvv);\n        if (!this.isNullOrWhitespace(value.creditExpiry)) {\n          if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n            this.processKvp(cipher, \"Expiration\", value.creditExpiry);\n          }\n        }\n        if (!this.isNullOrWhitespace(value.password)) {\n          this.processKvp(cipher, \"PIN\", value.password);\n        }\n      } else {\n        continue;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || Object.keys(results).length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const keyRing in results) {\n      if (\n        !results.hasOwnProperty(keyRing) || // eslint-disable-line\n        this.isNullOrWhitespace(keyRing) ||\n        results[keyRing].length === 0\n      ) {\n        continue;\n      }\n\n      results[keyRing].forEach((value: any) => {\n        if (\n          this.isNullOrWhitespace(value.display_name) ||\n          value.display_name.indexOf(\"http\") !== 0\n        ) {\n          return;\n        }\n\n        this.processFolder(result, keyRing);\n        const cipher = this.initLoginCipher();\n        cipher.name = value.display_name.replace(\"http://\", \"\").replace(\"https://\", \"\");\n        if (cipher.name.length > 30) {\n          cipher.name = cipher.name.substring(0, 30);\n        }\n        cipher.login.password = this.getValueOrDefault(value.secret);\n        cipher.login.uris = this.makeUriArray(value.display_name);\n\n        if (value.attributes != null) {\n          cipher.login.username =\n            value.attributes != null\n              ? this.getValueOrDefault(value.attributes.username_value)\n              : null;\n          for (const attr in value.attributes) {\n            if (\n              !value.attributes.hasOwnProperty(attr) || // eslint-disable-line\n              attr === \"username_value\" ||\n              attr === \"xdg:schema\"\n            ) {\n              continue;\n            }\n            this.processKvp(cipher, attr, value.attributes[attr]);\n          }\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","export class ImportError extends Error {\n  constructor(message?: string, public passwordRequired: boolean = false) {\n    super(message);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst NotesHeader = \"Notes\\n\\n\";\nconst ApplicationsHeader = \"Applications\\n\\n\";\nconst WebsitesHeader = \"Websites\\n\\n\";\nconst Delimiter = \"\\n---\\n\";\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n\n    let notesData: string;\n    let applicationsData: string;\n    let websitesData: string;\n    let workingData = this.splitNewLine(data).join(\"\\n\");\n\n    if (workingData.indexOf(NotesHeader) !== -1) {\n      const parts = workingData.split(NotesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        notesData = parts[1];\n      }\n    }\n    if (workingData.indexOf(ApplicationsHeader) !== -1) {\n      const parts = workingData.split(ApplicationsHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        applicationsData = parts[1];\n      }\n    }\n    if (workingData.indexOf(WebsitesHeader) === 0) {\n      const parts = workingData.split(WebsitesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        websitesData = parts[1];\n      }\n    }\n\n    const notes = this.parseDataCategory(notesData);\n    const applications = this.parseDataCategory(applicationsData);\n    const websites = this.parseDataCategory(websitesData);\n\n    notes.forEach((n) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(n.get(\"Name\"));\n      cipher.notes = this.getValueOrDefault(n.get(\"Text\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    websites.concat(applications).forEach((w) => {\n      const cipher = this.initLoginCipher();\n      const nameKey = w.has(\"Website name\") ? \"Website name\" : \"Application\";\n      cipher.name = this.getValueOrDefault(w.get(nameKey), \"\");\n      if (!this.isNullOrWhitespace(w.get(\"Login name\"))) {\n        if (!this.isNullOrWhitespace(cipher.name)) {\n          cipher.name += \": \";\n        }\n        cipher.name += w.get(\"Login name\");\n      }\n      cipher.notes = this.getValueOrDefault(w.get(\"Comment\"));\n      if (w.has(\"Website URL\")) {\n        cipher.login.uris = this.makeUriArray(w.get(\"Website URL\"));\n      }\n      cipher.login.username = this.getValueOrDefault(w.get(\"Login\"));\n      cipher.login.password = this.getValueOrDefault(w.get(\"Password\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseDataCategory(data: string): Map<string, string>[] {\n    if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n      return [];\n    }\n    const items: Map<string, string>[] = [];\n    data.split(Delimiter).forEach((p) => {\n      if (p.indexOf(\"\\n\") === -1) {\n        return;\n      }\n      const item = new Map<string, string>();\n      let itemComment: string;\n      let itemCommentKey: string;\n      p.split(\"\\n\").forEach((l) => {\n        if (itemComment != null) {\n          itemComment += \"\\n\" + l;\n          return;\n        }\n        const colonIndex = l.indexOf(\":\");\n        let key: string;\n        let val: string;\n        if (colonIndex === -1) {\n          return;\n        } else {\n          key = l.substring(0, colonIndex);\n          if (l.length > colonIndex + 1) {\n            val = l.substring(colonIndex + 2);\n          }\n        }\n        if (key != null) {\n          item.set(key, val);\n        }\n        if (key === \"Comment\" || key === \"Text\") {\n          itemComment = val;\n          itemCommentKey = key;\n        }\n      });\n      if (itemComment != null && itemCommentKey != null) {\n        item.set(itemCommentKey, itemComment);\n      }\n      if (item.size === 0) {\n        return;\n      }\n      items.push(item);\n    });\n    return items;\n  }\n}\n","import { FieldType } from \"../enums/fieldType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    const rootGroup = doc.querySelector(\"KeePassFile > Root > Group\");\n    if (rootGroup == null) {\n      this.result.errorMessage = \"Missing `KeePassFile > Root > Group` node.\";\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    this.traverse(rootGroup, true, \"\");\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n    const folderIndex = this.result.folders.length;\n    let groupName = groupPrefixName;\n\n    if (!isRootNode) {\n      if (groupName !== \"\") {\n        groupName += \"/\";\n      }\n      const nameEl = this.querySelectorDirectChild(node, \"Name\");\n      groupName += nameEl == null ? \"-\" : nameEl.textContent;\n      const folder = new FolderView();\n      folder.name = groupName;\n      this.result.folders.push(folder);\n    }\n\n    this.querySelectorAllDirectChild(node, \"Entry\").forEach((entry) => {\n      const cipherIndex = this.result.ciphers.length;\n\n      const cipher = this.initLoginCipher();\n      this.querySelectorAllDirectChild(entry, \"String\").forEach((entryString) => {\n        const valueEl = this.querySelectorDirectChild(entryString, \"Value\");\n        const value = valueEl != null ? valueEl.textContent : null;\n        if (this.isNullOrWhitespace(value)) {\n          return;\n        }\n        const keyEl = this.querySelectorDirectChild(entryString, \"Key\");\n        const key = keyEl != null ? keyEl.textContent : null;\n\n        if (key === \"URL\") {\n          cipher.login.uris = this.makeUriArray(value);\n        } else if (key === \"UserName\") {\n          cipher.login.username = value;\n        } else if (key === \"Password\") {\n          cipher.login.password = value;\n        } else if (key === \"otp\") {\n          cipher.login.totp = value.replace(\"key=\", \"\");\n        } else if (key === \"Title\") {\n          cipher.name = value;\n        } else if (key === \"Notes\") {\n          cipher.notes += value + \"\\n\";\n        } else {\n          let type = FieldType.Text;\n          const attrs = valueEl.attributes as any;\n          if (\n            attrs.length > 0 &&\n            attrs.ProtectInMemory != null &&\n            attrs.ProtectInMemory.value === \"True\"\n          ) {\n            type = FieldType.Hidden;\n          }\n          this.processKvp(cipher, key, value, type);\n        }\n      });\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n\n      if (!isRootNode) {\n        this.result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    this.querySelectorAllDirectChild(node, \"Group\").forEach((group) => {\n      this.traverse(group, false, groupName);\n    });\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(value.Title)) {\n        return;\n      }\n\n      value.Group =\n        !this.isNullOrWhitespace(value.Group) && value.Group.startsWith(\"Root/\")\n          ? value.Group.replace(\"Root/\", \"\")\n          : value.Group;\n      const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n      this.processFolder(result, groupName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../../models/domain/importResult\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 6) {\n        return;\n      }\n\n      this.processFolder(result, value[0]);\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[5]) + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[4]);\n\n      if (value.length > 7) {\n        // we have some custom fields.\n        for (let i = 7; i < value.length; i = i + 2) {\n          this.processKvp(cipher, value[i], value[i + 1]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipherIndex = result.ciphers.length;\n      let folderIndex = result.folders.length;\n      let grouping = value.grouping;\n      if (grouping != null) {\n        // eslint-disable-next-line\n        grouping = grouping.replace(/\\\\/g, \"/\").replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, \"\");\n      }\n      const hasFolder = this.getValueOrDefault(grouping, \"(none)\") !== \"(none)\";\n      let addFolder = hasFolder;\n\n      if (hasFolder) {\n        for (let i = 0; i < result.folders.length; i++) {\n          if (result.folders[i].name === grouping) {\n            addFolder = false;\n            folderIndex = i;\n            break;\n          }\n        }\n      }\n\n      const cipher = this.buildBaseCipher(value);\n      if (cipher.type === CipherType.Login) {\n        cipher.notes = this.getValueOrDefault(value.extra);\n        cipher.login = new LoginView();\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.totp);\n      } else if (cipher.type === CipherType.SecureNote) {\n        this.parseSecureNote(value, cipher);\n      } else if (cipher.type === CipherType.Card) {\n        cipher.card = this.parseCard(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n      } else if (cipher.type === CipherType.Identity) {\n        cipher.identity = this.parseIdentity(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n        if (!this.isNullOrWhitespace(value.ccnum)) {\n          // there is a card on this identity too\n          const cardCipher = this.buildBaseCipher(value);\n          cardCipher.identity = null;\n          cardCipher.type = CipherType.Card;\n          cardCipher.card = this.parseCard(value);\n          result.ciphers.push(cardCipher);\n        }\n      }\n\n      result.ciphers.push(cipher);\n\n      if (addFolder) {\n        const f = new FolderView();\n        f.name = grouping;\n        result.folders.push(f);\n      }\n      if (hasFolder) {\n        result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private buildBaseCipher(value: any) {\n    const cipher = new CipherView();\n    // eslint-disable-next-line\n    if (value.hasOwnProperty(\"profilename\") && value.hasOwnProperty(\"profilelanguage\")) {\n      // form fill\n      cipher.favorite = false;\n      cipher.name = this.getValueOrDefault(value.profilename, \"--\");\n      cipher.type = CipherType.Card;\n\n      if (\n        !this.isNullOrWhitespace(value.title) ||\n        !this.isNullOrWhitespace(value.firstname) ||\n        !this.isNullOrWhitespace(value.lastname) ||\n        !this.isNullOrWhitespace(value.address1) ||\n        !this.isNullOrWhitespace(value.phone) ||\n        !this.isNullOrWhitespace(value.username) ||\n        !this.isNullOrWhitespace(value.email)\n      ) {\n        cipher.type = CipherType.Identity;\n      }\n    } else {\n      // site or secure note\n      cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, \"0\") === \"1\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.type = value.url === \"http://sn\" ? CipherType.SecureNote : CipherType.Login;\n    }\n    return cipher;\n  }\n\n  private parseCard(value: any): CardView {\n    const card = new CardView();\n    card.cardholderName = this.getValueOrDefault(value.ccname);\n    card.number = this.getValueOrDefault(value.ccnum);\n    card.code = this.getValueOrDefault(value.cccsc);\n    card.brand = this.getCardBrand(value.ccnum);\n\n    if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf(\"-\") > -1) {\n      const ccexpParts = (value.ccexp as string).split(\"-\");\n      if (ccexpParts.length > 1) {\n        card.expYear = ccexpParts[0];\n        card.expMonth = ccexpParts[1];\n        if (card.expMonth.length === 2 && card.expMonth[0] === \"0\") {\n          card.expMonth = card.expMonth[1];\n        }\n      }\n    }\n\n    return card;\n  }\n\n  private parseIdentity(value: any): IdentityView {\n    const identity = new IdentityView();\n    identity.title = this.getValueOrDefault(value.title);\n    identity.firstName = this.getValueOrDefault(value.firstname);\n    identity.middleName = this.getValueOrDefault(value.middlename);\n    identity.lastName = this.getValueOrDefault(value.lastname);\n    identity.username = this.getValueOrDefault(value.username);\n    identity.company = this.getValueOrDefault(value.company);\n    identity.ssn = this.getValueOrDefault(value.ssn);\n    identity.address1 = this.getValueOrDefault(value.address1);\n    identity.address2 = this.getValueOrDefault(value.address2);\n    identity.address3 = this.getValueOrDefault(value.address3);\n    identity.city = this.getValueOrDefault(value.city);\n    identity.state = this.getValueOrDefault(value.state);\n    identity.postalCode = this.getValueOrDefault(value.zip);\n    identity.country = this.getValueOrDefault(value.country);\n    identity.email = this.getValueOrDefault(value.email);\n    identity.phone = this.getValueOrDefault(value.phone);\n\n    if (!this.isNullOrWhitespace(identity.title)) {\n      identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n    }\n\n    return identity;\n  }\n\n  private parseSecureNote(value: any, cipher: CipherView) {\n    const extraParts = this.splitNewLine(value.extra);\n    let processedNote = false;\n\n    if (extraParts.length) {\n      const typeParts = extraParts[0].split(\":\");\n      if (\n        typeParts.length > 1 &&\n        typeParts[0] === \"NoteType\" &&\n        (typeParts[1] === \"Credit Card\" || typeParts[1] === \"Address\")\n      ) {\n        if (typeParts[1] === \"Credit Card\") {\n          const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n            Number: \"number\",\n            \"Name on Card\": \"cardholderName\",\n            \"Security Code\": \"code\",\n            // LP provides date in a format like 'June,2020'\n            // Store in expMonth, then parse and modify\n            \"Expiration Date\": \"expMonth\",\n          });\n\n          if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === \",\") {\n            // No expiration data\n            mappedData.expMonth = undefined;\n          } else {\n            const [monthString, year] = mappedData.expMonth.split(\",\");\n            // Parse month name into number\n            if (!this.isNullOrWhitespace(monthString)) {\n              const month = new Date(Date.parse(monthString.trim() + \" 1, 2012\")).getMonth() + 1;\n              if (isNaN(month)) {\n                mappedData.expMonth = undefined;\n              } else {\n                mappedData.expMonth = month.toString();\n              }\n            } else {\n              mappedData.expMonth = undefined;\n            }\n            if (!this.isNullOrWhitespace(year)) {\n              mappedData.expYear = year;\n            }\n          }\n\n          cipher.type = CipherType.Card;\n          cipher.card = mappedData;\n        } else if (typeParts[1] === \"Address\") {\n          const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n            Title: \"title\",\n            \"First Name\": \"firstName\",\n            \"Last Name\": \"lastName\",\n            \"Middle Name\": \"middleName\",\n            Company: \"company\",\n            \"Address 1\": \"address1\",\n            \"Address 2\": \"address2\",\n            \"Address 3\": \"address3\",\n            \"City / Town\": \"city\",\n            State: \"state\",\n            \"Zip / Postal Code\": \"postalCode\",\n            Country: \"country\",\n            \"Email Address\": \"email\",\n            Username: \"username\",\n          });\n          cipher.type = CipherType.Identity;\n          cipher.identity = mappedData;\n        }\n        processedNote = true;\n      }\n    }\n\n    if (!processedNote) {\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n      cipher.notes = this.getValueOrDefault(value.extra);\n    }\n  }\n\n  private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n    const dataObj: any = {};\n\n    let processingNotes = false;\n    extraParts.forEach((extraPart) => {\n      let key: string = null;\n      let val: string = null;\n      if (!processingNotes) {\n        if (this.isNullOrWhitespace(extraPart)) {\n          return;\n        }\n        const colonIndex = extraPart.indexOf(\":\");\n        if (colonIndex === -1) {\n          key = extraPart;\n        } else {\n          key = extraPart.substring(0, colonIndex);\n          if (extraPart.length > colonIndex) {\n            val = extraPart.substring(colonIndex + 1);\n          }\n        }\n        if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === \"NoteType\") {\n          return;\n        }\n      }\n\n      if (processingNotes) {\n        cipher.notes += \"\\n\" + extraPart;\n      } else if (key === \"Notes\") {\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes += \"\\n\" + val;\n        } else {\n          cipher.notes = val;\n        }\n        processingNotes = true;\n        // eslint-disable-next-line\n      } else if (map.hasOwnProperty(key)) {\n        dataObj[map[key]] = val;\n      } else {\n        this.processKvp(cipher, key, val);\n      }\n    });\n\n    return dataObj;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 4) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[1]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.DisplayName, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.login.username = this.getValueOrDefault(value.UserName);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      const folderName =\n        this.getValueOrDefault(value[0], \"Unassigned\") !== \"Unassigned\" ? value[0] : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[2], \"--\");\n\n      if (value[1] === \"Web Logins\" || value[1] === \"Login\") {\n        cipher.login.uris = this.makeUriArray(value[4]);\n        cipher.login.username = this.getValueOrDefault(value[5]);\n        cipher.login.password = this.getValueOrDefault(value[6]);\n        cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split(\"\\\\n\").join(\"\\n\") : null;\n      } else if (value.length > 3) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        for (let i = 3; i < value.length; i++) {\n          if (!this.isNullOrWhitespace(value[i])) {\n            cipher.notes += value[i] + \"\\n\";\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n        cipher.name = value[1] + \": \" + cipher.name;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst mappedBaseColumns = [\"nickname\", \"additionalInfo\"];\nconst _mappedUserAccountColumns = new Set(\n  mappedBaseColumns.concat([\"url\", \"username\", \"password\", \"twofaSecret\"])\n);\nconst _mappedCreditCardColumns = new Set(\n  mappedBaseColumns.concat([\"cardNumber\", \"cardName\", \"exp_month\", \"exp_year\", \"cvv\"])\n);\n\nconst _mappedIdentityColumns = new Set(\n  mappedBaseColumns.concat([\n    \"title\",\n    \"firstName\",\n    \"middleName\",\n    \"lastName\",\n    \"email\",\n    \"firstAddressLine\",\n    \"secondAddressLine\",\n    \"city\",\n    \"country\",\n    \"zipCode\",\n  ])\n);\n\nconst _mappedIdCardColumns = new Set(mappedBaseColumns.concat([\"idName\", \"idNumber\", \"idCountry\"]));\n\nconst _mappedTwoFaColumns = new Set(mappedBaseColumns.concat([\"authToken\"]));\n\nconst _mappedUserNoteColumns = new Set(mappedBaseColumns.concat([\"content\"]));\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.nickname, \"--\");\n      cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n      if (value.url !== undefined) {\n        // Accounts\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.twofaSecret);\n\n        this.importUnmappedFields(cipher, value, _mappedUserAccountColumns);\n      } else if (value.authToken !== undefined) {\n        // TwoFA\n        cipher.login.totp = this.getValueOrDefault(value.authToken);\n\n        this.importUnmappedFields(cipher, value, _mappedTwoFaColumns);\n      } else if (value.cardNumber !== undefined) {\n        // Cards\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n        cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n\n        this.importUnmappedFields(cipher, value, _mappedCreditCardColumns);\n      } else if (value.firstName !== undefined) {\n        // Identities\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        cipher.identity.title = this.getValueOrDefault(value.title);\n        cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n        cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n        cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n        cipher.identity.phone = this.getValueOrDefault(value.number);\n        cipher.identity.email = this.getValueOrDefault(value.email);\n        cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n        cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n        cipher.identity.city = this.getValueOrDefault(value.city);\n        cipher.identity.country = this.getValueOrDefault(value.country);\n        cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n\n        this.importUnmappedFields(cipher, value, _mappedIdentityColumns);\n      } else if (value.idType !== undefined) {\n        // IdCards\n\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        this.processFullName(cipher, value.idName);\n        cipher.identity.country = this.getValueOrDefault(value.idCountry);\n\n        switch (value.idType) {\n          // case \"Driver's License\":\n          // case \"ID Card\":\n          // case \"Outdoor License\":\n          // case \"Software License\":\n          // case \"Tax Number\":\n          // case \"Bank Account\":\n          // case \"Insurance Card\":\n          // case \"Health Card\":\n          // case \"Membership\":\n          // case \"Database\":\n          // case \"Reward Program\":\n          // case \"Tour Visa\":\n          case \"Passport\":\n            cipher.identity.passportNumber = value.idNumber;\n            break;\n          case \"Social Security\":\n            cipher.identity.ssn = value.idNumber;\n            break;\n          default:\n            cipher.identity.licenseNumber = value.idNumber;\n            break;\n        }\n\n        this.importUnmappedFields(cipher, value, _mappedIdCardColumns);\n      } else if (value.content !== undefined) {\n        // Notes\n        cipher.secureNote = new SecureNoteView();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.notes = this.getValueOrDefault(value.content);\n\n        this.importUnmappedFields(cipher, value, _mappedUserNoteColumns);\n      } else {\n        return;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  importUnmappedFields(cipher: CipherView, row: any, mappedValues: Set<string>) {\n    const unmappedFields = Object.keys(row).filter((x) => !mappedValues.has(x));\n    unmappedFields.forEach((key) => {\n      const item = row as any;\n      this.processKvp(cipher, key, item[key]);\n    });\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { LoginView } from \"../models/view/loginView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\ntype nodePassCsvParsed = {\n  name: string;\n  url: string;\n  username: string;\n  password: string;\n  note: string;\n  cardholdername: string;\n  cardnumber: string;\n  cvc: string;\n  expirydate: string;\n  zipcode: string;\n  folder: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  address1: string;\n  address2: string;\n  city: string;\n  country: string;\n  state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((record) => {\n      const recordType = this.evaluateType(record);\n      if (recordType === undefined) {\n        return;\n      }\n\n      if (!this.organization) {\n        this.processFolder(result, record.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.name = this.getValueOrDefault(record.name, \"--\");\n      cipher.notes = this.getValueOrDefault(record.note);\n\n      switch (recordType) {\n        case CipherType.Login:\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.username = this.getValueOrDefault(record.username);\n          cipher.login.password = this.getValueOrDefault(record.password);\n          cipher.login.uris = this.makeUriArray(record.url);\n          break;\n        case CipherType.Card:\n          cipher.type = CipherType.Card;\n          cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n          cipher.card.number = this.getValueOrDefault(record.cardnumber);\n          cipher.card.code = this.getValueOrDefault(record.cvc);\n          cipher.card.brand = this.getCardBrand(cipher.card.number);\n          this.setCardExpiration(cipher, record.expirydate);\n          break;\n\n        case CipherType.Identity:\n          cipher.type = CipherType.Identity;\n\n          this.processFullName(cipher, this.getValueOrDefault(record.full_name));\n          cipher.identity.address1 = this.getValueOrDefault(record.address1);\n          cipher.identity.address2 = this.getValueOrDefault(record.address2);\n          cipher.identity.city = this.getValueOrDefault(record.city);\n          cipher.identity.state = this.getValueOrDefault(record.state);\n          cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n          cipher.identity.country = this.getValueOrDefault(record.country);\n          if (cipher.identity.country != null) {\n            cipher.identity.country = cipher.identity.country.toUpperCase();\n          }\n          cipher.identity.email = this.getValueOrDefault(record.email);\n          cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n          break;\n        case CipherType.SecureNote:\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default:\n          break;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private evaluateType(record: nodePassCsvParsed): CipherType {\n    if (!this.isNullOrWhitespace(record.username)) {\n      return CipherType.Login;\n    }\n\n    if (!this.isNullOrWhitespace(record.cardnumber)) {\n      return CipherType.Card;\n    }\n\n    if (!this.isNullOrWhitespace(record.full_name)) {\n      return CipherType.Identity;\n    }\n\n    if (!this.isNullOrWhitespace(record.note)) {\n      return CipherType.SecureNote;\n    }\n\n    return undefined;\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    data.split(this.newLineRegex).forEach((line) => {\n      if (this.isNullOrWhitespace(line) || line[0] !== \"{\") {\n        return;\n      }\n      const item = JSON.parse(line);\n      if (item.trashed === true) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n\n      if (this.isNullOrWhitespace(item.hmac)) {\n        this.processStandardItem(item, cipher);\n      } else {\n        this.processWinOpVaultItem(item, cipher);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processWinOpVaultItem(item: any, cipher: CipherView) {\n    if (item.overview != null) {\n      cipher.name = this.getValueOrDefault(item.overview.title);\n      if (item.overview.URLs != null) {\n        const urls: string[] = [];\n        item.overview.URLs.forEach((url: any) => {\n          if (!this.isNullOrWhitespace(url.u)) {\n            urls.push(url.u);\n          }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n      }\n    }\n\n    if (item.details != null) {\n      if (item.details.passwordHistory != null) {\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n      }\n      if (\n        !this.isNullOrWhitespace(item.details.ccnum) ||\n        !this.isNullOrWhitespace(item.details.cvv)\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      } else if (\n        !this.isNullOrWhitespace(item.details.firstname) ||\n        !this.isNullOrWhitespace(item.details.address1)\n      ) {\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n      }\n      if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n        cipher.login.password = item.details.password;\n      }\n      if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n        cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (item.details.fields != null) {\n        this.parseFields(item.details.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.details.sections != null) {\n        item.details.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private processStandardItem(item: any, cipher: CipherView) {\n    cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n    cipher.name = this.getValueOrDefault(item.title);\n\n    if (item.typeName === \"securenotes.SecureNote\") {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    } else if (item.typeName === \"wallet.financial.CreditCard\") {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    } else if (item.typeName === \"identities.Identity\") {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    } else {\n      cipher.login.uris = this.makeUriArray(item.location);\n    }\n\n    if (item.secureContents != null) {\n      if (item.secureContents.passwordHistory != null) {\n        this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n      }\n      if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n        cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (cipher.type === CipherType.Login) {\n        if (!this.isNullOrWhitespace(item.secureContents.password)) {\n          cipher.login.password = item.secureContents.password;\n        }\n        if (item.secureContents.URLs != null) {\n          const urls: string[] = [];\n          item.secureContents.URLs.forEach((u: any) => {\n            if (!this.isNullOrWhitespace(u.url)) {\n              urls.push(u.url);\n            }\n          });\n          if (urls.length > 0) {\n            cipher.login.uris = this.makeUriArray(urls);\n          }\n        }\n      }\n      if (item.secureContents.fields != null) {\n        this.parseFields(item.secureContents.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.secureContents.sections != null) {\n        item.secureContents.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private parsePasswordHistory(items: any[], cipher: CipherView) {\n    const maxSize = items.length > 5 ? 5 : items.length;\n    cipher.passwordHistory = items\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n\n  private parseFields(\n    fields: any[],\n    cipher: CipherView,\n    designationKey: string,\n    valueKey: string,\n    nameKey: string\n  ) {\n    fields.forEach((field: any) => {\n      if (field[valueKey] == null || field[valueKey].toString().trim() === \"\") {\n        return;\n      }\n\n      // TODO: when date FieldType exists, store this as a date field type instead of formatted Text if k is 'date'\n      const fieldValue =\n        field.k === \"date\"\n          ? new Date(field[valueKey] * 1000).toUTCString()\n          : field[valueKey].toString();\n      const fieldDesignation =\n        field[designationKey] != null ? field[designationKey].toString() : null;\n\n      if (cipher.type === CipherType.Login) {\n        if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === \"username\") {\n          cipher.login.username = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.password) &&\n          fieldDesignation === \"password\"\n        ) {\n          cipher.login.password = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.totp) &&\n          fieldDesignation != null &&\n          fieldDesignation.startsWith(\"TOTP_\")\n        ) {\n          cipher.login.totp = fieldValue;\n          return;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === \"ccnum\") {\n          cipher.card.number = fieldValue;\n          cipher.card.brand = this.getCardBrand(fieldValue);\n          return;\n        } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === \"cvv\") {\n          cipher.card.code = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.cardholderName) &&\n          fieldDesignation === \"cardholder\"\n        ) {\n          cipher.card.cardholderName = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.expiration) &&\n          fieldDesignation === \"expiry\" &&\n          fieldValue.length === 6\n        ) {\n          cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n          if (cipher.card.expMonth[0] === \"0\") {\n            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n          }\n          cipher.card.expYear = (fieldValue as string).substr(0, 4);\n          return;\n        } else if (fieldDesignation === \"type\") {\n          // Skip since brand was determined from number above\n          return;\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        const identity = cipher.identity;\n        if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === \"firstname\") {\n          identity.firstName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === \"lastname\") {\n          identity.lastName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === \"initial\") {\n          identity.middleName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === \"defphone\") {\n          identity.phone = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === \"company\") {\n          identity.company = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === \"email\") {\n          identity.email = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === \"username\") {\n          identity.username = fieldValue;\n          return;\n        } else if (fieldDesignation === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip } = field[valueKey];\n          identity.address1 = this.getValueOrDefault(street);\n          identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            identity.country = country.toUpperCase();\n          }\n          identity.postalCode = this.getValueOrDefault(zip);\n          return;\n        }\n      }\n\n      const fieldName = this.isNullOrWhitespace(field[nameKey]) ? \"no_name\" : field[nameKey];\n      if (\n        fieldName === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      const fieldType = field.k === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n}\n","export interface ExportData {\n  accounts?: AccountsEntity[] | null;\n}\nexport interface AccountsEntity {\n  attrs: AccountAttributes;\n  vaults?: VaultsEntity[] | null;\n}\nexport interface AccountAttributes {\n  accountName: string;\n  name: string;\n  avatar: string;\n  email: string;\n  uuid: string;\n  domain: string;\n}\nexport interface VaultsEntity {\n  attrs: VaultAttributes;\n  items?: Item[] | null;\n}\nexport interface VaultAttributes {\n  uuid: string;\n  desc: string;\n  avatar: string;\n  name: string;\n  type: string;\n}\n\nexport enum CategoryEnum {\n  Login = \"001\",\n  CreditCard = \"002\",\n  SecureNote = \"003\",\n  Identity = \"004\",\n  Password = \"005\",\n  Document = \"006\",\n  SoftwareLicense = \"100\",\n  BankAccount = \"101\",\n  Database = \"102\",\n  DriversLicense = \"103\",\n  OutdoorLicense = \"104\",\n  Membership = \"105\",\n  Passport = \"106\",\n  RewardsProgram = \"107\",\n  SocialSecurityNumber = \"108\",\n  WirelessRouter = \"109\",\n  Server = \"110\",\n  EmailAccount = \"111\",\n  API_Credential = \"112\",\n  MedicalRecord = \"113\",\n}\n\nexport interface Item {\n  uuid: string;\n  favIndex: number;\n  createdAt: number;\n  updatedAt: number;\n  trashed?: boolean;\n  categoryUuid: string;\n  details: Details;\n  overview: Overview;\n}\nexport interface Details {\n  loginFields?: (LoginFieldsEntity | null)[] | null;\n  notesPlain?: string | null;\n  sections?: (SectionsEntity | null)[] | null;\n  passwordHistory?: (PasswordHistoryEntity | null)[] | null;\n  documentAttributes?: DocumentAttributes | null;\n  password?: string | null;\n}\n\nexport enum LoginFieldTypeEnum {\n  TextOrHtml = \"T\",\n  EmailAddress = \"E\",\n  URL = \"U\",\n  Number = \"N\",\n  Password = \"P\",\n  TextArea = \"A\",\n  PhoneNumber = \"T\",\n  CheckBox = \"C\",\n}\nexport interface LoginFieldsEntity {\n  value: string;\n  id: string;\n  name: string;\n  fieldType: LoginFieldTypeEnum | string;\n  designation?: string | null;\n}\nexport interface SectionsEntity {\n  title: string;\n  name?: string | null;\n  fields?: FieldsEntity[] | null;\n}\nexport interface FieldsEntity {\n  title: string;\n  id: string;\n  value: Value;\n  indexAtSource: number;\n  guarded: boolean;\n  multiline: boolean;\n  dontGenerate: boolean;\n  placeholder?: string;\n  inputTraits: InputTraits;\n  clipboardFilter?: string | null;\n}\nexport interface Value {\n  totp?: string | null;\n  date?: number | null;\n  string?: string | null;\n  concealed?: string | null;\n  email?: string | null;\n  phone?: string | null;\n  menu?: string | null;\n  gender?: string | null;\n  monthYear?: number | null;\n  url?: string | null;\n  address?: Address | null;\n  creditCardType?: string | null;\n  creditCardNumber?: string | null;\n  reference?: string | null;\n}\nexport interface Address {\n  street: string;\n  city: string;\n  country: string;\n  zip: string;\n  state: string;\n}\nexport interface InputTraits {\n  keyboard: string;\n  correction: string;\n  capitalization: string;\n}\nexport interface PasswordHistoryEntity {\n  value: string;\n  time: number;\n}\nexport interface DocumentAttributes {\n  fileName: string;\n  documentId: string;\n  decryptedSize: number;\n}\nexport interface Overview {\n  subtitle: string;\n  title: string;\n  url: string;\n  urls?: UrlsEntity[] | null;\n  ps?: number | null;\n  pbe?: number | null;\n  pgrng?: boolean | null;\n  tags?: string[] | null;\n}\nexport interface UrlsEntity {\n  label: string;\n  url: string;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport {\n  CategoryEnum,\n  Details,\n  ExportData,\n  FieldsEntity,\n  Item,\n  LoginFieldTypeEnum,\n  Overview,\n  PasswordHistoryEntity,\n  SectionsEntity,\n  UrlsEntity,\n  Value,\n  VaultsEntity,\n} from \"./types/onepassword1PuxImporterTypes\";\n\nexport class OnePassword1PuxImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const exportData: ExportData = JSON.parse(data);\n\n    const account = exportData.accounts[0];\n    // TODO Add handling of multiple vaults\n    // const personalVaults = account.vaults[0].filter((v) => v.attrs.type === VaultAttributeTypeEnum.Personal);\n    account.vaults.forEach((vault: VaultsEntity) => {\n      vault.items.forEach((item: Item) => {\n        if (item.trashed === true) {\n          return;\n        }\n\n        const cipher = this.initLoginCipher();\n\n        const category = item.categoryUuid as CategoryEnum;\n        switch (category) {\n          case CategoryEnum.Login:\n          case CategoryEnum.Database:\n          case CategoryEnum.Password:\n          case CategoryEnum.WirelessRouter:\n          case CategoryEnum.Server:\n          case CategoryEnum.API_Credential:\n            cipher.type = CipherType.Login;\n            cipher.login = new LoginView();\n            break;\n          case CategoryEnum.CreditCard:\n          case CategoryEnum.BankAccount:\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n            break;\n          case CategoryEnum.SecureNote:\n          case CategoryEnum.SoftwareLicense:\n          case CategoryEnum.EmailAccount:\n          case CategoryEnum.MedicalRecord:\n            // case CategoryEnum.Document:\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            break;\n          case CategoryEnum.Identity:\n          case CategoryEnum.DriversLicense:\n          case CategoryEnum.OutdoorLicense:\n          case CategoryEnum.Membership:\n          case CategoryEnum.Passport:\n          case CategoryEnum.RewardsProgram:\n          case CategoryEnum.SocialSecurityNumber:\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n            break;\n          default:\n            break;\n        }\n\n        cipher.favorite = item.favIndex === 1 ? true : false;\n\n        this.processOverview(item.overview, cipher);\n\n        this.processLoginFields(item, cipher);\n\n        this.processDetails(category, item.details, cipher);\n\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n\n        this.processSections(category, item.details.sections, cipher);\n\n        if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n          cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        this.result.ciphers.push(cipher);\n      });\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processOverview(overview: Overview, cipher: CipherView) {\n    if (overview == null) {\n      return;\n    }\n\n    cipher.name = this.getValueOrDefault(overview.title);\n\n    if (overview.urls != null) {\n      const urls: string[] = [];\n      overview.urls.forEach((url: UrlsEntity) => {\n        if (!this.isNullOrWhitespace(url.url)) {\n          urls.push(url.url);\n        }\n      });\n      cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    if (overview.tags != null && overview.tags.length > 0) {\n      const folderName = this.capitalize(overview.tags[0]);\n      this.processFolder(this.result, folderName);\n    }\n  }\n\n  private capitalize(inputString: string): string {\n    return inputString.trim().replace(/\\w\\S*/g, (w) => w.replace(/^\\w/, (c) => c.toUpperCase()));\n  }\n\n  private processLoginFields(item: Item, cipher: CipherView) {\n    if (item.details == null) {\n      return;\n    }\n\n    if (item.details.loginFields == null || item.details.loginFields.length === 0) {\n      return;\n    }\n\n    item.details.loginFields.forEach((loginField) => {\n      if (loginField.designation === \"username\" && loginField.value !== \"\") {\n        cipher.type = CipherType.Login;\n        cipher.login.username = loginField.value;\n        return;\n      }\n\n      if (loginField.designation === \"password\" && loginField.value !== \"\") {\n        cipher.type = CipherType.Login;\n        cipher.login.password = loginField.value;\n        return;\n      }\n\n      let fieldValue = loginField.value;\n      let fieldType: FieldType = FieldType.Text;\n      switch (loginField.fieldType) {\n        case LoginFieldTypeEnum.Password:\n          fieldType = FieldType.Hidden;\n          break;\n        case LoginFieldTypeEnum.CheckBox:\n          fieldValue = loginField.value !== \"\" ? \"true\" : \"false\";\n          fieldType = FieldType.Boolean;\n          break;\n        default:\n          break;\n      }\n      this.processKvp(cipher, loginField.name, fieldValue, fieldType);\n    });\n  }\n\n  private processDetails(category: CategoryEnum, details: Details, cipher: CipherView) {\n    if (category !== CategoryEnum.Password) {\n      return;\n    }\n\n    if (details == null) {\n      return;\n    }\n    cipher.login.password = details.password;\n  }\n\n  private processSections(category: CategoryEnum, sections: SectionsEntity[], cipher: CipherView) {\n    if (sections == null || sections.length === 0) {\n      return;\n    }\n\n    sections.forEach((section: SectionsEntity) => {\n      if (section.fields == null) {\n        return;\n      }\n\n      this.parseSectionFields(category, section.fields, cipher);\n    });\n  }\n\n  private parseSectionFields(category: CategoryEnum, fields: FieldsEntity[], cipher: CipherView) {\n    fields.forEach((field: FieldsEntity) => {\n      const valueKey = Object.keys(field.value)[0];\n      const anyField = field as any;\n\n      if (\n        anyField.value == null ||\n        anyField.value[valueKey] == null ||\n        anyField.value[valueKey] === \"\"\n      ) {\n        return;\n      }\n\n      const fieldName = this.getFieldName(field.id, field.title);\n      const fieldValue = this.extractValue(field.value, valueKey);\n\n      if (cipher.type === CipherType.Login) {\n        if (this.fillLogin(field, fieldValue, cipher)) {\n          return;\n        }\n\n        switch (category) {\n          case CategoryEnum.Login:\n          case CategoryEnum.Database:\n          case CategoryEnum.EmailAccount:\n          case CategoryEnum.WirelessRouter:\n            break;\n\n          case CategoryEnum.Server:\n            if (this.isNullOrWhitespace(cipher.login.uri) && field.id === \"url\") {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              return;\n            }\n            break;\n\n          case CategoryEnum.API_Credential:\n            if (this.fillApiCredentials(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          default:\n            break;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.fillCreditCard(field, fieldValue, cipher)) {\n          return;\n        }\n\n        if (category === CategoryEnum.BankAccount) {\n          if (this.fillBankAccount(field, fieldValue, cipher)) {\n            return;\n          }\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        if (this.fillIdentity(field, fieldValue, cipher)) {\n          return;\n        }\n        if (valueKey === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip, state } = field.value.address;\n          cipher.identity.address1 = this.getValueOrDefault(street);\n          cipher.identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            cipher.identity.country = country.toUpperCase();\n          }\n          cipher.identity.postalCode = this.getValueOrDefault(zip);\n          cipher.identity.state = this.getValueOrDefault(state);\n          return;\n        }\n\n        switch (category) {\n          case CategoryEnum.Identity:\n            break;\n          case CategoryEnum.DriversLicense:\n            if (this.fillDriversLicense(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.OutdoorLicense:\n            if (this.fillOutdoorLicense(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.Membership:\n            if (this.fillMembership(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.Passport:\n            if (this.fillPassport(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.RewardsProgram:\n            if (this.fillRewardsProgram(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.SocialSecurityNumber:\n            if (this.fillSSN(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n\n      // Do not include a password field if it's already in the history\n      if (\n        field.title === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      // TODO ?? If one of the fields is marked as guarded, then activate Password-Reprompt for the entire item\n      if (field.guarded && cipher.reprompt === CipherRepromptType.None) {\n        cipher.reprompt = CipherRepromptType.Password;\n      }\n\n      const fieldType = valueKey === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n\n  private getFieldName(id: string, title: string): string {\n    if (this.isNullOrWhitespace(title)) {\n      return id;\n    }\n\n    // Naive approach of checking if the fields id is usable\n    if (id.length > 25 && RegExp(/[0-9]{2}[A-Z]{2}/, \"i\").test(id)) {\n      return title;\n    }\n    return id;\n  }\n\n  private extractValue(value: Value, valueKey: string): string {\n    if (valueKey === \"date\") {\n      return new Date(value.date * 1000).toUTCString();\n    }\n\n    if (valueKey === \"monthYear\") {\n      return value.monthYear.toString();\n    }\n\n    return (value as any)[valueKey];\n  }\n\n  private fillLogin(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    const fieldName = this.getFieldName(field.id, field.title);\n\n    if (this.isNullOrWhitespace(cipher.login.username) && fieldName === \"username\") {\n      cipher.login.username = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.login.password) && fieldName === \"password\") {\n      cipher.login.password = fieldValue;\n      return true;\n    }\n\n    if (\n      this.isNullOrWhitespace(cipher.login.totp) &&\n      field.id != null &&\n      field.id.startsWith(\"TOTP_\")\n    ) {\n      cipher.login.totp = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillApiCredentials(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    const fieldName = this.getFieldName(field.id, field.title);\n\n    if (this.isNullOrWhitespace(cipher.login.password) && fieldName === \"credential\") {\n      cipher.login.password = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.login.uri) && fieldName === \"hostname\") {\n      cipher.login.uris = this.makeUriArray(fieldValue);\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillCreditCard(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.card.number) && field.id === \"ccnum\") {\n      cipher.card.number = fieldValue;\n      cipher.card.brand = this.getCardBrand(fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.code) && field.id === \"cvv\") {\n      cipher.card.code = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.cardholderName) && field.id === \"cardholder\") {\n      cipher.card.cardholderName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.expiration) && field.id === \"expiry\") {\n      const monthYear: string = fieldValue.toString().trim();\n      cipher.card.expMonth = monthYear.substring(4, 6);\n      if (cipher.card.expMonth[0] === \"0\") {\n        cipher.card.expMonth = cipher.card.expMonth.substring(1, 2);\n      }\n      cipher.card.expYear = monthYear.substring(0, 4);\n      return true;\n    }\n\n    if (field.id === \"type\") {\n      // Skip since brand was determined from number above\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillBankAccount(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.card.cardholderName) && field.id === \"owner\") {\n      cipher.card.cardholderName = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillIdentity(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"firstname\") {\n      cipher.identity.firstName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.lastName) && field.id === \"lastname\") {\n      cipher.identity.lastName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.middleName) && field.id === \"initial\") {\n      cipher.identity.middleName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.phone) && field.id === \"defphone\") {\n      cipher.identity.phone = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"company\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.email) && field.id === \"email\") {\n      cipher.identity.email = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.username) && field.id === \"username\") {\n      cipher.identity.username = fieldValue;\n      return true;\n    }\n    return false;\n  }\n\n  private fillDriversLicense(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"fullname\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.address1) && field.id === \"address\") {\n      cipher.identity.address1 = fieldValue;\n      return true;\n    }\n\n    // TODO ISO code\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.state) && field.id === \"state\") {\n      cipher.identity.state = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.licenseNumber) && field.id === \"number\") {\n      cipher.identity.licenseNumber = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillOutdoorLicense(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    // TODO ISO code\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.state) && field.id === \"state\") {\n      cipher.identity.state = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillMembership(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"member_name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"org_name\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.phone) && field.id === \"phone\") {\n      cipher.identity.phone = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillPassport(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"fullname\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    // TODO Iso\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"issuing_country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.passportNumber) && field.id === \"number\") {\n      cipher.identity.passportNumber = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillRewardsProgram(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"member_name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"company_name\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillSSN(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.ssn) && field.id === \"number\") {\n      cipher.identity.ssn = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private parsePasswordHistory(historyItems: PasswordHistoryEntity[], cipher: CipherView) {\n    if (historyItems == null || historyItems.length === 0) {\n      return;\n    }\n\n    const maxSize = historyItems.length > 5 ? 5 : historyItems.length;\n    cipher.passwordHistory = historyItems\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n}\n","import { CipherView } from \"../../models/view/cipherView\";\n\nexport class CipherImportContext {\n  lowerProperty: string;\n  constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n    this.lowerProperty = property.toLowerCase();\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { CipherImportContext } from \"./cipherImportContext\";\n\nexport const IgnoredProperties = [\n  \"ainfo\",\n  \"autosubmit\",\n  \"notesplain\",\n  \"ps\",\n  \"scope\",\n  \"tags\",\n  \"title\",\n  \"uuid\",\n  \"notes\",\n];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n  protected loginPropertyParsers = [\n    this.setLoginUsername,\n    this.setLoginPassword,\n    this.setLoginUris,\n  ];\n  protected creditCardPropertyParsers = [\n    this.setCreditCardNumber,\n    this.setCreditCardVerification,\n    this.setCreditCardCardholderName,\n    this.setCreditCardExpiry,\n  ];\n  protected identityPropertyParsers = [\n    this.setIdentityFirstName,\n    this.setIdentityInitial,\n    this.setIdentityLastName,\n    this.setIdentityUserName,\n    this.setIdentityEmail,\n    this.setIdentityPhone,\n    this.setIdentityCompany,\n  ];\n\n  abstract setCipherType(value: any, cipher: CipherView): void;\n\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true, {\n      quoteChar: '\"',\n      escapeChar: \"\\\\\",\n    });\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(this.getProp(value, \"title\"))) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.getProp(value, \"title\"), \"--\");\n\n      this.setNotes(value, cipher);\n\n      this.setCipherType(value, cipher);\n\n      let altUsername: string = null;\n      for (const property in value) {\n        // eslint-disable-next-line\n        if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n          continue;\n        }\n\n        const context = new CipherImportContext(value, property, cipher);\n        if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n          continue;\n        }\n\n        altUsername = this.setUnknownValue(context, altUsername);\n      }\n\n      if (\n        cipher.type === CipherType.Login &&\n        !this.isNullOrWhitespace(altUsername) &&\n        this.isNullOrWhitespace(cipher.login.username) &&\n        altUsername.indexOf(\"://\") === -1\n      ) {\n        cipher.login.username = altUsername;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  protected getProp(obj: any, name: string): any {\n    const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n      agg[entry[0].toLowerCase()] = entry[1];\n      return agg;\n    }, {});\n    return lowerObj[name.toLowerCase()];\n  }\n\n  protected getPropByRegexp(obj: any, regexp: RegExp): any {\n    const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n      if (key.match(regexp)) {\n        agg.push(key);\n      }\n      return agg;\n    }, []);\n    if (matchingKeys.length === 0) {\n      return null;\n    } else {\n      return obj[matchingKeys[0]];\n    }\n  }\n\n  protected getPropIncluding(obj: any, name: string): any {\n    const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n      if (entry.toLowerCase().includes(name.toLowerCase())) {\n        agg.push(entry);\n      }\n      return agg;\n    }, []);\n    if (includesMap.length === 0) {\n      return null;\n    } else {\n      return obj[includesMap[0]];\n    }\n  }\n\n  protected setNotes(importRecord: any, cipher: CipherView) {\n    cipher.notes =\n      this.getValueOrDefault(this.getProp(importRecord, \"notesPlain\"), \"\") +\n      \"\\n\" +\n      this.getValueOrDefault(this.getProp(importRecord, \"notes\"), \"\") +\n      \"\\n\";\n    cipher.notes.trim();\n  }\n\n  protected setKnownLoginValue(context: CipherImportContext): boolean {\n    return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n    return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownIdentityValue(context: CipherImportContext): boolean {\n    return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n    if (\n      IgnoredProperties.indexOf(context.lowerProperty) === -1 &&\n      !context.lowerProperty.startsWith(\"section:\") &&\n      !context.lowerProperty.startsWith(\"section \")\n    ) {\n      if (altUsername == null && context.lowerProperty === \"email\") {\n        return context.importRecord[context.property];\n      } else if (\n        context.lowerProperty === \"created date\" ||\n        context.lowerProperty === \"modified date\"\n      ) {\n        const readableDate = new Date(\n          parseInt(context.importRecord[context.property], 10) * 1000\n        ).toUTCString();\n        this.processKvp(context.cipher, \"1Password \" + context.property, readableDate);\n        return null;\n      }\n      if (\n        context.lowerProperty.includes(\"password\") ||\n        context.lowerProperty.includes(\"key\") ||\n        context.lowerProperty.includes(\"secret\")\n      ) {\n        this.processKvp(\n          context.cipher,\n          context.property,\n          context.importRecord[context.property],\n          FieldType.Hidden\n        );\n      } else {\n        this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n      }\n    }\n    return null;\n  }\n\n  protected setIdentityFirstName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.firstName) &&\n      context.lowerProperty.includes(\"first name\")\n    ) {\n      context.cipher.identity.firstName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityInitial(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.middleName) &&\n      context.lowerProperty.includes(\"initial\")\n    ) {\n      context.cipher.identity.middleName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityLastName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.lastName) &&\n      context.lowerProperty.includes(\"last name\")\n    ) {\n      context.cipher.identity.lastName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityUserName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.username) &&\n      context.lowerProperty.includes(\"username\")\n    ) {\n      context.cipher.identity.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityCompany(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.company) &&\n      context.lowerProperty.includes(\"company\")\n    ) {\n      context.cipher.identity.company = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityPhone(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.phone) &&\n      context.lowerProperty.includes(\"default phone\")\n    ) {\n      context.cipher.identity.phone = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityEmail(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.email) &&\n      context.lowerProperty.includes(\"email\")\n    ) {\n      context.cipher.identity.email = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardNumber(context: CipherImportContext): boolean {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.number) &&\n      context.lowerProperty.includes(\"number\")\n    ) {\n      context.cipher.card.number = context.importRecord[context.property];\n      context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardVerification(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.code) &&\n      context.lowerProperty.includes(\"verification number\")\n    ) {\n      context.cipher.card.code = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardCardholderName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.cardholderName) &&\n      context.lowerProperty.includes(\"cardholder name\")\n    ) {\n      context.cipher.card.cardholderName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\") &&\n      context.importRecord[context.property].length === 7\n    ) {\n      context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(\n        0,\n        2\n      );\n      if (context.cipher.card.expMonth[0] === \"0\") {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginPassword(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.password) &&\n      context.lowerProperty === \"password\"\n    ) {\n      context.cipher.login.password = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUsername(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.username) &&\n      context.lowerProperty === \"username\"\n    ) {\n      context.cipher.login.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUris(context: CipherImportContext) {\n    if (\n      (context.cipher.login.uris == null || context.cipher.login.uris.length === 0) &&\n      context.lowerProperty === \"urls\"\n    ) {\n      const urls = context.importRecord[context.property].split(this.newLineRegex);\n      context.cipher.login.uris = this.makeUriArray(urls);\n      return true;\n    } else if (context.lowerProperty === \"url\") {\n      if (context.cipher.login.uris == null) {\n        context.cipher.login.uris = [];\n      }\n      context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n      return true;\n    }\n    return false;\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { Importer } from \"../importer\";\n\nimport { IgnoredProperties, OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n  setCipherType(value: any, cipher: CipherView) {\n    const onePassType = this.getValueOrDefault(this.getProp(value, \"type\"), \"Login\");\n    switch (onePassType) {\n      case \"Credit Card\":\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Identity\":\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Login\":\n      case \"Secure Note\":\n        IgnoredProperties.push(\"type\");\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { Importer } from \"../importer\";\n\nimport { CipherImportContext } from \"./cipherImportContext\";\nimport { OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n  constructor() {\n    super();\n    this.identityPropertyParsers.push(this.setIdentityAddress);\n  }\n\n  setCipherType(value: any, cipher: CipherView) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))\n    ) {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    }\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))\n    ) {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    }\n  }\n\n  setIdentityAddress(context: CipherImportContext) {\n    if (context.lowerProperty.match(/address \\d+: address/i)) {\n      this.processKvp(context.cipher, \"address\", context.importRecord[context.property]);\n      return true;\n    }\n    return false;\n  }\n\n  setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\")\n    ) {\n      const expSplit = (context.importRecord[context.property] as string).split(\"/\");\n      context.cipher.card.expMonth = expSplit[0];\n      if (context.cipher.card.expMonth[0] === \"0\" && context.cipher.card.expMonth.length === 2) {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n      return true;\n    }\n    return false;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let headers: string[] = null;\n    results.forEach((value) => {\n      if (headers == null) {\n        headers = value.map((v: string) => v);\n        return;\n      }\n\n      if (value.length < 2 || value.length !== headers.length) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value[1])) {\n        if (this.organization) {\n          const tags = (value[1] as string).split(\",\");\n          tags.forEach((tag) => {\n            tag = tag.trim();\n            let addCollection = true;\n            let collectionIndex = result.collections.length;\n\n            for (let i = 0; i < result.collections.length; i++) {\n              if (result.collections[i].name === tag) {\n                addCollection = false;\n                collectionIndex = i;\n                break;\n              }\n            }\n\n            if (addCollection) {\n              const collection = new CollectionView();\n              collection.name = tag;\n              result.collections.push(collection);\n            }\n\n            result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n          });\n        } else {\n          const tags = (value[1] as string).split(\",\");\n          const tag = tags.length > 0 ? tags[0].trim() : null;\n          this.processFolder(result, tag);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      for (let i = 2; i < value.length; i++) {\n        const header = headers[i].trim().toLowerCase();\n        if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n          continue;\n        }\n\n        if (this.usernameFieldNames.indexOf(header) > -1) {\n          cipher.login.username = value[i];\n        } else if (this.passwordFieldNames.indexOf(header) > -1) {\n          cipher.login.password = value[i];\n        } else if (this.uriFieldNames.indexOf(header) > -1) {\n          cipher.login.uris = this.makeUriArray(value[i]);\n        } else {\n          this.processKvp(cipher, headers[i], value[i]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValue(\"category\", value));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValue(\"description\", value);\n      cipher.name = this.getValueOrDefault(this.getValue(\"title\", value), \"--\");\n      cipher.login.username = this.getValue(\"username\", value);\n      cipher.login.password = this.getValue(\"password\", value);\n      cipher.login.uris = this.makeUriArray(this.getValue(\"site\", value));\n      this.processKvp(cipher, \"Password 2\", this.getValue(\"password2\", value));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private getValue(key: string, value: any) {\n    return this.getValueOrDefault(value[key], this.getValueOrDefault(value[\" \" + key]));\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((credential: any) => {\n      if (credential.tags != null && credential.tags.length > 0) {\n        const folderName = credential.tags[0].text;\n        this.processFolder(result, folderName);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = credential.label;\n\n      cipher.login.username = this.getValueOrDefault(credential.username);\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.url);\n      cipher.notes += this.getValueOrDefault(credential.description, \"\");\n      if (credential.otp != null) {\n        cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n      }\n\n      if (credential.custom_fields != null) {\n        credential.custom_fields.forEach((customField: any) => {\n          switch (customField.field_type) {\n            case \"text\":\n            case \"password\":\n              this.processKvp(cipher, customField.label, customField.value);\n              break;\n          }\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n      const tags: string[] =\n        tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0\n          ? tagsJson.tags\n              .map((tagJson: string) => {\n                try {\n                  const t = JSON.parse(tagJson);\n                  return this.getValueOrDefault(t.tag);\n                } catch {\n                  // Ignore error\n                }\n                return null;\n              })\n              .filter((t: string) => !this.isNullOrWhitespace(t))\n          : null;\n\n      if (this.organization && tags != null && tags.length > 0) {\n        tags.forEach((tag) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === tag) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = tag;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization && tags != null && tags.length > 0) {\n        this.processFolder(result, tags[0]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes, \"\");\n      cipher.notes += \"\\n\\n\" + this.getValueOrDefault(value[\"Shared Notes\"], \"\") + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[\"Entry Name\"], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User ID\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n        value.__parsed_extra.forEach((extra: string) => {\n          if (!this.isNullOrWhitespace(extra)) {\n            cipher.notes += \"\\n\" + extra;\n          }\n        });\n      }\n\n      const fieldsJson = !this.isNullOrWhitespace(value[\"Extra Fields\"])\n        ? JSON.parse(value[\"Extra Fields\"])\n        : null;\n      const fields =\n        fieldsJson != null && fieldsJson.extraFields != null && fieldsJson.extraFields.length > 0\n          ? fieldsJson.extraFields.map((fieldJson: string) => {\n              try {\n                return JSON.parse(fieldJson);\n              } catch {\n                // Ignore error\n              }\n              return null;\n            })\n          : null;\n      if (fields != null) {\n        fields.forEach((f: any) => {\n          if (f != null) {\n            this.processKvp(cipher, f.name, f.data);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let newVersion = true;\n    results.forEach((value) => {\n      if (value.length !== 5 && value.length < 9) {\n        return;\n      }\n      const altFormat = value.length === 10 && value[0] === \"0\";\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n      cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n      if (value.length === 5) {\n        newVersion = false;\n        cipher.notes = this.getValueOrDefault(value[4]);\n        cipher.login.uris = this.makeUriArray(value[3]);\n      } else {\n        const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], \"(None)\");\n        let folderName = folder !== \"(None)\" ? folder.split(\"\\\\\").join(\"/\") : null;\n        if (folderName != null) {\n          folderName = folder.split(\" > \").join(\"/\");\n          folderName = folder.split(\">\").join(\"/\");\n        }\n        this.processFolder(result, folderName);\n        cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (newVersion && this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    results.folders.forEach((value: any) => {\n      foldersMap.set(value.id, value.name);\n    });\n    const foldersIndexMap = new Map<string, number>();\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((value: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.uris = this.makeUriArray(value.login_url);\n\n      if (value.folder != null && foldersIndexMap.has(value.folder)) {\n        result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n      }\n\n      if (value.identifiers == null) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n        cipher.notes = value.identifiers.notes.split(\"\\\\r\\\\n\").join(\"\\n\").split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (value.type === \"CreditCard\") {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n      }\n\n      for (const property in value.identifiers) {\n        // eslint-disable-next-line\n        if (!value.identifiers.hasOwnProperty(property)) {\n          continue;\n        }\n        const valObj = value.identifiers[property];\n        const val = valObj != null ? valObj.toString() : null;\n        if (\n          this.isNullOrWhitespace(val) ||\n          property === \"notes\" ||\n          property === \"ignoreItemInSecurityScore\"\n        ) {\n          continue;\n        }\n\n        if (property === \"custom_fields\") {\n          valObj.forEach((cf: any) => {\n            this.processKvp(cipher, cf.name, cf.value);\n          });\n          continue;\n        }\n\n        if (cipher.type === CipherType.Card) {\n          if (property === \"cardNumber\") {\n            cipher.card.number = val;\n            cipher.card.brand = this.getCardBrand(val);\n            continue;\n          } else if (property === \"nameOnCard\") {\n            cipher.card.cardholderName = val;\n            continue;\n          } else if (property === \"security_code\") {\n            cipher.card.code = val;\n            continue;\n          } else if (property === \"expires\") {\n            try {\n              const expDate = new Date(val);\n              cipher.card.expYear = expDate.getFullYear().toString();\n              cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n            } catch {\n              // Ignore error\n            }\n            continue;\n          } else if (property === \"cardType\") {\n            continue;\n          }\n        } else {\n          if (\n            (property === \"username\" || property === \"email\") &&\n            this.isNullOrWhitespace(cipher.login.username)\n          ) {\n            cipher.login.username = val;\n            continue;\n          } else if (property === \"password\") {\n            cipher.login.password = val;\n            continue;\n          } else if (property === \"totp\") {\n            cipher.login.totp = val;\n            continue;\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(property) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n            continue;\n          }\n        }\n\n        this.processKvp(cipher, property, val);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const records = doc.querySelectorAll(\"PasswordManager > record\");\n    Array.from(records).forEach((record) => {\n      const category = this.querySelectorDirectChild(record, \"Category\");\n      const categoryText =\n        category != null &&\n        !this.isNullOrWhitespace(category.textContent) &&\n        category.textContent !== \"Unfiled\"\n          ? category.textContent\n          : null;\n      this.processFolder(result, categoryText);\n\n      const accountName = this.querySelectorDirectChild(record, \"Account-Name\");\n      const userId = this.querySelectorDirectChild(record, \"User-Id\");\n      const password = this.querySelectorDirectChild(record, \"Password\");\n      const url = this.querySelectorDirectChild(record, \"URL\");\n      const notes = this.querySelectorDirectChild(record, \"Notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name =\n        accountName != null ? this.getValueOrDefault(accountName.textContent, \"--\") : \"--\";\n      cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : \"\";\n      cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      const attributes: string[] = [];\n      for (let i = 1; i <= 10; i++) {\n        attributes.push(\"Attribute-\" + i);\n      }\n\n      this.querySelectorAllDirectChild(record, attributes.join(\",\")).forEach((attr) => {\n        if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === \"null\") {\n          return;\n        }\n        this.processKvp(cipher, attr.tagName, attr.textContent);\n      });\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const passwordSafe = doc.querySelector(\"passwordsafe\");\n    if (passwordSafe == null) {\n      result.errorMessage = \"Missing `passwordsafe` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const notesDelimiter = passwordSafe.getAttribute(\"delimiter\");\n    const entries = doc.querySelectorAll(\"passwordsafe > entry\");\n    Array.from(entries).forEach((entry) => {\n      const group = this.querySelectorDirectChild(entry, \"group\");\n      const groupText =\n        group != null && !this.isNullOrWhitespace(group.textContent)\n          ? group.textContent.split(\".\").join(\"/\")\n          : null;\n      this.processFolder(result, groupText);\n\n      const title = this.querySelectorDirectChild(entry, \"title\");\n      const username = this.querySelectorDirectChild(entry, \"username\");\n      const email = this.querySelectorDirectChild(entry, \"email\");\n      const password = this.querySelectorDirectChild(entry, \"password\");\n      const url = this.querySelectorDirectChild(entry, \"url\");\n      const notes = this.querySelectorDirectChild(entry, \"notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name = title != null ? this.getValueOrDefault(title.textContent, \"--\") : \"--\";\n      cipher.notes =\n        notes != null\n          ? this.getValueOrDefault(notes.textContent, \"\").split(notesDelimiter).join(\"\\n\")\n          : null;\n      cipher.login.username =\n        username != null ? this.getValueOrDefault(username.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n        cipher.login.username = this.getValueOrDefault(email.textContent);\n      } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n        cipher.notes = this.isNullOrWhitespace(cipher.notes)\n          ? \"Email: \" + email.textContent\n          : cipher.notes + \"\\n\" + \"Email: \" + email.textContent;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 1) {\n        return;\n      }\n      if (value.length > 5) {\n        this.processFolder(result, value[5]);\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      if (value.length > 4) {\n        cipher.notes = this.getValueOrDefault(value[4], \"\").split(\"¬\").join(\"\\n\");\n      }\n      if (value.length > 2) {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n      }\n      if (value.length > 3) {\n        cipher.login.password = this.getValueOrDefault(value[3]);\n      }\n      if (value.length > 1) {\n        cipher.login.uris = this.makeUriArray(value[1]);\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.trash === \"true\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.notes);\n      if (value.type === \"LoginItem\") {\n        cipher.login.uris = this.makeUriArray(value.website);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      } else if (value.type === \"CreditCardItem\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.verification);\n\n        try {\n          const expMonth = this.getValueOrDefault(value.expiryMonth);\n          if (expMonth != null) {\n            const expMonthNumber = parseInt(expMonth, null);\n            if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n              cipher.card.expMonth = expMonthNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n        try {\n          const expYear = this.getValueOrDefault(value.expiryYear);\n          if (expYear != null) {\n            const expYearNumber = parseInt(expYear, null);\n            if (expYearNumber != null) {\n              cipher.card.expYear = expYearNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n\n        const pin = this.getValueOrDefault(value.pin);\n        if (pin != null) {\n          this.processKvp(cipher, \"PIN\", pin);\n        }\n        const zip = this.getValueOrDefault(value.zipCode);\n        if (zip != null) {\n          this.processKvp(cipher, \"Zip Code\", zip);\n        }\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let i = 1;\n    results.forEach((value) => {\n      const folder =\n        !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith(\"/\")\n          ? value.Folder.replace(\"/\", \"\")\n          : value.Folder;\n      const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Login);\n      cipher.login.password = this.getValueOrDefault(value.Pwd);\n      cipher.login.uris = this.makeUriArray(value.Url);\n\n      if (!this.isNullOrWhitespace(value.Rf_fields)) {\n        let fields: string[] = [value.Rf_fields];\n        if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n          fields = fields.concat(value.__parsed_extra);\n        }\n        fields.forEach((field: string) => {\n          const parts = field.split(\":\");\n          if (parts.length < 3) {\n            return;\n          }\n          const key = parts[0] === \"-no-name-\" ? null : parts[0];\n          const val = parts.length === 4 && parts[2] === \"rck\" ? parts[1] : parts[2];\n          this.processKvp(cipher, key, val);\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n\n      if (\n        i === results.length &&\n        cipher.name === \"--\" &&\n        this.isNullOrWhitespace(cipher.login.password)\n      ) {\n        return;\n      }\n\n      result.ciphers.push(cipher);\n      i++;\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SafariCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url ?? value.URL);\n      cipher.login.totp = this.getValueOrDefault(value.OTPAuth);\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const db = doc.querySelector(\"database\");\n    if (db == null) {\n      result.errorMessage = \"Missing `database` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, number>();\n\n    Array.from(doc.querySelectorAll(\"database > label\")).forEach((labelEl) => {\n      const name = labelEl.getAttribute(\"name\");\n      const id = labelEl.getAttribute(\"id\");\n      if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n        foldersMap.set(id, result.folders.length);\n        const folder = new FolderView();\n        folder.name = name;\n        result.folders.push(folder);\n      }\n    });\n\n    Array.from(doc.querySelectorAll(\"database > card\")).forEach((cardEl) => {\n      if (cardEl.getAttribute(\"template\") === \"true\" || cardEl.getAttribute(\"deleted\") === \"true\") {\n        return;\n      }\n\n      const labelIdEl = this.querySelectorDirectChild(cardEl, \"label_id\");\n      if (labelIdEl != null) {\n        const labelId = labelIdEl.textContent;\n        if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n          result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(cardEl.getAttribute(\"title\"), \"--\");\n\n      if (cardEl.getAttribute(\"star\") === \"true\") {\n        cipher.favorite = true;\n      }\n\n      const cardType = cardEl.getAttribute(\"type\");\n      if (cardType === \"note\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      } else {\n        Array.from(this.querySelectorAllDirectChild(cardEl, \"field\")).forEach((fieldEl) => {\n          const text = fieldEl.textContent;\n          if (this.isNullOrWhitespace(text)) {\n            return;\n          }\n          const name = fieldEl.getAttribute(\"name\");\n          const fieldType = this.getValueOrDefault(fieldEl.getAttribute(\"type\"), \"\").toLowerCase();\n          if (fieldType === \"login\") {\n            cipher.login.username = text;\n          } else if (fieldType === \"password\" || fieldType === \"secret\") {\n            // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n            this.processKvp(cipher, name, text, FieldType.Hidden);\n          } else if (fieldType === \"one_time_password\") {\n            cipher.login.totp = text;\n          } else if (fieldType === \"notes\") {\n            cipher.notes += text + \"\\n\";\n          } else if (fieldType === \"weblogin\" || fieldType === \"website\") {\n            cipher.login.uris = this.makeUriArray(text);\n          } else {\n            this.processKvp(cipher, name, text);\n          }\n        });\n      }\n\n      Array.from(this.querySelectorAllDirectChild(cardEl, \"notes\")).forEach((notesEl) => {\n        cipher.notes += notesEl.textContent + \"\\n\";\n      });\n\n      this.setPassword(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n  // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n  setPassword(cipher: CipherView) {\n    const candidates = cipher.fields.filter((field) => field.type === FieldType.Hidden);\n    if (!candidates.length) {\n      return;\n    }\n\n    let choice: FieldView;\n    for (const field of candidates) {\n      if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n        choice = field;\n        cipher.fields = cipher.fields.filter((f) => f !== choice);\n        break;\n      }\n    }\n\n    if (!choice) {\n      choice = candidates[0];\n    }\n\n    cipher.login.password = choice.value;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), \"--\");\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title);\n      cipher.notes = this.getValueOrDefault(value.Comment);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 2], \"\");\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n\n      if (value[0] === \"Web Logins\" || value[0] === \"Servers\" || value[0] === \"Email Accounts\") {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n        cipher.login.password = this.getValueOrDefault(value[3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n        this.parseFieldsToNotes(cipher, 5, value);\n      } else {\n        this.parseFieldsToNotes(cipher, 2, value);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n    // last 3 rows do not get parsed\n    for (let i = startIndex; i < value.length - 3; i++) {\n      if (this.isNullOrWhitespace(value[i])) {\n        continue;\n      }\n      cipher.notes += value[i] + \"\\n\";\n    }\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const loginNodes = doc.querySelectorAll(\"root > Database > Logins > Login\");\n    Array.from(loginNodes).forEach((loginNode) => {\n      const accountId = loginNode.getAttribute(\"ID\");\n      if (this.isNullOrWhitespace(accountId)) {\n        return;\n      }\n\n      const usernameText = loginNode.getAttribute(\"Name\");\n      const passwordText = loginNode.getAttribute(\"Password\");\n      let titleText: string = null;\n      let linkText: string = null;\n      let notesText: string = null;\n      let groupId: string = null;\n      let groupText: string = null;\n\n      const accountLogin = doc.querySelector(\n        \"root > Database > Accounts > Account > \" +\n          'LoginLinks > Login[SourceLoginID=\"' +\n          accountId +\n          '\"]'\n      );\n      if (accountLogin != null) {\n        const account = accountLogin.parentElement.parentElement;\n        if (account != null) {\n          titleText = account.getAttribute(\"Name\");\n          linkText = account.getAttribute(\"Link\");\n          groupId = account.getAttribute(\"ParentID\");\n          notesText = account.getAttribute(\"Comments\");\n          if (!this.isNullOrWhitespace(notesText)) {\n            notesText = notesText.split(\"/n\").join(\"\\n\");\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(groupId)) {\n        groupText = this.buildGroupText(doc, groupId, \"\");\n        this.processFolder(result, groupText);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(titleText, \"--\");\n      cipher.notes = this.getValueOrDefault(notesText);\n      cipher.login.username = this.getValueOrDefault(usernameText);\n      cipher.login.password = this.getValueOrDefault(passwordText);\n      cipher.login.uris = this.makeUriArray(linkText);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  buildGroupText(doc: Document, groupId: string, groupText: string): string {\n    const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n    if (group == null) {\n      return groupText;\n    }\n    if (!this.isNullOrWhitespace(groupText)) {\n      groupText = \"/\" + groupText;\n    }\n    groupText = group.getAttribute(\"Name\") + groupText;\n    return this.buildGroupText(doc, group.getAttribute(\"ParentID\"), groupText);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst PropertiesToIgnore = [\n  \"kind\",\n  \"autologin\",\n  \"favorite\",\n  \"hexcolor\",\n  \"protectedwithpassword\",\n  \"subdomainonly\",\n  \"type\",\n  \"tk_export_version\",\n  \"note\",\n  \"title\",\n  \"document_content\",\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.favorite, \"\").toLowerCase() === \"true\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.notes = this.getValueOrDefault(value.memo, \"\");\n      cipher.login.username = this.getValueOrDefault(value.login);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n\n      if (value.kind !== \"login\") {\n        cipher.name = this.getValueOrDefault(value.title, \"--\");\n        cipher.notes = this.getValueOrDefault(value.note, \"\");\n      }\n\n      if (value.kind === \"cc\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (!this.isNullOrWhitespace(value.expiryDate)) {\n          try {\n            const expDate = new Date(value.expiryDate);\n            cipher.card.expYear = expDate.getFullYear().toString();\n            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n          } catch {\n            // Ignore error\n          }\n        }\n      } else if (value.kind !== \"login\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = this.getValueOrDefault(value.document_content, \"\");\n        }\n        for (const property in value) {\n          if (\n            value.hasOwnProperty(property) && // eslint-disable-line\n            PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n            !this.isNullOrWhitespace(value[property])\n          ) {\n            this.processKvp(cipher, property, value[property]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length !== 5) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.notes = this.getValueOrDefault(value[4]);\n      cipher.login.username = this.getValueOrDefault(value[1]);\n      cipher.login.password = this.getValueOrDefault(value[2]);\n      cipher.login.uris = this.makeUriArray(value[3]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User name\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (\n        this.isNullOrWhitespace(value[\"Password Name\"]) &&\n        this.isNullOrWhitespace(value[\"Secret Name\"])\n      ) {\n        return;\n      }\n      this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite, \"0\") === \"1\";\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(\n        value[\"Password Name\"],\n        this.getValueOrDefault(value[\"Secret Name\"], \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(\n        this.getValueOrDefault(value[\"Password URL\"], this.getValueOrDefault(value[\"Secret URL\"]))\n      );\n      this.parseData(cipher, value.SecretData);\n      this.parseData(cipher, value.CustomData);\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseData(cipher: CipherView, data: string) {\n    if (this.isNullOrWhitespace(data)) {\n      return;\n    }\n    const dataLines = this.splitNewLine(data);\n    dataLines.forEach((line) => {\n      const delimPosition = line.indexOf(\":\");\n      if (delimPosition < 0) {\n        return;\n      }\n      const field = line.substring(0, delimPosition);\n      const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n      if (\n        this.isNullOrWhitespace(field) ||\n        this.isNullOrWhitespace(value) ||\n        field === \"SecretType\"\n      ) {\n        return;\n      }\n      const fieldLower = field.toLowerCase();\n      if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n        cipher.login.username = value;\n      } else if (\n        cipher.login.password == null &&\n        this.passwordFieldNames.indexOf(fieldLower) > -1\n      ) {\n        cipher.login.password = value;\n      } else {\n        this.processKvp(cipher, field, value);\n      }\n    });\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { FolderRequest } from \"./folderRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  folders: FolderRequest[] = [];\n  folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { CollectionRequest } from \"./collectionRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportOrganizationCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  collections: CollectionRequest[] = [];\n  collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","export class KvpRequest<TK, TV> {\n  key: TK;\n  value: TV;\n\n  constructor(key: TK, value: TV) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { ImportService as ImportServiceAbstraction } from \"../abstractions/import.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport {\n  featuredImportOptions,\n  ImportOption,\n  ImportType,\n  regularImportOptions,\n} from \"../enums/importOptions\";\nimport { AscendoCsvImporter } from \"../importers/ascendoCsvImporter\";\nimport { AvastCsvImporter } from \"../importers/avastCsvImporter\";\nimport { AvastJsonImporter } from \"../importers/avastJsonImporter\";\nimport { AviraCsvImporter } from \"../importers/aviraCsvImporter\";\nimport { BitwardenCsvImporter } from \"../importers/bitwardenCsvImporter\";\nimport { BitwardenJsonImporter } from \"../importers/bitwardenJsonImporter\";\nimport { BitwardenPasswordProtectedImporter } from \"../importers/bitwardenPasswordProtectedImporter\";\nimport { BlackBerryCsvImporter } from \"../importers/blackBerryCsvImporter\";\nimport { BlurCsvImporter } from \"../importers/blurCsvImporter\";\nimport { ButtercupCsvImporter } from \"../importers/buttercupCsvImporter\";\nimport { ChromeCsvImporter } from \"../importers/chromeCsvImporter\";\nimport { ClipperzHtmlImporter } from \"../importers/clipperzHtmlImporter\";\nimport { CodebookCsvImporter } from \"../importers/codebookCsvImporter\";\nimport { DashlaneCsvImporter } from \"../importers/dashlaneImporters/dashlaneCsvImporter\";\nimport { DashlaneJsonImporter } from \"../importers/dashlaneImporters/dashlaneJsonImporter\";\nimport { EncryptrCsvImporter } from \"../importers/encryptrCsvImporter\";\nimport { EnpassCsvImporter } from \"../importers/enpassCsvImporter\";\nimport { EnpassJsonImporter } from \"../importers/enpassJsonImporter\";\nimport { FirefoxCsvImporter } from \"../importers/firefoxCsvImporter\";\nimport { FSecureFskImporter } from \"../importers/fsecureFskImporter\";\nimport { GnomeJsonImporter } from \"../importers/gnomeJsonImporter\";\nimport { ImportError } from \"../importers/importError\";\nimport { Importer } from \"../importers/importer\";\nimport { KasperskyTxtImporter } from \"../importers/kasperskyTxtImporter\";\nimport { KeePass2XmlImporter } from \"../importers/keepass2XmlImporter\";\nimport { KeePassXCsvImporter } from \"../importers/keepassxCsvImporter\";\nimport { KeeperCsvImporter } from \"../importers/keeperImporters/keeperCsvImporter\";\nimport { LastPassCsvImporter } from \"../importers/lastpassCsvImporter\";\nimport { LogMeOnceCsvImporter } from \"../importers/logMeOnceCsvImporter\";\nimport { MeldiumCsvImporter } from \"../importers/meldiumCsvImporter\";\nimport { MSecureCsvImporter } from \"../importers/msecureCsvImporter\";\nimport { MykiCsvImporter } from \"../importers/mykiCsvImporter\";\nimport { NordPassCsvImporter } from \"../importers/nordpassCsvImporter\";\nimport { OnePassword1PifImporter } from \"../importers/onepasswordImporters/onepassword1PifImporter\";\nimport { OnePassword1PuxImporter } from \"../importers/onepasswordImporters/onepassword1PuxImporter\";\nimport { OnePasswordMacCsvImporter } from \"../importers/onepasswordImporters/onepasswordMacCsvImporter\";\nimport { OnePasswordWinCsvImporter } from \"../importers/onepasswordImporters/onepasswordWinCsvImporter\";\nimport { PadlockCsvImporter } from \"../importers/padlockCsvImporter\";\nimport { PassKeepCsvImporter } from \"../importers/passkeepCsvImporter\";\nimport { PassmanJsonImporter } from \"../importers/passmanJsonImporter\";\nimport { PasspackCsvImporter } from \"../importers/passpackCsvImporter\";\nimport { PasswordAgentCsvImporter } from \"../importers/passwordAgentCsvImporter\";\nimport { PasswordBossJsonImporter } from \"../importers/passwordBossJsonImporter\";\nimport { PasswordDragonXmlImporter } from \"../importers/passwordDragonXmlImporter\";\nimport { PasswordSafeXmlImporter } from \"../importers/passwordSafeXmlImporter\";\nimport { PasswordWalletTxtImporter } from \"../importers/passwordWalletTxtImporter\";\nimport { RememBearCsvImporter } from \"../importers/rememBearCsvImporter\";\nimport { RoboFormCsvImporter } from \"../importers/roboformCsvImporter\";\nimport { SafariCsvImporter } from \"../importers/safariCsvImporter\";\nimport { SafeInCloudXmlImporter } from \"../importers/safeInCloudXmlImporter\";\nimport { SaferPassCsvImporter } from \"../importers/saferpassCsvImport\";\nimport { SecureSafeCsvImporter } from \"../importers/secureSafeCsvImporter\";\nimport { SplashIdCsvImporter } from \"../importers/splashIdCsvImporter\";\nimport { StickyPasswordXmlImporter } from \"../importers/stickyPasswordXmlImporter\";\nimport { TrueKeyCsvImporter } from \"../importers/truekeyCsvImporter\";\nimport { UpmCsvImporter } from \"../importers/upmCsvImporter\";\nimport { YotiCsvImporter } from \"../importers/yotiCsvImporter\";\nimport { ZohoVaultCsvImporter } from \"../importers/zohoVaultCsvImporter\";\nimport { Utils } from \"../misc/utils\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KvpRequest } from \"../models/request/kvpRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nexport class ImportService implements ImportServiceAbstraction {\n  featuredImportOptions = featuredImportOptions as readonly ImportOption[];\n\n  regularImportOptions = regularImportOptions as readonly ImportOption[];\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService\n  ) {}\n\n  getImportOptions(): ImportOption[] {\n    return this.featuredImportOptions.concat(this.regularImportOptions);\n  }\n\n  async import(\n    importer: Importer,\n    fileContents: string,\n    organizationId: string = null\n  ): Promise<ImportError> {\n    const importResult = await importer.parse(fileContents);\n    if (importResult.success) {\n      if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n        return new ImportError(this.i18nService.t(\"importNothingError\"));\n      } else if (importResult.ciphers.length > 0) {\n        const halfway = Math.floor(importResult.ciphers.length / 2);\n        const last = importResult.ciphers.length - 1;\n\n        if (\n          this.badData(importResult.ciphers[0]) &&\n          this.badData(importResult.ciphers[halfway]) &&\n          this.badData(importResult.ciphers[last])\n        ) {\n          return new ImportError(this.i18nService.t(\"importFormatError\"));\n        }\n      }\n      try {\n        await this.postImport(importResult, organizationId);\n      } catch (error) {\n        const errorResponse = new ErrorResponse(error, 400);\n        return this.handleServerError(errorResponse, importResult);\n      }\n      return null;\n    } else {\n      if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n        return new ImportError(importResult.errorMessage, importResult.missingPassword);\n      } else {\n        return new ImportError(\n          this.i18nService.t(\"importFormatError\"),\n          importResult.missingPassword\n        );\n      }\n    }\n  }\n\n  getImporter(\n    format: ImportType | \"bitwardenpasswordprotected\",\n    organizationId: string = null,\n    password: string = null\n  ): Importer {\n    const importer = this.getImporterInstance(format, password);\n    if (importer == null) {\n      return null;\n    }\n    importer.organizationId = organizationId;\n    return importer;\n  }\n\n  private getImporterInstance(format: ImportType | \"bitwardenpasswordprotected\", password: string) {\n    if (format == null) {\n      return null;\n    }\n\n    switch (format) {\n      case \"bitwardencsv\":\n        return new BitwardenCsvImporter();\n      case \"bitwardenjson\":\n        return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n      case \"bitwardenpasswordprotected\":\n        return new BitwardenPasswordProtectedImporter(\n          this.cryptoService,\n          this.i18nService,\n          password\n        );\n      case \"lastpasscsv\":\n      case \"passboltcsv\":\n        return new LastPassCsvImporter();\n      case \"keepassxcsv\":\n        return new KeePassXCsvImporter();\n      case \"aviracsv\":\n        return new AviraCsvImporter();\n      case \"blurcsv\":\n        return new BlurCsvImporter();\n      case \"safeincloudxml\":\n        return new SafeInCloudXmlImporter();\n      case \"padlockcsv\":\n        return new PadlockCsvImporter();\n      case \"keepass2xml\":\n        return new KeePass2XmlImporter();\n      case \"chromecsv\":\n      case \"operacsv\":\n      case \"vivaldicsv\":\n        return new ChromeCsvImporter();\n      case \"firefoxcsv\":\n        return new FirefoxCsvImporter();\n      case \"upmcsv\":\n        return new UpmCsvImporter();\n      case \"saferpasscsv\":\n        return new SaferPassCsvImporter();\n      case \"safaricsv\":\n        return new SafariCsvImporter();\n      case \"meldiumcsv\":\n        return new MeldiumCsvImporter();\n      case \"1password1pif\":\n        return new OnePassword1PifImporter();\n      case \"1password1pux\":\n        return new OnePassword1PuxImporter();\n      case \"1passwordwincsv\":\n        return new OnePasswordWinCsvImporter();\n      case \"1passwordmaccsv\":\n        return new OnePasswordMacCsvImporter();\n      case \"keepercsv\":\n        return new KeeperCsvImporter();\n      // case \"keeperjson\":\n      //   return new KeeperJsonImporter();\n      case \"passworddragonxml\":\n        return new PasswordDragonXmlImporter();\n      case \"enpasscsv\":\n        return new EnpassCsvImporter();\n      case \"enpassjson\":\n        return new EnpassJsonImporter();\n      case \"pwsafexml\":\n        return new PasswordSafeXmlImporter();\n      case \"dashlanecsv\":\n        return new DashlaneCsvImporter();\n      case \"dashlanejson\":\n        return new DashlaneJsonImporter();\n      case \"msecurecsv\":\n        return new MSecureCsvImporter();\n      case \"stickypasswordxml\":\n        return new StickyPasswordXmlImporter();\n      case \"truekeycsv\":\n        return new TrueKeyCsvImporter();\n      case \"clipperzhtml\":\n        return new ClipperzHtmlImporter();\n      case \"roboformcsv\":\n        return new RoboFormCsvImporter();\n      case \"ascendocsv\":\n        return new AscendoCsvImporter();\n      case \"passwordbossjson\":\n        return new PasswordBossJsonImporter();\n      case \"zohovaultcsv\":\n        return new ZohoVaultCsvImporter();\n      case \"splashidcsv\":\n        return new SplashIdCsvImporter();\n      case \"passkeepcsv\":\n        return new PassKeepCsvImporter();\n      case \"gnomejson\":\n        return new GnomeJsonImporter();\n      case \"passwordagentcsv\":\n        return new PasswordAgentCsvImporter();\n      case \"passpackcsv\":\n        return new PasspackCsvImporter();\n      case \"passmanjson\":\n        return new PassmanJsonImporter();\n      case \"avastcsv\":\n        return new AvastCsvImporter();\n      case \"avastjson\":\n        return new AvastJsonImporter();\n      case \"fsecurefsk\":\n        return new FSecureFskImporter();\n      case \"kasperskytxt\":\n        return new KasperskyTxtImporter();\n      case \"remembearcsv\":\n        return new RememBearCsvImporter();\n      case \"passwordwallettxt\":\n        return new PasswordWalletTxtImporter();\n      case \"mykicsv\":\n        return new MykiCsvImporter();\n      case \"securesafecsv\":\n        return new SecureSafeCsvImporter();\n      case \"logmeoncecsv\":\n        return new LogMeOnceCsvImporter();\n      case \"blackberrycsv\":\n        return new BlackBerryCsvImporter();\n      case \"buttercupcsv\":\n        return new ButtercupCsvImporter();\n      case \"codebookcsv\":\n        return new CodebookCsvImporter();\n      case \"encryptrcsv\":\n        return new EncryptrCsvImporter();\n      case \"yoticsv\":\n        return new YotiCsvImporter();\n      case \"nordpasscsv\":\n        return new NordPassCsvImporter();\n      default:\n        return null;\n    }\n  }\n\n  private async postImport(importResult: ImportResult, organizationId: string = null) {\n    if (organizationId == null) {\n      const request = new ImportCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.folders != null) {\n        for (let i = 0; i < importResult.folders.length; i++) {\n          const f = await this.folderService.encrypt(importResult.folders[i]);\n          request.folders.push(new FolderRequest(f));\n        }\n      }\n      if (importResult.folderRelationships != null) {\n        importResult.folderRelationships.forEach((r) =>\n          request.folderRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportCiphers(request);\n    } else {\n      const request = new ImportOrganizationCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        importResult.ciphers[i].organizationId = organizationId;\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.collections != null) {\n        for (let i = 0; i < importResult.collections.length; i++) {\n          importResult.collections[i].organizationId = organizationId;\n          const c = await this.collectionService.encrypt(importResult.collections[i]);\n          request.collections.push(new CollectionRequest(c));\n        }\n      }\n      if (importResult.collectionRelationships != null) {\n        importResult.collectionRelationships.forEach((r) =>\n          request.collectionRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n    }\n  }\n\n  private badData(c: CipherView) {\n    return (\n      (c.name == null || c.name === \"--\") &&\n      c.type === CipherType.Login &&\n      c.login != null &&\n      Utils.isNullOrWhitespace(c.login.password)\n    );\n  }\n\n  private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): ImportError {\n    if (errorResponse.validationErrors == null) {\n      return new ImportError(errorResponse.message);\n    }\n\n    let errorMessage = \"\";\n\n    Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n      let item;\n      let itemType;\n      const i = Number(key.match(/[0-9]+/)[0]);\n\n      switch (key.match(/^\\w+/)[0]) {\n        case \"Ciphers\":\n          item = importResult.ciphers[i];\n          itemType = CipherType[item.type];\n          break;\n        case \"Folders\":\n          item = importResult.folders[i];\n          itemType = \"Folder\";\n          break;\n        case \"Collections\":\n          item = importResult.collections[i];\n          itemType = \"Collection\";\n          break;\n        default:\n          return;\n      }\n\n      if (index > 0) {\n        errorMessage += \"\\n\\n\";\n      }\n\n      if (itemType !== \"Folder\" && itemType !== \"Collection\") {\n        errorMessage += \"[\" + (i + 1) + \"] \";\n      }\n\n      errorMessage += \"[\" + itemType + '] \"' + item.name + '\": ' + value;\n    });\n\n    return new ImportError(errorMessage);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\n\nexport class NoopMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    // Do nothing...\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"zxcvbn\");","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lunr\");","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    this.state.authenticatedAccounts = this.state.authenticatedAccounts.filter(\n      (activeUserId) => activeUserId !== userId\n    );\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import * as child_process from \"child_process\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\n// eslint-disable-next-line\nconst open = require(\"open\");\n\nexport class CliPlatformUtilsService implements PlatformUtilsService {\n  clientType: ClientType;\n\n  private deviceCache: DeviceType = null;\n\n  constructor(clientType: ClientType, private packageJson: any) {\n    this.clientType = clientType;\n  }\n\n  getDevice(): DeviceType {\n    if (!this.deviceCache) {\n      switch (process.platform) {\n        case \"win32\":\n          this.deviceCache = DeviceType.WindowsDesktop;\n          break;\n        case \"darwin\":\n          this.deviceCache = DeviceType.MacOsDesktop;\n          break;\n        case \"linux\":\n        default:\n          this.deviceCache = DeviceType.LinuxDesktop;\n          break;\n      }\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"desktop\", \"\");\n  }\n\n  getClientType() {\n    return this.clientType;\n  }\n\n  isFirefox() {\n    return false;\n  }\n\n  isChrome() {\n    return false;\n  }\n\n  isEdge() {\n    return false;\n  }\n\n  isOpera() {\n    return false;\n  }\n\n  isVivaldi() {\n    return false;\n  }\n\n  isSafari() {\n    return false;\n  }\n\n  isMacAppStore() {\n    return false;\n  }\n\n  isViewOpen() {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    if (process.platform === \"linux\") {\n      child_process.spawnSync(\"xdg-open\", [uri]);\n    } else {\n      open(uri);\n    }\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    throw new Error(\"Not implemented.\");\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(this.packageJson.version);\n  }\n\n  getApplicationVersionSync(): string {\n    return this.packageJson.version;\n  }\n\n  supportsWebAuthn(win: Window) {\n    return false;\n  }\n\n  supportsDuo(): boolean {\n    return false;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    throw new Error(\"Not implemented.\");\n  }\n\n  showDialog(\n    text: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string\n  ): Promise<boolean> {\n    throw new Error(\"Not implemented.\");\n  }\n\n  isDev(): boolean {\n    return process.env.BWCLI_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    throw new Error(\"Not implemented.\");\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Not implemented.\");\n  }\n\n  supportsBiometric(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  getDefaultSystemTheme() {\n    return Promise.resolve(ThemeType.Light as ThemeType.Light | ThemeType.Dark);\n  }\n\n  onDefaultSystemThemeChange() {\n    /* noop */\n  }\n\n  getEffectiveTheme() {\n    return Promise.resolve(ThemeType.Light);\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n}\n","import { LogLevelType } from \"jslib-common/enums/logLevelType\";\nimport { ConsoleLogService as BaseConsoleLogService } from \"jslib-common/services/consoleLog.service\";\n\nexport class ConsoleLogService extends BaseConsoleLogService {\n  constructor(isDev: boolean, filter: (level: LogLevelType) => boolean = null) {\n    super(isDev, filter);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    if (process.env.BW_RESPONSE === \"true\") {\n      // eslint-disable-next-line\n      console.error(message);\n      return;\n    }\n\n    super.write(level, message);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"form-data\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https-proxy-agent\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node-fetch\");","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { DeviceRequest } from \"jslib-common/models/request/deviceRequest\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import * as FormData from \"form-data\";\nimport { HttpsProxyAgent } from \"https-proxy-agent\";\nimport * as fe from \"node-fetch\";\n\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { ApiService } from \"jslib-common/services/api.service\";\n\n(global as any).fetch = fe.default;\n(global as any).Request = fe.Request;\n(global as any).Response = fe.Response;\n(global as any).Headers = fe.Headers;\n(global as any).FormData = FormData;\n\nexport class NodeApiService extends ApiService {\n  constructor(\n    tokenService: TokenService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    appIdService: AppIdService,\n    logoutCallback: (expired: boolean) => Promise<void>,\n    customUserAgent: string = null\n  ) {\n    super(\n      tokenService,\n      platformUtilsService,\n      environmentService,\n      appIdService,\n      logoutCallback,\n      customUserAgent\n    );\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    const proxy = process.env.http_proxy || process.env.https_proxy;\n    if (proxy) {\n      (request as any).agent = new HttpsProxyAgent(proxy);\n    }\n    return fetch(request);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node-forge\");","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as crypto from \"crypto\";\n\nimport * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { DecryptParameters } from \"jslib-common/models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nexport class NodeCryptoFunctionService implements CryptoFunctionService {\n  pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const len = algorithm === \"sha256\" ? 32 : 64;\n    const nodePassword = this.toNodeValue(password);\n    const nodeSalt = this.toNodeValue(salt);\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      crypto.pbkdf2(nodePassword, nodeSalt, iterations, len, algorithm, (error, key) => {\n        if (error != null) {\n          reject(error);\n        } else {\n          resolve(this.toArrayBuffer(key));\n        }\n      });\n    });\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toArrayBuffer(salt);\n    const prk = await this.hmac(ikm, saltBuf, algorithm);\n    return this.hkdfExpand(prk, info, outputByteSize, algorithm);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toArrayBuffer(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    const nodeValue = this.toNodeValue(value);\n    const hash = crypto.createHash(algorithm);\n    hash.update(nodeValue);\n    return Promise.resolve(this.toArrayBuffer(hash.digest()));\n  }\n\n  hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const nodeValue = this.toNodeBuffer(value);\n    const nodeKey = this.toNodeBuffer(key);\n    const hmac = crypto.createHmac(algorithm, nodeKey);\n    hmac.update(nodeValue);\n    return Promise.resolve(this.toArrayBuffer(hmac.digest()));\n  }\n\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const key = await this.randomBytes(32);\n    const mac1 = await this.hmac(a, key, \"sha256\");\n    const mac2 = await this.hmac(b, key, \"sha256\");\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    return this.hmac(value, key, algorithm);\n  }\n\n  compareFast(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    return this.compare(a, b);\n  }\n\n  aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const nodeData = this.toNodeBuffer(data);\n    const nodeIv = this.toNodeBuffer(iv);\n    const nodeKey = this.toNodeBuffer(key);\n    const cipher = crypto.createCipheriv(\"aes-256-cbc\", nodeKey, nodeIv);\n    const encBuf = Buffer.concat([cipher.update(nodeData), cipher.final()]);\n    return Promise.resolve(this.toArrayBuffer(encBuf));\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<ArrayBuffer> {\n    const p = new DecryptParameters<ArrayBuffer>();\n    p.encKey = key.encKey;\n    p.data = Utils.fromB64ToArray(data).buffer;\n    p.iv = Utils.fromB64ToArray(iv).buffer;\n\n    const macData = new Uint8Array(p.iv.byteLength + p.data.byteLength);\n    macData.set(new Uint8Array(p.iv), 0);\n    macData.set(new Uint8Array(p.data), p.iv.byteLength);\n    p.macData = macData.buffer;\n\n    if (key.macKey != null) {\n      p.macKey = key.macKey;\n    }\n    if (mac != null) {\n      p.mac = Utils.fromB64ToArray(mac).buffer;\n    }\n\n    return p;\n  }\n\n  async aesDecryptFast(parameters: DecryptParameters<ArrayBuffer>): Promise<string> {\n    const decBuf = await this.aesDecrypt(parameters.data, parameters.iv, parameters.encKey);\n    return Utils.fromBufferToUtf8(decBuf);\n  }\n\n  aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const nodeData = this.toNodeBuffer(data);\n    const nodeIv = this.toNodeBuffer(iv);\n    const nodeKey = this.toNodeBuffer(key);\n    const decipher = crypto.createDecipheriv(\"aes-256-cbc\", nodeKey, nodeIv);\n    const decBuf = Buffer.concat([decipher.update(nodeData), decipher.final()]);\n    return Promise.resolve(this.toArrayBuffer(decBuf));\n  }\n\n  rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"sha256\") {\n      throw new Error(\"Node crypto does not support RSA-OAEP SHA-256\");\n    }\n\n    const pem = this.toPemPublicKey(publicKey);\n    const decipher = crypto.publicEncrypt(pem, this.toNodeBuffer(data));\n    return Promise.resolve(this.toArrayBuffer(decipher));\n  }\n\n  rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"sha256\") {\n      throw new Error(\"Node crypto does not support RSA-OAEP SHA-256\");\n    }\n\n    const pem = this.toPemPrivateKey(privateKey);\n    const decipher = crypto.privateDecrypt(pem, this.toNodeBuffer(data));\n    return Promise.resolve(this.toArrayBuffer(decipher));\n  }\n\n  rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const privateKeyByteString = Utils.fromBufferToByteString(privateKey);\n    const privateKeyAsn1 = forge.asn1.fromDer(privateKeyByteString);\n    const forgePrivateKey: any = forge.pki.privateKeyFromAsn1(privateKeyAsn1);\n    const forgePublicKey = (forge.pki as any).setRsaPublicKey(forgePrivateKey.n, forgePrivateKey.e);\n    const publicKeyAsn1 = forge.pki.publicKeyToAsn1(forgePublicKey);\n    const publicKeyByteString = forge.asn1.toDer(publicKeyAsn1).data;\n    const publicKeyArray = Utils.fromByteStringToArray(publicKeyByteString);\n    return Promise.resolve(publicKeyArray.buffer);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    return new Promise<[ArrayBuffer, ArrayBuffer]>((resolve, reject) => {\n      forge.pki.rsa.generateKeyPair(\n        {\n          bits: length,\n          workers: -1,\n          e: 0x10001, // 65537\n        },\n        (error, keyPair) => {\n          if (error != null) {\n            reject(error);\n            return;\n          }\n\n          const publicKeyAsn1 = forge.pki.publicKeyToAsn1(keyPair.publicKey);\n          const publicKeyByteString = forge.asn1.toDer(publicKeyAsn1).getBytes();\n          const publicKey = Utils.fromByteStringToArray(publicKeyByteString);\n\n          const privateKeyAsn1 = forge.pki.privateKeyToAsn1(keyPair.privateKey);\n          const privateKeyPkcs8 = forge.pki.wrapRsaPrivateKey(privateKeyAsn1);\n          const privateKeyByteString = forge.asn1.toDer(privateKeyPkcs8).getBytes();\n          const privateKey = Utils.fromByteStringToArray(privateKeyByteString);\n\n          resolve([publicKey.buffer, privateKey.buffer]);\n        }\n      );\n    });\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      crypto.randomBytes(length, (error, bytes) => {\n        if (error != null) {\n          reject(error);\n        } else {\n          resolve(this.toArrayBuffer(bytes));\n        }\n      });\n    });\n  }\n\n  private toNodeValue(value: string | ArrayBuffer): string | Buffer {\n    let nodeValue: string | Buffer;\n    if (typeof value === \"string\") {\n      nodeValue = value;\n    } else {\n      nodeValue = this.toNodeBuffer(value);\n    }\n    return nodeValue;\n  }\n\n  private toNodeBuffer(value: ArrayBuffer): Buffer {\n    return Buffer.from(new Uint8Array(value) as any);\n  }\n\n  private toArrayBuffer(value: Buffer | string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = new Uint8Array(value).buffer;\n    }\n    return buf;\n  }\n\n  private toPemPrivateKey(key: ArrayBuffer): string {\n    const byteString = Utils.fromBufferToByteString(key);\n    const asn1 = forge.asn1.fromDer(byteString);\n    const privateKey = forge.pki.privateKeyFromAsn1(asn1);\n    const rsaPrivateKey = forge.pki.privateKeyToAsn1(privateKey);\n    const privateKeyInfo = forge.pki.wrapRsaPrivateKey(rsaPrivateKey);\n    return forge.pki.privateKeyInfoToPem(privateKeyInfo);\n  }\n\n  private toPemPublicKey(key: ArrayBuffer): string {\n    const byteString = Utils.fromBufferToByteString(key);\n    const asn1 = forge.asn1.fromDer(byteString);\n    const publicKey = forge.pki.publicKeyFromAsn1(asn1);\n    return forge.pki.publicKeyToPem(publicKey);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"chalk\");","import { BaseResponse } from \"./response/baseResponse\";\n\nexport class Response {\n  static error(error: any, data?: any): Response {\n    const res = new Response();\n    res.success = false;\n    if (typeof error === \"string\") {\n      res.message = error;\n    } else {\n      res.message =\n        error.message != null\n          ? error.message\n          : error.toString() === \"[object Object]\"\n          ? JSON.stringify(error)\n          : error.toString();\n    }\n    res.data = data;\n    return res;\n  }\n\n  static notFound(): Response {\n    return Response.error(\"Not found.\");\n  }\n\n  static badRequest(message: string): Response {\n    return Response.error(message);\n  }\n\n  static multipleResults(ids: string[]): Response {\n    let msg =\n      \"More than one result was found. Try getting a specific object by `id` instead. \" +\n      \"The following objects were found:\";\n    ids.forEach((id) => {\n      msg += \"\\n\" + id;\n    });\n    return Response.error(msg, ids);\n  }\n\n  static success(data?: BaseResponse): Response {\n    const res = new Response();\n    res.success = true;\n    res.data = data;\n    return res;\n  }\n\n  success: boolean;\n  message: string;\n  errorCode: number;\n  data: BaseResponse;\n}\n","import * as chalk from \"chalk\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { Response } from \"./models/response\";\nimport { ListResponse } from \"./models/response/listResponse\";\nimport { MessageResponse } from \"./models/response/messageResponse\";\nimport { StringResponse } from \"./models/response/stringResponse\";\n\nexport abstract class BaseProgram {\n  constructor(\n    protected stateService: StateService,\n    private writeLn: (s: string, finalLine: boolean, error: boolean) => void\n  ) {}\n\n  protected processResponse(\n    response: Response,\n    exitImmediately = false,\n    dataProcessor: () => string = null\n  ) {\n    if (!response.success) {\n      if (process.env.BW_QUIET !== \"true\") {\n        if (process.env.BW_RESPONSE === \"true\") {\n          this.writeLn(this.getJson(response), true, false);\n        } else {\n          this.writeLn(chalk.redBright(response.message), true, true);\n        }\n      }\n      const exitCode = process.env.BW_CLEANEXIT ? 0 : 1;\n      if (exitImmediately) {\n        process.exit(exitCode);\n      } else {\n        process.exitCode = exitCode;\n      }\n      return;\n    }\n\n    if (process.env.BW_RESPONSE === \"true\") {\n      this.writeLn(this.getJson(response), true, false);\n    } else if (response.data != null) {\n      let out: string = dataProcessor != null ? dataProcessor() : null;\n      if (out == null) {\n        if (response.data.object === \"string\") {\n          const data = (response.data as StringResponse).data;\n          if (data != null) {\n            out = data;\n          }\n        } else if (response.data.object === \"list\") {\n          out = this.getJson((response.data as ListResponse).data);\n        } else if (response.data.object === \"message\") {\n          out = this.getMessage(response);\n        } else {\n          out = this.getJson(response.data);\n        }\n      }\n\n      if (out != null && process.env.BW_QUIET !== \"true\") {\n        this.writeLn(out, true, false);\n      }\n    }\n    if (exitImmediately) {\n      process.exit(0);\n    } else {\n      process.exitCode = 0;\n    }\n  }\n\n  protected getJson(obj: any): string {\n    if (process.env.BW_PRETTY === \"true\") {\n      return JSON.stringify(obj, null, \"  \");\n    } else {\n      return JSON.stringify(obj);\n    }\n  }\n\n  protected getMessage(response: Response): string {\n    const message = response.data as MessageResponse;\n    if (process.env.BW_RAW === \"true\") {\n      return message.raw;\n    }\n\n    let out = \"\";\n    if (message.title != null) {\n      if (message.noColor) {\n        out = message.title;\n      } else {\n        out = chalk.greenBright(message.title);\n      }\n    }\n    if (message.message != null) {\n      if (message.title != null) {\n        out += \"\\n\";\n      }\n      out += message.message;\n    }\n    return out.trim() === \"\" ? null : out;\n  }\n\n  protected async exitIfAuthed() {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (authed) {\n      const email = await this.stateService.getEmail();\n      this.processResponse(Response.error(\"You are already logged in as \" + email + \".\"), true);\n    }\n  }\n\n  protected async exitIfNotAuthed() {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      this.processResponse(Response.error(\"You are not logged in.\"), true);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class MessageResponse implements BaseResponse {\n  object: string;\n  title: string;\n  message: string;\n  raw: string;\n  noColor = false;\n\n  constructor(title: string, message: string) {\n    this.object = \"message\";\n    this.title = title;\n    this.message = message;\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\nimport { Response } from \"../models/response\";\nimport { MessageResponse } from \"../models/response/messageResponse\";\n\nexport class LogoutCommand {\n  constructor(\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private logoutCallback: () => Promise<void>\n  ) {}\n\n  async run() {\n    await this.logoutCallback();\n    this.authService.logOut(() => {\n      /* Do nothing */\n    });\n    const res = new MessageResponse(\"You have logged out.\", null);\n    return Response.success(res);\n  }\n}\n","import * as fetch from \"node-fetch\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { Response } from \"../models/response\";\nimport { MessageResponse } from \"../models/response/messageResponse\";\n\nexport class UpdateCommand {\n  inPkg = false;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private repoName: string,\n    private executableName: string,\n    private showExtendedMessage: boolean\n  ) {\n    this.inPkg = !!(process as any).pkg;\n  }\n\n  async run(): Promise<Response> {\n    const currentVersion = await this.platformUtilsService.getApplicationVersion();\n\n    const response = await fetch.default(\n      \"https://api.github.com/repos/bitwarden/\" + this.repoName + \"/releases/latest\"\n    );\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const res = new MessageResponse(null, null);\n\n      const tagName: string = responseJson.tag_name;\n      if (tagName === \"v\" + currentVersion) {\n        res.title = \"No update available.\";\n        res.noColor = true;\n        return Response.success(res);\n      }\n\n      let downloadUrl: string = null;\n      if (responseJson.assets != null) {\n        for (const a of responseJson.assets) {\n          const download: string = a.browser_download_url;\n          if (download == null) {\n            continue;\n          }\n\n          if (download.indexOf(\".zip\") === -1) {\n            continue;\n          }\n\n          if (\n            process.platform === \"win32\" &&\n            download.indexOf(this.executableName + \"-windows\") > -1\n          ) {\n            downloadUrl = download;\n            break;\n          } else if (\n            process.platform === \"darwin\" &&\n            download.indexOf(this.executableName + \"-macos\") > -1\n          ) {\n            downloadUrl = download;\n            break;\n          } else if (\n            process.platform === \"linux\" &&\n            download.indexOf(this.executableName + \"-linux\") > -1\n          ) {\n            downloadUrl = download;\n            break;\n          }\n        }\n      }\n\n      res.title = \"A new version is available: \" + tagName;\n      if (downloadUrl == null) {\n        downloadUrl = \"https://github.com/bitwarden/\" + this.repoName + \"/releases\";\n      } else {\n        res.raw = downloadUrl;\n      }\n      res.message = \"\";\n      if (responseJson.body != null && responseJson.body !== \"\") {\n        res.message = responseJson.body + \"\\n\\n\";\n      }\n\n      res.message += \"You can download this update at \" + downloadUrl;\n\n      if (this.showExtendedMessage) {\n        if (this.inPkg) {\n          res.message +=\n            \"\\n\\nIf you installed this CLI through a package manager \" +\n            \"you should probably update using its update command instead.\";\n        } else {\n          res.message +=\n            \"\\n\\nIf you installed this CLI through NPM \" +\n            \"you should update using `npm install -g @bitwarden/\" +\n            this.repoName +\n            \"`\";\n        }\n      }\n      return Response.success(res);\n    } else {\n      return Response.error(\"Error contacting update API: \" + response.status);\n    }\n  }\n}\n","import * as program from \"commander\";\n\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\ninterface IOption {\n  long?: string;\n  short?: string;\n  description: string;\n}\n\ninterface ICommand {\n  commands?: ICommand[];\n  options?: IOption[];\n  _name: string;\n  _description: string;\n}\n\nconst validShells = [\"zsh\"];\n\nexport class CompletionCommand {\n  async run(options: program.OptionValues) {\n    const shell: typeof validShells[number] = options.shell;\n\n    if (!shell) {\n      return Response.badRequest(\"`shell` option was not provided.\");\n    }\n\n    if (!validShells.includes(shell)) {\n      return Response.badRequest(\"Unsupported shell.\");\n    }\n\n    let content = \"\";\n\n    if (shell === \"zsh\") {\n      content = this.zshCompletion(\"bw\", program as any as ICommand).render();\n    }\n\n    const res = new MessageResponse(content, null);\n    return Response.success(res);\n  }\n\n  private zshCompletion(rootName: string, rootCommand: ICommand) {\n    return {\n      render: () => {\n        return [\n          `#compdef _${rootName} ${rootName}`,\n          \"\",\n          this.renderCommandBlock(rootName, rootCommand),\n        ].join(\"\\n\");\n      },\n    };\n  }\n\n  private renderCommandBlock(name: string, command: ICommand): string {\n    const { commands = [], options = [] } = command;\n    const hasOptions = options.length > 0;\n    const hasCommands = commands.length > 0;\n\n    const args = options\n      .map(({ long, short, description }) => {\n        const aliases = [short, long].filter(Boolean);\n        const opts = aliases.join(\",\");\n        const desc = `[${description.replace(`'`, `'\"'\"'`)}]`;\n        return aliases.length > 1\n          ? `'(${aliases.join(\" \")})'{${opts}}'${desc}'`\n          : `'${opts}${desc}'`;\n      })\n      .concat(\n        `'(-h --help)'{-h,--help}'[output usage information]'`,\n        hasCommands ? '\"1: :->cmnds\"' : null,\n        '\"*::arg:->args\"'\n      )\n      .filter(Boolean);\n\n    const commandBlockFunctionParts = [];\n\n    if (hasCommands) {\n      commandBlockFunctionParts.push(\"local -a commands\");\n    }\n\n    if (hasOptions) {\n      commandBlockFunctionParts.push(`_arguments -C \\\\\\n    ${args.join(` \\\\\\n    `)}`);\n    }\n\n    if (hasCommands) {\n      commandBlockFunctionParts.push(\n        `case $state in\n    cmnds)\n      commands=(\n        ${commands\n          .map(({ _name, _description }) => `\"${_name}:${_description}\"`)\n          .join(\"\\n        \")}\n      )\n      _describe \"command\" commands\n      ;;\n  esac\n\n  case \"$words[1]\" in\n    ${commands\n      .map(({ _name }) => [`${_name})`, `_${name}_${_name}`, \";;\"].join(\"\\n      \"))\n      .join(\"\\n    \")}\n  esac`\n      );\n    }\n\n    const commandBlocParts = [\n      `function _${name} {\\n  ${commandBlockFunctionParts.join(\"\\n\\n  \")}\\n}`,\n    ];\n\n    if (hasCommands) {\n      commandBlocParts.push(\n        commands.map((c) => this.renderCommandBlock(`${name}_${c._name}`, c)).join(\"\\n\\n\")\n      );\n    }\n\n    return commandBlocParts.join(\"\\n\\n\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class StringResponse implements BaseResponse {\n  object: string;\n  data: string;\n\n  constructor(data: string) {\n    this.object = \"string\";\n    this.data = data;\n  }\n}\n","import * as program from \"commander\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\nimport { StringResponse } from \"jslib-node/cli/models/response/stringResponse\";\n\nexport class ConfigCommand {\n  constructor(private environmentService: EnvironmentService) {}\n\n  async run(setting: string, value: string, options: program.OptionValues): Promise<Response> {\n    setting = setting.toLowerCase();\n    switch (setting) {\n      case \"server\":\n        return await this.getOrSetServer(value, options);\n      default:\n        return Response.badRequest(\"Unknown setting.\");\n    }\n  }\n\n  private async getOrSetServer(url: string, options: program.OptionValues): Promise<Response> {\n    if (\n      (url == null || url.trim() === \"\") &&\n      !options.webVault &&\n      !options.api &&\n      !options.identity &&\n      !options.icons &&\n      !options.notifications &&\n      !options.events\n    ) {\n      const stringRes = new StringResponse(\n        this.environmentService.hasBaseUrl()\n          ? this.environmentService.getUrls().base\n          : \"https://bitwarden.com\"\n      );\n      return Response.success(stringRes);\n    }\n\n    url = url === \"null\" || url === \"bitwarden.com\" || url === \"https://bitwarden.com\" ? null : url;\n    await this.environmentService.setUrls({\n      base: url,\n      webVault: options.webVault || null,\n      api: options.api || null,\n      identity: options.identity || null,\n      icons: options.icons || null,\n      notifications: options.notifications || null,\n      events: options.events || null,\n      keyConnector: options.keyConnector || null,\n    });\n    const res = new MessageResponse(\"Saved setting `config`.\", null);\n    return Response.success(res);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"inquirer\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jszip\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"readline\");","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as readline from \"readline\";\n\nexport class NodeUtils {\n  static mkdirpSync(targetDir: string, mode = \"700\", relative = false, relativeDir: string = null) {\n    const initialDir = path.isAbsolute(targetDir) ? path.sep : \"\";\n    const baseDir = relative ? (relativeDir != null ? relativeDir : __dirname) : \".\";\n    targetDir.split(path.sep).reduce((parentDir, childDir) => {\n      const dir = path.resolve(baseDir, parentDir, childDir);\n      if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir, mode);\n      }\n      return dir;\n    }, initialDir);\n  }\n  static readFirstLine(fileName: string) {\n    return new Promise<string>((resolve, reject) => {\n      const readStream = fs.createReadStream(fileName, { encoding: \"utf8\" });\n      const readInterface = readline.createInterface(readStream);\n      readInterface\n        .on(\"line\", (line) => {\n          readStream.close();\n          resolve(line);\n        })\n        .on(\"error\", (err) => reject(err));\n    });\n  }\n\n  // https://stackoverflow.com/a/31394257\n  static bufferToArrayBuffer(buf: Buffer): ArrayBuffer {\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport * as inquirer from \"inquirer\";\nimport * as JSZip from \"jszip\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { NodeUtils } from \"jslib-common/misc/nodeUtils\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nimport { FlagName, Flags } from \"./flags\";\n\nexport class CliUtils {\n  static writeLn(s: string, finalLine = false, error = false) {\n    const stream = error ? process.stderr : process.stdout;\n    if (finalLine && (process.platform === \"win32\" || !stream.isTTY)) {\n      stream.write(s);\n    } else {\n      stream.write(s + \"\\n\");\n    }\n  }\n\n  static readFile(input: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      let p: string = null;\n      if (input != null && input !== \"\") {\n        const osInput = path.join(input);\n        if (osInput.indexOf(path.sep) === -1) {\n          p = path.join(process.cwd(), osInput);\n        } else {\n          p = osInput;\n        }\n      } else {\n        reject(\"You must specify a file path.\");\n      }\n      fs.readFile(p, \"utf8\", (err, data) => {\n        if (err != null) {\n          reject(err.message);\n        }\n        resolve(data);\n      });\n    });\n  }\n\n  static extract1PuxContent(input: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      let p: string = null;\n      if (input != null && input !== \"\") {\n        const osInput = path.join(input);\n        if (osInput.indexOf(path.sep) === -1) {\n          p = path.join(process.cwd(), osInput);\n        } else {\n          p = osInput;\n        }\n      } else {\n        reject(\"You must specify a file path.\");\n      }\n      fs.readFile(p, function (err, data) {\n        if (err) {\n          reject(err);\n        }\n        JSZip.loadAsync(data).then(\n          (zip) => {\n            resolve(zip.file(\"export.data\").async(\"string\"));\n          },\n          (reason) => {\n            reject(reason);\n          }\n        );\n      });\n    });\n  }\n  /**\n   * Save the given data to a file and determine the target file if necessary.\n   * If output is non-empty, it is used as target filename. Otherwise the target filename is\n   * built from the current working directory and the given defaultFileName.\n   *\n   * @param data to be written to the file.\n   * @param output file to write to or empty to choose automatically.\n   * @param defaultFileName to use when no explicit output filename is given.\n   * @return the chosen output file.\n   */\n  static saveFile(data: string | Buffer, output: string, defaultFileName: string) {\n    let p: string = null;\n    let mkdir = false;\n    if (output != null && output !== \"\") {\n      const osOutput = path.join(output);\n      if (osOutput.indexOf(path.sep) === -1) {\n        p = path.join(process.cwd(), osOutput);\n      } else {\n        mkdir = true;\n        if (osOutput.endsWith(path.sep)) {\n          p = path.join(osOutput, defaultFileName);\n        } else {\n          p = osOutput;\n        }\n      }\n    } else {\n      p = path.join(process.cwd(), defaultFileName);\n    }\n\n    p = path.resolve(p);\n    if (mkdir) {\n      const dir = p.substring(0, p.lastIndexOf(path.sep));\n      if (!fs.existsSync(dir)) {\n        NodeUtils.mkdirpSync(dir, \"700\");\n      }\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      fs.writeFile(p, data, { encoding: \"utf8\", mode: 0o600 }, (err) => {\n        if (err != null) {\n          reject(\"Cannot save file to \" + p);\n        }\n        resolve(p);\n      });\n    });\n  }\n\n  /**\n   * Process the given data and write it to a file if possible. If the user requested RAW output and\n   * no output name is given, the file is directly written to stdout. The resulting Response contains\n   * an otherwise empty message then to prevent writing other information to stdout.\n   *\n   * If an output is given or no RAW output is requested, the rules from [saveFile] apply.\n   *\n   * @param data to be written to the file or stdout.\n   * @param output file to write to or empty to choose automatically.\n   * @param defaultFileName to use when no explicit output filename is given.\n   * @return an empty [Response] if written to stdout or a [Response] with the chosen output file otherwise.\n   */\n  static async saveResultToFile(data: string | Buffer, output: string, defaultFileName: string) {\n    if ((output == null || output === \"\") && process.env.BW_RAW === \"true\") {\n      // No output is given and the user expects raw output. Since the command result is about content,\n      // we directly return the command result to stdout (and suppress further messages).\n      process.stdout.write(data);\n      return Response.success();\n    }\n\n    const filePath = await this.saveFile(data, output, defaultFileName);\n    const res = new MessageResponse(\"Saved \" + filePath, null);\n    res.raw = filePath;\n    return Response.success(res);\n  }\n\n  static readStdin(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      let input = \"\";\n\n      if (process.stdin.isTTY) {\n        resolve(input);\n        return;\n      }\n\n      process.stdin.setEncoding(\"utf8\");\n      process.stdin.on(\"readable\", () => {\n        // eslint-disable-next-line\n        while (true) {\n          const chunk = process.stdin.read();\n          if (chunk == null) {\n            break;\n          }\n          input += chunk;\n        }\n      });\n\n      process.stdin.on(\"end\", () => {\n        resolve(input);\n      });\n    });\n  }\n\n  static searchFolders(folders: FolderView[], search: string) {\n    search = search.toLowerCase();\n    return folders.filter((f) => {\n      if (f.name != null && f.name.toLowerCase().indexOf(search) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  static searchCollections(collections: CollectionView[], search: string) {\n    search = search.toLowerCase();\n    return collections.filter((c) => {\n      if (c.name != null && c.name.toLowerCase().indexOf(search) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  static searchOrganizations(organizations: Organization[], search: string) {\n    search = search.toLowerCase();\n    return organizations.filter((o) => {\n      if (o.name != null && o.name.toLowerCase().indexOf(search) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Gets a password from all available sources. In order of priority these are:\n   *   * passwordfile\n   *   * passwordenv\n   *   * user interaction\n   *\n   * Returns password string if successful, Response if not.\n   */\n  static async getPassword(\n    password: string,\n    options: { passwordFile?: string; passwordEnv?: string },\n    logService?: LogService\n  ): Promise<string | Response> {\n    if (Utils.isNullOrEmpty(password)) {\n      if (options?.passwordFile) {\n        password = await NodeUtils.readFirstLine(options.passwordFile);\n      } else if (options?.passwordEnv) {\n        if (process.env[options.passwordEnv]) {\n          password = process.env[options.passwordEnv];\n        } else if (logService) {\n          logService.warning(`Warning: Provided passwordenv ${options.passwordEnv} is not set`);\n        }\n      }\n    }\n\n    if (Utils.isNullOrEmpty(password)) {\n      if (process.env.BW_NOINTERACTION !== \"true\") {\n        const answer: inquirer.Answers = await inquirer.createPromptModule({\n          output: process.stderr,\n        })({\n          type: \"password\",\n          name: \"password\",\n          message: \"Master password:\",\n        });\n\n        password = answer.password;\n      } else {\n        return Response.badRequest(\n          \"Master password is required. Try again in interactive mode or provide a password file or environment variable.\"\n        );\n      }\n    }\n    return password;\n  }\n\n  static convertBooleanOption(optionValue: any) {\n    return optionValue || optionValue === \"\" ? true : false;\n  }\n\n  static flagEnabled(flag: FlagName) {\n    return this.flags[flag] == null || this.flags[flag];\n  }\n\n  private static get flags(): Flags {\n    const envFlags = process.env.FLAGS;\n\n    if (typeof envFlags === \"string\") {\n      return JSON.parse(envFlags) as Flags;\n    } else {\n      return envFlags as Flags;\n    }\n  }\n}\n","import { Response } from \"jslib-node/cli/models/response\";\nimport { StringResponse } from \"jslib-node/cli/models/response/stringResponse\";\n\nimport { CliUtils } from \"../utils\";\n\nexport class EncodeCommand {\n  async run(): Promise<Response> {\n    if (process.stdin.isTTY) {\n      return Response.badRequest(\"No stdin was piped in.\");\n    }\n    const input = await CliUtils.readStdin();\n    const b64 = Buffer.from(input, \"utf8\").toString(\"base64\");\n    const res = new StringResponse(b64);\n    return Response.success(res);\n  }\n}\n","import { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { StringResponse } from \"jslib-node/cli/models/response/stringResponse\";\n\nimport { CliUtils } from \"../utils\";\n\nexport class GenerateCommand {\n  constructor(\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService\n  ) {}\n\n  async run(cmdOptions: Record<string, any>): Promise<Response> {\n    const normalizedOptions = new Options(cmdOptions);\n    const options = {\n      uppercase: normalizedOptions.uppercase,\n      lowercase: normalizedOptions.lowercase,\n      number: normalizedOptions.number,\n      special: normalizedOptions.special,\n      length: normalizedOptions.length,\n      type: normalizedOptions.type,\n      wordSeparator: normalizedOptions.separator,\n      numWords: normalizedOptions.words,\n      capitalize: normalizedOptions.capitalize,\n      includeNumber: normalizedOptions.includeNumber,\n    };\n\n    const enforcedOptions = (await this.stateService.getIsAuthenticated())\n      ? (await this.passwordGenerationService.enforcePasswordGeneratorPoliciesOnOptions(options))[0]\n      : options;\n\n    const password = await this.passwordGenerationService.generatePassword(enforcedOptions);\n    const res = new StringResponse(password);\n    return Response.success(res);\n  }\n}\n\nclass Options {\n  uppercase: boolean;\n  lowercase: boolean;\n  number: boolean;\n  special: boolean;\n  length: number;\n  type: \"passphrase\" | \"password\";\n  separator: string;\n  words: number;\n  capitalize: boolean;\n  includeNumber: boolean;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.uppercase = CliUtils.convertBooleanOption(passedOptions?.uppercase);\n    this.lowercase = CliUtils.convertBooleanOption(passedOptions?.lowercase);\n    this.number = CliUtils.convertBooleanOption(passedOptions?.number);\n    this.special = CliUtils.convertBooleanOption(passedOptions?.special);\n    this.capitalize = CliUtils.convertBooleanOption(passedOptions?.capitalize);\n    this.includeNumber = CliUtils.convertBooleanOption(passedOptions?.includeNumber);\n    this.length = passedOptions?.length != null ? parseInt(passedOptions?.length, null) : 14;\n    this.type = passedOptions?.passphrase ? \"passphrase\" : \"password\";\n    this.separator = passedOptions?.separator == null ? \"-\" : passedOptions.separator + \"\";\n    this.words = passedOptions?.words != null ? parseInt(passedOptions.words, null) : 3;\n\n    if (!this.uppercase && !this.lowercase && !this.special && !this.number) {\n      this.lowercase = true;\n      this.uppercase = true;\n      this.number = true;\n    }\n    if (this.length < 5) {\n      this.length = 5;\n    }\n    if (this.words < 3) {\n      this.words = 3;\n    }\n    if (this.separator === \"space\") {\n      this.separator = \" \";\n    } else if (this.separator != null && this.separator.length > 1) {\n      this.separator = this.separator[0];\n    }\n  }\n}\n","import { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nexport class LockCommand {\n  constructor(private vaultTimeoutService: VaultTimeoutService) {}\n\n  async run() {\n    await this.vaultTimeoutService.lock();\n    process.env.BW_SESSION = null;\n    const res = new MessageResponse(\"Your vault is locked.\", null);\n    return Response.success(res);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import * as http from \"http\";\n\nimport * as program from \"commander\";\nimport * as inquirer from \"inquirer\";\nimport Separator from \"inquirer/lib/objects/separator\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { NodeUtils } from \"jslib-common/misc/nodeUtils\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"jslib-common/models/domain/logInCredentials\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { Response } from \"../models/response\";\nimport { MessageResponse } from \"../models/response/messageResponse\";\n\nexport class LoginCommand {\n  protected validatedParams: () => Promise<any>;\n  protected success: () => Promise<MessageResponse>;\n  protected logout: () => Promise<void>;\n  protected canInteract: boolean;\n  protected clientId: string;\n  protected clientSecret: string;\n  protected email: string;\n\n  private ssoRedirectUri: string = null;\n\n  constructor(\n    protected authService: AuthService,\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected cryptoService: CryptoService,\n    protected policyService: PolicyService,\n    protected twoFactorService: TwoFactorService,\n    clientId: string\n  ) {\n    this.clientId = clientId;\n  }\n\n  async run(email: string, password: string, options: program.OptionValues) {\n    this.canInteract = process.env.BW_NOINTERACTION !== \"true\";\n\n    let ssoCodeVerifier: string = null;\n    let ssoCode: string = null;\n    let orgIdentifier: string = null;\n\n    let clientId: string = null;\n    let clientSecret: string = null;\n\n    let selectedProvider: any = null;\n\n    if (options.apikey != null) {\n      const apiIdentifiers = await this.apiIdentifiers();\n      clientId = apiIdentifiers.clientId;\n      clientSecret = apiIdentifiers.clientSecret;\n    } else if (options.sso != null && this.canInteract) {\n      const passwordOptions: any = {\n        type: \"password\",\n        length: 64,\n        uppercase: true,\n        lowercase: true,\n        numbers: true,\n        special: false,\n      };\n      const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n      const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      try {\n        const ssoParams = await this.openSsoPrompt(codeChallenge, state);\n        ssoCode = ssoParams.ssoCode;\n        orgIdentifier = ssoParams.orgIdentifier;\n      } catch {\n        return Response.badRequest(\"Something went wrong. Try again.\");\n      }\n    } else {\n      if ((email == null || email === \"\") && this.canInteract) {\n        const answer: inquirer.Answers = await inquirer.createPromptModule({\n          output: process.stderr,\n        })({\n          type: \"input\",\n          name: \"email\",\n          message: \"Email address:\",\n        });\n        email = answer.email;\n      }\n      if (email == null || email.trim() === \"\") {\n        return Response.badRequest(\"Email address is required.\");\n      }\n      if (email.indexOf(\"@\") === -1) {\n        return Response.badRequest(\"Email address is invalid.\");\n      }\n      this.email = email;\n\n      if (password == null || password === \"\") {\n        if (options.passwordfile) {\n          password = await NodeUtils.readFirstLine(options.passwordfile);\n        } else if (options.passwordenv && process.env[options.passwordenv]) {\n          password = process.env[options.passwordenv];\n        } else if (this.canInteract) {\n          const answer: inquirer.Answers = await inquirer.createPromptModule({\n            output: process.stderr,\n          })({\n            type: \"password\",\n            name: \"password\",\n            message: \"Master password:\",\n          });\n          password = answer.password;\n        }\n      }\n\n      if (password == null || password === \"\") {\n        return Response.badRequest(\"Master password is required.\");\n      }\n    }\n\n    let twoFactorToken: string = options.code;\n    let twoFactorMethod: TwoFactorProviderType = null;\n    try {\n      if (options.method != null) {\n        twoFactorMethod = parseInt(options.method, null);\n      }\n    } catch (e) {\n      return Response.error(\"Invalid two-step login method.\");\n    }\n\n    const twoFactor =\n      twoFactorToken == null\n        ? null\n        : new TokenRequestTwoFactor(twoFactorMethod, twoFactorToken, false);\n\n    try {\n      if (this.validatedParams != null) {\n        await this.validatedParams();\n      }\n\n      let response: AuthResult = null;\n      if (clientId != null && clientSecret != null) {\n        response = await this.authService.logIn(new ApiLogInCredentials(clientId, clientSecret));\n      } else if (ssoCode != null && ssoCodeVerifier != null) {\n        response = await this.authService.logIn(\n          new SsoLogInCredentials(\n            ssoCode,\n            ssoCodeVerifier,\n            this.ssoRedirectUri,\n            orgIdentifier,\n            twoFactor\n          )\n        );\n      } else {\n        response = await this.authService.logIn(\n          new PasswordLogInCredentials(email, password, null, twoFactor)\n        );\n      }\n      if (response.captchaSiteKey) {\n        const credentials = new PasswordLogInCredentials(email, password);\n        const handledResponse = await this.handleCaptchaRequired(twoFactor, credentials);\n\n        // Error Response\n        if (handledResponse instanceof Response) {\n          return handledResponse;\n        } else {\n          response = handledResponse;\n        }\n      }\n      if (response.requiresTwoFactor) {\n        const twoFactorProviders = this.twoFactorService.getSupportedProviders(null);\n        if (twoFactorProviders.length === 0) {\n          return Response.badRequest(\"No providers available for this client.\");\n        }\n\n        if (twoFactorMethod != null) {\n          try {\n            selectedProvider = twoFactorProviders.filter((p) => p.type === twoFactorMethod)[0];\n          } catch (e) {\n            return Response.error(\"Invalid two-step login method.\");\n          }\n        }\n\n        if (selectedProvider == null) {\n          if (twoFactorProviders.length === 1) {\n            selectedProvider = twoFactorProviders[0];\n          } else if (this.canInteract) {\n            const twoFactorOptions: (string | Separator)[] = twoFactorProviders.map((p) => p.name);\n            twoFactorOptions.push(new inquirer.Separator());\n            twoFactorOptions.push(\"Cancel\");\n            const answer: inquirer.Answers = await inquirer.createPromptModule({\n              output: process.stderr,\n            })({\n              type: \"list\",\n              name: \"method\",\n              message: \"Two-step login method:\",\n              choices: twoFactorOptions,\n            });\n            const i = twoFactorOptions.indexOf(answer.method);\n            if (i === twoFactorOptions.length - 1) {\n              return Response.error(\"Login failed.\");\n            }\n            selectedProvider = twoFactorProviders[i];\n          }\n          if (selectedProvider == null) {\n            return Response.error(\"Login failed. No provider selected.\");\n          }\n        }\n\n        if (\n          twoFactorToken == null &&\n          response.twoFactorProviders.size > 1 &&\n          selectedProvider.type === TwoFactorProviderType.Email\n        ) {\n          const emailReq = new TwoFactorEmailRequest();\n          emailReq.email = this.authService.email;\n          emailReq.masterPasswordHash = this.authService.masterPasswordHash;\n          await this.apiService.postTwoFactorEmail(emailReq);\n        }\n\n        if (twoFactorToken == null) {\n          if (this.canInteract) {\n            const answer: inquirer.Answers = await inquirer.createPromptModule({\n              output: process.stderr,\n            })({\n              type: \"input\",\n              name: \"token\",\n              message: \"Two-step login code:\",\n            });\n            twoFactorToken = answer.token;\n          }\n          if (twoFactorToken == null || twoFactorToken === \"\") {\n            return Response.badRequest(\"Code is required.\");\n          }\n        }\n\n        response = await this.authService.logInTwoFactor(\n          new TokenRequestTwoFactor(selectedProvider.type, twoFactorToken),\n          null\n        );\n      }\n\n      if (response.captchaSiteKey) {\n        const twoFactorRequest = new TokenRequestTwoFactor(selectedProvider.type, twoFactorToken);\n        const handledResponse = await this.handleCaptchaRequired(twoFactorRequest);\n\n        // Error Response\n        if (handledResponse instanceof Response) {\n          return handledResponse;\n        } else {\n          response = handledResponse;\n        }\n      }\n\n      if (response.requiresTwoFactor) {\n        return Response.error(\"Login failed.\");\n      }\n\n      if (response.resetMasterPassword) {\n        return Response.error(\n          \"In order to log in with SSO from the CLI, you must first log in\" +\n            \" through the web vault to set your master password.\"\n        );\n      }\n\n      // Handle Updating Temp Password if NOT using an API Key for authentication\n      if (response.forcePasswordReset && clientId == null && clientSecret == null) {\n        return await this.updateTempPassword();\n      }\n\n      return await this.handleSuccessResponse();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async handleSuccessResponse(): Promise<Response> {\n    if (this.success != null) {\n      const res = await this.success();\n      return Response.success(res);\n    } else {\n      const res = new MessageResponse(\"You are logged in!\", null);\n      return Response.success(res);\n    }\n  }\n\n  private async updateTempPassword(error?: string): Promise<Response> {\n    // If no interaction available, alert user to use web vault\n    if (!this.canInteract) {\n      await this.logout();\n      this.authService.logOut(() => {\n        /* Do nothing */\n      });\n      return Response.error(\n        new MessageResponse(\n          \"An organization administrator recently changed your master password. In order to access the vault, you must update your master password now via the web vault. You have been logged out.\",\n          null\n        )\n      );\n    }\n\n    if (this.email == null || this.email === \"undefined\") {\n      this.email = await this.stateService.getEmail();\n    }\n\n    // Get New Master Password\n    const baseMessage =\n      \"An organization administrator recently changed your master password. In order to access the vault, you must update your master password now.\\n\" +\n      \"Master password: \";\n    const firstMessage = error != null ? error + baseMessage : baseMessage;\n    const mp: inquirer.Answers = await inquirer.createPromptModule({ output: process.stderr })({\n      type: \"password\",\n      name: \"password\",\n      message: firstMessage,\n    });\n    const masterPassword = mp.password;\n\n    // Master Password Validation\n    if (masterPassword == null || masterPassword === \"\") {\n      return this.updateTempPassword(\"Master password is required.\\n\");\n    }\n\n    if (masterPassword.length < 8) {\n      return this.updateTempPassword(\"Master password must be at least 8 characters long.\\n\");\n    }\n\n    // Strength & Policy Validation\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    // Get New Master Password Re-type\n    const reTypeMessage = \"Re-type New Master password (Strength: \" + strengthResult.score + \")\";\n    const retype: inquirer.Answers = await inquirer.createPromptModule({ output: process.stderr })({\n      type: \"password\",\n      name: \"password\",\n      message: reTypeMessage,\n    });\n    const masterPasswordRetype = retype.password;\n\n    // Re-type Validation\n    if (masterPassword !== masterPasswordRetype) {\n      return this.updateTempPassword(\"Master password confirmation does not match.\\n\");\n    }\n\n    // Get Hint (optional)\n    const hint: inquirer.Answers = await inquirer.createPromptModule({ output: process.stderr })({\n      type: \"input\",\n      name: \"input\",\n      message: \"Master Password Hint (optional):\",\n    });\n    const masterPasswordHint = hint.input;\n\n    // Retrieve details for key generation\n    const enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (\n      enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        masterPassword,\n        enforcedPolicyOptions\n      )\n    ) {\n      return this.updateTempPassword(\n        \"Your new master password does not meet the policy requirements.\\n\"\n      );\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        masterPassword,\n        this.email.trim().toLowerCase(),\n        kdf,\n        kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = newEncKey[1].encryptedString;\n      request.newMasterPasswordHash = newPasswordHash;\n      request.masterPasswordHint = masterPasswordHint;\n\n      // Update user's password\n      await this.apiService.putUpdateTempPassword(request);\n      return this.handleSuccessResponse();\n    } catch (e) {\n      await this.logout();\n      this.authService.logOut(() => {\n        /* Do nothing */\n      });\n      return Response.error(e);\n    }\n  }\n\n  private async handleCaptchaRequired(\n    twoFactorRequest: TokenRequestTwoFactor,\n    credentials: PasswordLogInCredentials = null\n  ): Promise<AuthResult | Response> {\n    const badCaptcha = Response.badRequest(\n      \"Your authentication request has been flagged and will require user interaction to proceed.\\n\" +\n        \"Please use your API key to validate this request and ensure BW_CLIENTSECRET is correct, if set.\\n\" +\n        \"(https://bitwarden.com/help/cli-auth-challenges)\"\n    );\n\n    try {\n      const captchaClientSecret = await this.apiClientSecret(true);\n      if (Utils.isNullOrWhitespace(captchaClientSecret)) {\n        return badCaptcha;\n      }\n\n      let authResultResponse: AuthResult = null;\n      if (credentials != null) {\n        credentials.captchaToken = captchaClientSecret;\n        credentials.twoFactor = twoFactorRequest;\n        authResultResponse = await this.authService.logIn(credentials);\n      } else {\n        authResultResponse = await this.authService.logInTwoFactor(\n          twoFactorRequest,\n          captchaClientSecret\n        );\n      }\n\n      return authResultResponse;\n    } catch (e) {\n      if (\n        e instanceof ErrorResponse ||\n        (e.constructor.name === ErrorResponse.name &&\n          (e as ErrorResponse).message.includes(\"Captcha is invalid\"))\n      ) {\n        return badCaptcha;\n      } else {\n        return Response.error(e);\n      }\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n\n  private async apiClientId(): Promise<string> {\n    let clientId: string = null;\n\n    const storedClientId: string = process.env.BW_CLIENTID;\n    if (storedClientId == null) {\n      if (this.canInteract) {\n        const answer: inquirer.Answers = await inquirer.createPromptModule({\n          output: process.stderr,\n        })({\n          type: \"input\",\n          name: \"clientId\",\n          message: \"client_id:\",\n        });\n        clientId = answer.clientId;\n      } else {\n        clientId = null;\n      }\n    } else {\n      clientId = storedClientId;\n    }\n\n    return clientId;\n  }\n\n  private async apiClientSecret(isAdditionalAuthentication = false): Promise<string> {\n    const additionalAuthenticationMessage = \"Additional authentication required.\\nAPI key \";\n    let clientSecret: string = null;\n\n    const storedClientSecret: string = this.clientSecret || process.env.BW_CLIENTSECRET;\n    if (this.canInteract && storedClientSecret == null) {\n      const answer: inquirer.Answers = await inquirer.createPromptModule({\n        output: process.stderr,\n      })({\n        type: \"input\",\n        name: \"clientSecret\",\n        message:\n          (isAdditionalAuthentication ? additionalAuthenticationMessage : \"\") + \"client_secret:\",\n      });\n      clientSecret = answer.clientSecret;\n    } else {\n      clientSecret = storedClientSecret;\n    }\n\n    return clientSecret;\n  }\n\n  private async apiIdentifiers(): Promise<{ clientId: string; clientSecret: string }> {\n    return {\n      clientId: await this.apiClientId(),\n      clientSecret: await this.apiClientSecret(),\n    };\n  }\n\n  private async openSsoPrompt(\n    codeChallenge: string,\n    state: string\n  ): Promise<{ ssoCode: string; orgIdentifier: string }> {\n    return new Promise((resolve, reject) => {\n      const callbackServer = http.createServer((req, res) => {\n        const urlString = \"http://localhost\" + req.url;\n        const url = new URL(urlString);\n        const code = url.searchParams.get(\"code\");\n        const receivedState = url.searchParams.get(\"state\");\n        const orgIdentifier = this.getOrgIdentifierFromState(receivedState);\n        res.setHeader(\"Content-Type\", \"text/html\");\n        if (code != null && receivedState != null && this.checkState(receivedState, state)) {\n          res.writeHead(200);\n          res.end(\n            \"<html><head><title>Success | Bitwarden CLI</title></head><body>\" +\n              \"<h1>Successfully authenticated with the Bitwarden CLI</h1>\" +\n              \"<p>You may now close this tab and return to the terminal.</p>\" +\n              \"</body></html>\"\n          );\n          callbackServer.close(() =>\n            resolve({\n              ssoCode: code,\n              orgIdentifier: orgIdentifier,\n            })\n          );\n        } else {\n          res.writeHead(400);\n          res.end(\n            \"<html><head><title>Failed | Bitwarden CLI</title></head><body>\" +\n              \"<h1>Something went wrong logging into the Bitwarden CLI</h1>\" +\n              \"<p>You may now close this tab and return to the terminal.</p>\" +\n              \"</body></html>\"\n          );\n          callbackServer.close(() => reject());\n        }\n      });\n      let foundPort = false;\n      const webUrl = this.environmentService.getWebVaultUrl();\n      for (let port = 8065; port <= 8070; port++) {\n        try {\n          this.ssoRedirectUri = \"http://localhost:\" + port;\n          callbackServer.listen(port, () => {\n            this.platformUtilsService.launchUri(\n              webUrl +\n                \"/#/sso?clientId=\" +\n                this.clientId +\n                \"&redirectUri=\" +\n                encodeURIComponent(this.ssoRedirectUri) +\n                \"&state=\" +\n                state +\n                \"&codeChallenge=\" +\n                codeChallenge\n            );\n          });\n          foundPort = true;\n          break;\n        } catch {\n          // Ignore error since we run the same command up to 5 times.\n        }\n      }\n      if (!foundPort) {\n        reject();\n      }\n    });\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import * as program from \"commander\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { LoginCommand as BaseLoginCommand } from \"jslib-node/cli/commands/login.command\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nexport class LoginCommand extends BaseLoginCommand {\n  private options: program.OptionValues;\n\n  constructor(\n    authService: AuthService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    i18nService: I18nService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    cryptoService: CryptoService,\n    policyService: PolicyService,\n    twoFactorService: TwoFactorService,\n    private syncService: SyncService,\n    private keyConnectorService: KeyConnectorService,\n    private logoutCallback: () => Promise<void>\n  ) {\n    super(\n      authService,\n      apiService,\n      i18nService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      platformUtilsService,\n      stateService,\n      cryptoService,\n      policyService,\n      twoFactorService,\n      \"cli\"\n    );\n    this.logout = this.logoutCallback;\n    this.validatedParams = async () => {\n      const key = await cryptoFunctionService.randomBytes(64);\n      process.env.BW_SESSION = Utils.fromBufferToB64(key);\n    };\n    this.success = async () => {\n      await this.syncService.fullSync(true);\n\n      const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n\n      if (\n        (this.options.sso != null || this.options.apikey != null) &&\n        this.canInteract &&\n        !usesKeyConnector\n      ) {\n        const res = new MessageResponse(\n          \"You are logged in!\",\n          \"\\n\" + \"To unlock your vault, use the `unlock` command. ex:\\n\" + \"$ bw unlock\"\n        );\n        return res;\n      } else {\n        const res = new MessageResponse(\n          \"You are logged in!\",\n          \"\\n\" +\n            \"To unlock your vault, set your session key to the `BW_SESSION` environment variable. ex:\\n\" +\n            '$ export BW_SESSION=\"' +\n            process.env.BW_SESSION +\n            '\"\\n' +\n            '> $env:BW_SESSION=\"' +\n            process.env.BW_SESSION +\n            '\"\\n\\n' +\n            \"You can also pass the session key to any command with the `--session` option. ex:\\n\" +\n            \"$ bw list items --session \" +\n            process.env.BW_SESSION\n        );\n        res.raw = process.env.BW_SESSION;\n        return res;\n      }\n    };\n  }\n\n  run(email: string, password: string, options: program.OptionValues) {\n    this.options = options;\n    this.email = email;\n    return super.run(email, password, options);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@koa/multer\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@koa/router\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa-bodyparser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa-json\");","import { BaseResponse } from \"./baseResponse\";\n\nexport class FileResponse implements BaseResponse {\n  object: string;\n  data: Buffer;\n  fileName: string;\n\n  constructor(data: Buffer, fileName: string) {\n    this.object = \"file\";\n    this.data = data;\n    this.fileName = fileName;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","import { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { OrganizationUserConfirmRequest } from \"jslib-common/models/request/organizationUserConfirmRequest\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nexport class ConfirmCommand {\n  constructor(private apiService: ApiService, private cryptoService: CryptoService) {}\n\n  async run(object: string, id: string, cmdOptions: Record<string, any>): Promise<Response> {\n    if (id != null) {\n      id = id.toLowerCase();\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    switch (object.toLowerCase()) {\n      case \"org-member\":\n        return await this.confirmOrganizationMember(id, normalizedOptions);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async confirmOrganizationMember(id: string, options: Options) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"--organizationid <organizationid> required.\");\n    }\n    if (!Utils.isGuid(id)) {\n      return Response.badRequest(\"`\" + id + \"` is not a GUID.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    try {\n      const orgKey = await this.cryptoService.getOrgKey(options.organizationId);\n      if (orgKey == null) {\n        throw new Error(\"No encryption key for this organization.\");\n      }\n      const orgUser = await this.apiService.getOrganizationUser(options.organizationId, id);\n      if (orgUser == null) {\n        throw new Error(\"Member id does not exist for this organization.\");\n      }\n      const publicKeyResponse = await this.apiService.getUserPublicKey(orgUser.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n      const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n      const req = new OrganizationUserConfirmRequest();\n      req.key = key.encryptedString;\n      await this.apiService.postOrganizationUserConfirm(options.organizationId, id, req);\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n\nclass Options {\n  organizationId: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.organizationId = passedOptions?.organizationid || passedOptions?.organizationId;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","import { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\nexport class AttachmentResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n  url: string;\n\n  constructor(o: AttachmentView) {\n    this.id = o.id;\n    this.fileName = o.fileName;\n    this.size = o.size;\n    this.sizeName = o.sizeName;\n    this.url = o.url;\n  }\n}\n","import { Login } from \"jslib-common/models/export/login\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nexport class LoginResponse extends Login {\n  passwordRevisionDate: Date;\n\n  constructor(o: LoginView) {\n    super(o);\n    this.passwordRevisionDate = o.passwordRevisionDate != null ? o.passwordRevisionDate : null;\n  }\n}\n","import { PasswordHistoryView } from \"jslib-common/models/view/passwordHistoryView\";\n\nexport class PasswordHistoryResponse {\n  lastUsedDate: Date;\n  password: string;\n\n  constructor(o: PasswordHistoryView) {\n    this.lastUsedDate = o.lastUsedDate;\n    this.password = o.password;\n  }\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherWithIds } from \"jslib-common/models/export/cipherWithIds\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { LoginResponse } from \"./loginResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends CipherWithIds implements BaseResponse {\n  object: string;\n  attachments: AttachmentResponse[];\n  revisionDate: Date;\n  deletedDate: Date;\n  passwordHistory: PasswordHistoryResponse[];\n\n  constructor(o: CipherView) {\n    super();\n    this.object = \"item\";\n    this.build(o);\n    if (o.attachments != null) {\n      this.attachments = o.attachments.map((a) => new AttachmentResponse(a));\n    }\n    this.revisionDate = o.revisionDate;\n    this.deletedDate = o.deletedDate;\n    if (o.passwordHistory != null) {\n      this.passwordHistory = o.passwordHistory.map((h) => new PasswordHistoryResponse(h));\n    }\n    if (o.type === CipherType.Login && o.login != null) {\n      this.login = new LoginResponse(o.login);\n    }\n  }\n}\n","import { FolderWithId } from \"jslib-common/models/export/folderWithId\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nexport class FolderResponse extends FolderWithId implements BaseResponse {\n  object: string;\n\n  constructor(o: FolderView) {\n    super();\n    this.object = \"folder\";\n    this.build(o);\n  }\n}\n","import { CollectionWithId } from \"jslib-common/models/export/collectionWithId\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nexport class CollectionResponse extends CollectionWithId implements BaseResponse {\n  object: string;\n\n  constructor(o: CollectionView) {\n    super();\n    this.object = \"collection\";\n    this.build(o);\n  }\n}\n","import { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { SelectionReadOnly } from \"../selectionReadOnly\";\n\nimport { CollectionResponse } from \"./collectionResponse\";\n\nexport class OrganizationCollectionResponse extends CollectionResponse {\n  groups: SelectionReadOnly[];\n\n  constructor(o: CollectionView, groups: SelectionReadOnly[]) {\n    super(o);\n    this.object = \"org-collection\";\n    this.groups = groups;\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/export/cipher\";\nimport { Collection } from \"jslib-common/models/export/collection\";\nimport { Folder } from \"jslib-common/models/export/folder\";\nimport { CollectionRequest } from \"jslib-common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { OrganizationCollectionRequest } from \"../models/request/organizationCollectionRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { OrganizationCollectionResponse } from \"../models/response/organizationCollectionResponse\";\nimport { CliUtils } from \"../utils\";\n\nexport class CreateCommand {\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService\n  ) {}\n\n  async run(\n    object: string,\n    requestJson: string,\n    cmdOptions: Record<string, any>,\n    additionalData: any = null\n  ): Promise<Response> {\n    let req: any = null;\n    if (object !== \"attachment\") {\n      if (process.env.BW_SERVE !== \"true\" && (requestJson == null || requestJson === \"\")) {\n        requestJson = await CliUtils.readStdin();\n      }\n\n      if (requestJson == null || requestJson === \"\") {\n        return Response.badRequest(\"`requestJson` was not provided.\");\n      }\n\n      if (typeof requestJson !== \"string\") {\n        req = requestJson;\n      } else {\n        try {\n          const reqJson = Buffer.from(requestJson, \"base64\").toString();\n          req = JSON.parse(reqJson);\n        } catch (e) {\n          return Response.badRequest(\"Error parsing the encoded request data.\");\n        }\n      }\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    switch (object.toLowerCase()) {\n      case \"item\":\n        return await this.createCipher(req);\n      case \"attachment\":\n        return await this.createAttachment(normalizedOptions, additionalData);\n      case \"folder\":\n        return await this.createFolder(req);\n      case \"org-collection\":\n        return await this.createOrganizationCollection(req, normalizedOptions);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async createCipher(req: Cipher) {\n    const cipher = await this.cipherService.encrypt(Cipher.toView(req));\n    try {\n      await this.cipherService.saveWithServer(cipher);\n      const newCipher = await this.cipherService.get(cipher.id);\n      const decCipher = await newCipher.decrypt();\n      const res = new CipherResponse(decCipher);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async createAttachment(options: Options, additionalData: any) {\n    if (options.itemId == null || options.itemId === \"\") {\n      return Response.badRequest(\"`itemid` option is required.\");\n    }\n    let fileBuf: Buffer = null;\n    let fileName: string = null;\n    if (process.env.BW_SERVE === \"true\") {\n      fileBuf = additionalData.fileBuffer;\n      fileName = additionalData.fileName;\n    } else {\n      if (options.file == null || options.file === \"\") {\n        return Response.badRequest(\"`file` option is required.\");\n      }\n      const filePath = path.resolve(options.file);\n      if (!fs.existsSync(options.file)) {\n        return Response.badRequest(\"Cannot find file at \" + filePath);\n      }\n      fileBuf = fs.readFileSync(filePath);\n      fileName = path.basename(filePath);\n    }\n\n    if (fileBuf == null) {\n      return Response.badRequest(\"File not provided.\");\n    }\n    if (fileName == null || fileName.trim() === \"\") {\n      return Response.badRequest(\"File name not provided.\");\n    }\n\n    const itemId = options.itemId.toLowerCase();\n    const cipher = await this.cipherService.get(itemId);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n\n    if (cipher.organizationId == null && !(await this.stateService.getCanAccessPremium())) {\n      return Response.error(\"Premium status is required to use this feature.\");\n    }\n\n    const encKey = await this.cryptoService.getEncKey();\n    if (encKey == null) {\n      return Response.error(\n        \"You must update your encryption key before you can use this feature. \" +\n          \"See https://help.bitwarden.com/article/update-encryption-key/\"\n      );\n    }\n\n    try {\n      await this.cipherService.saveAttachmentRawWithServer(\n        cipher,\n        fileName,\n        new Uint8Array(fileBuf).buffer\n      );\n      const updatedCipher = await this.cipherService.get(cipher.id);\n      const decCipher = await updatedCipher.decrypt();\n      return Response.success(new CipherResponse(decCipher));\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async createFolder(req: Folder) {\n    const folder = await this.folderService.encrypt(Folder.toView(req));\n    try {\n      await this.folderService.saveWithServer(folder);\n      const newFolder = await this.folderService.get(folder.id);\n      const decFolder = await newFolder.decrypt();\n      const res = new FolderResponse(decFolder);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async createOrganizationCollection(req: OrganizationCollectionRequest, options: Options) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"`organizationid` option is required.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    if (options.organizationId !== req.organizationId) {\n      return Response.badRequest(\"`organizationid` option does not match request object.\");\n    }\n    try {\n      const orgKey = await this.cryptoService.getOrgKey(req.organizationId);\n      if (orgKey == null) {\n        throw new Error(\"No encryption key for this organization.\");\n      }\n\n      const groups =\n        req.groups == null\n          ? null\n          : req.groups.map((g) => new SelectionReadOnlyRequest(g.id, g.readOnly, g.hidePasswords));\n      const request = new CollectionRequest();\n      request.name = (await this.cryptoService.encrypt(req.name, orgKey)).encryptedString;\n      request.externalId = req.externalId;\n      request.groups = groups;\n      const response = await this.apiService.postCollection(req.organizationId, request);\n      const view = Collection.toView(req);\n      view.id = response.id;\n      const res = new OrganizationCollectionResponse(view, groups);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n\nclass Options {\n  itemId: string;\n  organizationId: string;\n  file: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.organizationId = passedOptions?.organizationid || passedOptions?.organizationId;\n    this.itemId = passedOptions?.itemid || passedOptions?.itemId;\n    this.file = passedOptions?.file;\n  }\n}\n","import { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { CliUtils } from \"src/utils\";\n\nexport class DeleteCommand {\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async run(object: string, id: string, cmdOptions: Record<string, any>): Promise<Response> {\n    if (id != null) {\n      id = id.toLowerCase();\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    switch (object.toLowerCase()) {\n      case \"item\":\n        return await this.deleteCipher(id, normalizedOptions);\n      case \"attachment\":\n        return await this.deleteAttachment(id, normalizedOptions);\n      case \"folder\":\n        return await this.deleteFolder(id);\n      case \"org-collection\":\n        return await this.deleteOrganizationCollection(id, normalizedOptions);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async deleteCipher(id: string, options: Options) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n\n    try {\n      if (options.permanent) {\n        await this.cipherService.deleteWithServer(id);\n      } else {\n        await this.cipherService.softDeleteWithServer(id);\n      }\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async deleteAttachment(id: string, options: Options) {\n    if (options.itemId == null || options.itemId === \"\") {\n      return Response.badRequest(\"`itemid` option is required.\");\n    }\n\n    const itemId = options.itemId.toLowerCase();\n    const cipher = await this.cipherService.get(itemId);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n\n    if (cipher.attachments == null || cipher.attachments.length === 0) {\n      return Response.error(\"No attachments available for this item.\");\n    }\n\n    const attachments = cipher.attachments.filter((a) => a.id.toLowerCase() === id);\n    if (attachments.length === 0) {\n      return Response.error(\"Attachment `\" + id + \"` was not found.\");\n    }\n\n    if (cipher.organizationId == null && !(await this.stateService.getCanAccessPremium())) {\n      return Response.error(\"Premium status is required to use this feature.\");\n    }\n\n    try {\n      await this.cipherService.deleteAttachmentWithServer(cipher.id, attachments[0].id);\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async deleteFolder(id: string) {\n    const folder = await this.folderService.get(id);\n    if (folder == null) {\n      return Response.notFound();\n    }\n\n    try {\n      await this.folderService.deleteWithServer(id);\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async deleteOrganizationCollection(id: string, options: Options) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"`organizationid` options is required.\");\n    }\n    if (!Utils.isGuid(id)) {\n      return Response.badRequest(\"`\" + id + \"` is not a GUID.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    try {\n      await this.apiService.deleteCollection(options.organizationId, id);\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n\nclass Options {\n  itemId: string;\n  organizationId: string;\n  permanent: boolean;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.organizationId = passedOptions?.organizationid || passedOptions?.organizationId;\n    this.itemId = passedOptions?.itemid || passedOptions?.itemId;\n    this.permanent = CliUtils.convertBooleanOption(passedOptions?.permanent);\n  }\n}\n","import { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/export/cipher\";\nimport { Collection } from \"jslib-common/models/export/collection\";\nimport { Folder } from \"jslib-common/models/export/folder\";\nimport { CollectionRequest } from \"jslib-common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { OrganizationCollectionRequest } from \"../models/request/organizationCollectionRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { OrganizationCollectionResponse } from \"../models/response/organizationCollectionResponse\";\nimport { CliUtils } from \"../utils\";\n\nexport class EditCommand {\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService\n  ) {}\n\n  async run(\n    object: string,\n    id: string,\n    requestJson: any,\n    cmdOptions: Record<string, any>\n  ): Promise<Response> {\n    if (process.env.BW_SERVE !== \"true\" && (requestJson == null || requestJson === \"\")) {\n      requestJson = await CliUtils.readStdin();\n    }\n\n    if (requestJson == null || requestJson === \"\") {\n      return Response.badRequest(\"`requestJson` was not provided.\");\n    }\n\n    let req: any = null;\n    if (typeof requestJson !== \"string\") {\n      req = requestJson;\n    } else {\n      try {\n        const reqJson = Buffer.from(requestJson, \"base64\").toString();\n        req = JSON.parse(reqJson);\n      } catch (e) {\n        return Response.badRequest(\"Error parsing the encoded request data.\");\n      }\n    }\n\n    if (id != null) {\n      id = id.toLowerCase();\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    switch (object.toLowerCase()) {\n      case \"item\":\n        return await this.editCipher(id, req);\n      case \"item-collections\":\n        return await this.editCipherCollections(id, req);\n      case \"folder\":\n        return await this.editFolder(id, req);\n      case \"org-collection\":\n        return await this.editOrganizationCollection(id, req, normalizedOptions);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async editCipher(id: string, req: Cipher) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n\n    let cipherView = await cipher.decrypt();\n    if (cipherView.isDeleted) {\n      return Response.badRequest(\"You may not edit a deleted item. Use the restore command first.\");\n    }\n    cipherView = Cipher.toView(req, cipherView);\n    const encCipher = await this.cipherService.encrypt(cipherView);\n    try {\n      await this.cipherService.saveWithServer(encCipher);\n      const updatedCipher = await this.cipherService.get(cipher.id);\n      const decCipher = await updatedCipher.decrypt();\n      const res = new CipherResponse(decCipher);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async editCipherCollections(id: string, req: string[]) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n    if (cipher.organizationId == null) {\n      return Response.badRequest(\n        \"Item does not belong to an organization. Consider moving it first.\"\n      );\n    }\n\n    cipher.collectionIds = req;\n    try {\n      await this.cipherService.saveCollectionsWithServer(cipher);\n      const updatedCipher = await this.cipherService.get(cipher.id);\n      const decCipher = await updatedCipher.decrypt();\n      const res = new CipherResponse(decCipher);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async editFolder(id: string, req: Folder) {\n    const folder = await this.folderService.get(id);\n    if (folder == null) {\n      return Response.notFound();\n    }\n\n    let folderView = await folder.decrypt();\n    folderView = Folder.toView(req, folderView);\n    const encFolder = await this.folderService.encrypt(folderView);\n    try {\n      await this.folderService.saveWithServer(encFolder);\n      const updatedFolder = await this.folderService.get(folder.id);\n      const decFolder = await updatedFolder.decrypt();\n      const res = new FolderResponse(decFolder);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async editOrganizationCollection(\n    id: string,\n    req: OrganizationCollectionRequest,\n    options: Options\n  ) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"`organizationid` option is required.\");\n    }\n    if (!Utils.isGuid(id)) {\n      return Response.badRequest(\"`\" + id + \"` is not a GUID.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    if (options.organizationId !== req.organizationId) {\n      return Response.badRequest(\"`organizationid` option does not match request object.\");\n    }\n    try {\n      const orgKey = await this.cryptoService.getOrgKey(req.organizationId);\n      if (orgKey == null) {\n        throw new Error(\"No encryption key for this organization.\");\n      }\n\n      const groups =\n        req.groups == null\n          ? null\n          : req.groups.map((g) => new SelectionReadOnlyRequest(g.id, g.readOnly, g.hidePasswords));\n      const request = new CollectionRequest();\n      request.name = (await this.cryptoService.encrypt(req.name, orgKey)).encryptedString;\n      request.externalId = req.externalId;\n      request.groups = groups;\n      const response = await this.apiService.putCollection(req.organizationId, id, request);\n      const view = Collection.toView(req);\n      view.id = response.id;\n      const res = new OrganizationCollectionResponse(view, groups);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n\nclass Options {\n  organizationId: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.organizationId = passedOptions?.organizationid || passedOptions?.organizationId;\n  }\n}\n","export class SelectionReadOnly {\n  static template(): SelectionReadOnly {\n    return new SelectionReadOnly(\"00000000-0000-0000-0000-000000000000\", false, false);\n  }\n\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords || false;\n  }\n}\n","import { Collection } from \"jslib-common/models/export/collection\";\n\nimport { SelectionReadOnly } from \"../selectionReadOnly\";\n\nexport class OrganizationCollectionRequest extends Collection {\n  static template(): OrganizationCollectionRequest {\n    const req = new OrganizationCollectionRequest();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    req.groups = [SelectionReadOnly.template(), SelectionReadOnly.template()];\n    return req;\n  }\n\n  groups: SelectionReadOnly[];\n}\n","import { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nexport class OrganizationResponse implements BaseResponse {\n  object: string;\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n\n  constructor(o: Organization) {\n    this.object = \"organization\";\n    this.id = o.id;\n    this.name = o.name;\n    this.status = o.status;\n    this.type = o.type;\n    this.enabled = o.enabled;\n  }\n}\n","import { SendFileView } from \"jslib-common/models/view/sendFileView\";\n\nexport class SendFileResponse {\n  static template(fileName = \"file attachment location\"): SendFileResponse {\n    const req = new SendFileResponse();\n    req.fileName = fileName;\n    return req;\n  }\n\n  static toView(file: SendFileResponse, view = new SendFileView()) {\n    if (file == null) {\n      return null;\n    }\n\n    view.id = file.id;\n    view.size = file.size;\n    view.sizeName = file.sizeName;\n    view.fileName = file.fileName;\n    return view;\n  }\n\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: string;\n\n  constructor(o?: SendFileView) {\n    if (o == null) {\n      return;\n    }\n    this.id = o.id;\n    this.size = o.size;\n    this.sizeName = o.sizeName;\n    this.fileName = o.fileName;\n  }\n}\n","import { SendTextView } from \"jslib-common/models/view/sendTextView\";\n\nexport class SendTextResponse {\n  static template(text = \"Text contained in the send.\", hidden = false): SendTextResponse {\n    const req = new SendTextResponse();\n    req.text = text;\n    req.hidden = hidden;\n    return req;\n  }\n\n  static toView(text: SendTextResponse, view = new SendTextView()) {\n    if (text == null) {\n      return null;\n    }\n\n    view.text = text.text;\n    view.hidden = text.hidden;\n    return view;\n  }\n  text: string;\n  hidden: boolean;\n\n  constructor(o?: SendTextView) {\n    if (o == null) {\n      return;\n    }\n    this.text = o.text;\n    this.hidden = o.hidden;\n  }\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nimport { SendFileResponse } from \"./sendFileResponse\";\nimport { SendTextResponse } from \"./sendTextResponse\";\n\nconst dateProperties: string[] = [\n  Utils.nameOf<SendResponse>(\"deletionDate\"),\n  Utils.nameOf<SendResponse>(\"expirationDate\"),\n];\n\nexport class SendResponse implements BaseResponse {\n  static template(sendType?: SendType, deleteInDays = 7): SendResponse {\n    const req = new SendResponse();\n    req.name = \"Send name\";\n    req.notes = \"Some notes about this send.\";\n    req.type = sendType === SendType.File ? SendType.File : SendType.Text;\n    req.text = sendType === SendType.Text ? SendTextResponse.template() : null;\n    req.file = sendType === SendType.File ? SendFileResponse.template() : null;\n    req.maxAccessCount = null;\n    req.deletionDate = this.getStandardDeletionDate(deleteInDays);\n    req.expirationDate = null;\n    req.password = null;\n    req.disabled = false;\n    req.hideEmail = false;\n    return req;\n  }\n\n  static toView(send: SendResponse, view = new SendView()): SendView {\n    if (send == null) {\n      return null;\n    }\n\n    view.id = send.id;\n    view.accessId = send.accessId;\n    view.name = send.name;\n    view.notes = send.notes;\n    view.key = send.key == null ? null : Utils.fromB64ToArray(send.key);\n    view.type = send.type;\n    view.file = SendFileResponse.toView(send.file);\n    view.text = SendTextResponse.toView(send.text);\n    view.maxAccessCount = send.maxAccessCount;\n    view.accessCount = send.accessCount;\n    view.revisionDate = send.revisionDate;\n    view.deletionDate = send.deletionDate;\n    view.expirationDate = send.expirationDate;\n    view.password = send.password;\n    view.disabled = send.disabled;\n    view.hideEmail = send.hideEmail;\n    return view;\n  }\n\n  static fromJson(json: string) {\n    return JSON.parse(json, (key, value) => {\n      if (dateProperties.includes(key)) {\n        return value == null ? null : new Date(value);\n      }\n      return value;\n    });\n  }\n\n  private static getStandardDeletionDate(days: number) {\n    const d = new Date();\n    d.setTime(d.getTime() + days * 86400000); // ms per day\n    return d;\n  }\n\n  object = \"send\";\n  id: string;\n  accessId: string;\n  accessUrl: string;\n  name: string;\n  notes: string;\n  key: string;\n  type: SendType;\n  text: SendTextResponse;\n  file: SendFileResponse;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  deletionDate: Date;\n  expirationDate: Date;\n  password: string;\n  passwordSet: boolean;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(o?: SendView, webVaultUrl?: string) {\n    if (o == null) {\n      return;\n    }\n    this.id = o.id;\n    this.accessId = o.accessId;\n    let sendLinkBaseUrl = webVaultUrl;\n    if (sendLinkBaseUrl == null) {\n      sendLinkBaseUrl = \"https://send.bitwarden.com/#\";\n    } else {\n      sendLinkBaseUrl += \"/#/send/\";\n    }\n    this.accessUrl = sendLinkBaseUrl + this.accessId + \"/\" + o.urlB64Key;\n    this.name = o.name;\n    this.notes = o.notes;\n    this.key = Utils.fromBufferToB64(o.key);\n    this.type = o.type;\n    this.maxAccessCount = o.maxAccessCount;\n    this.accessCount = o.accessCount;\n    this.revisionDate = o.revisionDate;\n    this.deletionDate = o.deletionDate;\n    this.expirationDate = o.expirationDate;\n    this.passwordSet = o.password != null;\n    this.disabled = o.disabled;\n    this.hideEmail = o.hideEmail;\n\n    if (o.type === SendType.Text && o.text != null) {\n      this.text = new SendTextResponse(o.text);\n    }\n    if (o.type === SendType.File && o.file != null) {\n      this.file = new SendFileResponse(o.file);\n    }\n  }\n}\n","import { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nexport class TemplateResponse implements BaseResponse {\n  object: string;\n  template: any;\n\n  constructor(template: any) {\n    this.object = \"template\";\n    this.template = template;\n  }\n}\n","import * as fet from \"node-fetch\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { FileResponse } from \"jslib-node/cli/models/response/fileResponse\";\n\nimport { CliUtils } from \"../utils\";\n\nexport abstract class DownloadCommand {\n  constructor(protected cryptoService: CryptoService) {}\n\n  protected async saveAttachmentToFile(\n    url: string,\n    key: SymmetricCryptoKey,\n    fileName: string,\n    output?: string\n  ) {\n    const response = await fet.default(new fet.Request(url, { headers: { cache: \"no-cache\" } }));\n    if (response.status !== 200) {\n      return Response.error(\n        \"A \" + response.status + \" error occurred while downloading the attachment.\"\n      );\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      if (process.env.BW_SERVE === \"true\") {\n        const res = new FileResponse(Buffer.from(decBuf), fileName);\n        return Response.success(res);\n      } else {\n        return await CliUtils.saveResultToFile(Buffer.from(decBuf), output, fileName);\n      }\n    } catch (e) {\n      if (typeof e === \"string\") {\n        return Response.error(e);\n      } else {\n        return Response.error(\"An error occurred while saving the attachment.\");\n      }\n    }\n  }\n}\n","import { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { Card } from \"jslib-common/models/export/card\";\nimport { Cipher } from \"jslib-common/models/export/cipher\";\nimport { Collection } from \"jslib-common/models/export/collection\";\nimport { Field } from \"jslib-common/models/export/field\";\nimport { Folder } from \"jslib-common/models/export/folder\";\nimport { Identity } from \"jslib-common/models/export/identity\";\nimport { Login } from \"jslib-common/models/export/login\";\nimport { LoginUri } from \"jslib-common/models/export/loginUri\";\nimport { SecureNote } from \"jslib-common/models/export/secureNote\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { StringResponse } from \"jslib-node/cli/models/response/stringResponse\";\n\nimport { OrganizationCollectionRequest } from \"../models/request/organizationCollectionRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionResponse } from \"../models/response/collectionResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { OrganizationCollectionResponse } from \"../models/response/organizationCollectionResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { TemplateResponse } from \"../models/response/templateResponse\";\nimport { SelectionReadOnly } from \"../models/selectionReadOnly\";\nimport { CliUtils } from \"../utils\";\n\nimport { DownloadCommand } from \"./download.command\";\n\nexport class GetCommand extends DownloadCommand {\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private totpService: TotpService,\n    private auditService: AuditService,\n    cryptoService: CryptoService,\n    private stateService: StateService,\n    private searchService: SearchService,\n    private apiService: ApiService,\n    private organizationService: OrganizationService\n  ) {\n    super(cryptoService);\n  }\n\n  async run(object: string, id: string, cmdOptions: Record<string, any>): Promise<Response> {\n    if (id != null) {\n      id = id.toLowerCase();\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    switch (object.toLowerCase()) {\n      case \"item\":\n        return await this.getCipher(id);\n      case \"username\":\n        return await this.getUsername(id);\n      case \"password\":\n        return await this.getPassword(id);\n      case \"uri\":\n        return await this.getUri(id);\n      case \"totp\":\n        return await this.getTotp(id);\n      case \"notes\":\n        return await this.getNotes(id);\n      case \"exposed\":\n        return await this.getExposed(id);\n      case \"attachment\":\n        return await this.getAttachment(id, normalizedOptions);\n      case \"folder\":\n        return await this.getFolder(id);\n      case \"collection\":\n        return await this.getCollection(id);\n      case \"org-collection\":\n        return await this.getOrganizationCollection(id, normalizedOptions);\n      case \"organization\":\n        return await this.getOrganization(id);\n      case \"template\":\n        return await this.getTemplate(id);\n      case \"fingerprint\":\n        return await this.getFingerprint(id);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async getCipherView(id: string): Promise<CipherView | CipherView[]> {\n    let decCipher: CipherView = null;\n    if (Utils.isGuid(id)) {\n      const cipher = await this.cipherService.get(id);\n      if (cipher != null) {\n        decCipher = await cipher.decrypt();\n      }\n    } else if (id.trim() !== \"\") {\n      let ciphers = await this.cipherService.getAllDecrypted();\n      ciphers = this.searchService.searchCiphersBasic(ciphers, id);\n      if (ciphers.length > 1) {\n        return ciphers;\n      }\n      if (ciphers.length > 0) {\n        decCipher = ciphers[0];\n      }\n    }\n\n    return decCipher;\n  }\n\n  private async getCipher(id: string, filter?: (c: CipherView) => boolean) {\n    let decCipher = await this.getCipherView(id);\n    if (decCipher == null) {\n      return Response.notFound();\n    }\n    if (Array.isArray(decCipher)) {\n      if (filter != null) {\n        decCipher = decCipher.filter(filter);\n        if (decCipher.length === 1) {\n          decCipher = decCipher[0];\n        }\n      }\n      if (Array.isArray(decCipher)) {\n        return Response.multipleResults(decCipher.map((c) => c.id));\n      }\n    }\n    const res = new CipherResponse(decCipher);\n    return Response.success(res);\n  }\n\n  private async getUsername(id: string) {\n    const cipherResponse = await this.getCipher(\n      id,\n      (c) => c.type === CipherType.Login && !Utils.isNullOrWhitespace(c.login.username)\n    );\n    if (!cipherResponse.success) {\n      return cipherResponse;\n    }\n\n    const cipher = cipherResponse.data as CipherResponse;\n    if (cipher.type !== CipherType.Login) {\n      return Response.badRequest(\"Not a login.\");\n    }\n\n    if (Utils.isNullOrWhitespace(cipher.login.username)) {\n      return Response.error(\"No username available for this login.\");\n    }\n\n    const res = new StringResponse(cipher.login.username);\n    return Response.success(res);\n  }\n\n  private async getPassword(id: string) {\n    const cipherResponse = await this.getCipher(\n      id,\n      (c) => c.type === CipherType.Login && !Utils.isNullOrWhitespace(c.login.password)\n    );\n    if (!cipherResponse.success) {\n      return cipherResponse;\n    }\n\n    const cipher = cipherResponse.data as CipherResponse;\n    if (cipher.type !== CipherType.Login) {\n      return Response.badRequest(\"Not a login.\");\n    }\n\n    if (Utils.isNullOrWhitespace(cipher.login.password)) {\n      return Response.error(\"No password available for this login.\");\n    }\n\n    const res = new StringResponse(cipher.login.password);\n    return Response.success(res);\n  }\n\n  private async getUri(id: string) {\n    const cipherResponse = await this.getCipher(\n      id,\n      (c) =>\n        c.type === CipherType.Login &&\n        c.login.uris != null &&\n        c.login.uris.length > 0 &&\n        c.login.uris[0].uri !== \"\"\n    );\n    if (!cipherResponse.success) {\n      return cipherResponse;\n    }\n\n    const cipher = cipherResponse.data as CipherResponse;\n    if (cipher.type !== CipherType.Login) {\n      return Response.badRequest(\"Not a login.\");\n    }\n\n    if (\n      cipher.login.uris == null ||\n      cipher.login.uris.length === 0 ||\n      cipher.login.uris[0].uri === \"\"\n    ) {\n      return Response.error(\"No uri available for this login.\");\n    }\n\n    const res = new StringResponse(cipher.login.uris[0].uri);\n    return Response.success(res);\n  }\n\n  private async getTotp(id: string) {\n    const cipherResponse = await this.getCipher(\n      id,\n      (c) => c.type === CipherType.Login && !Utils.isNullOrWhitespace(c.login.totp)\n    );\n    if (!cipherResponse.success) {\n      return cipherResponse;\n    }\n\n    const cipher = cipherResponse.data as CipherResponse;\n    if (cipher.type !== CipherType.Login) {\n      return Response.badRequest(\"Not a login.\");\n    }\n\n    if (Utils.isNullOrWhitespace(cipher.login.totp)) {\n      return Response.error(\"No TOTP available for this login.\");\n    }\n\n    const totp = await this.totpService.getCode(cipher.login.totp);\n    if (totp == null) {\n      return Response.error(\"Couldn't generate TOTP code.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (!canAccessPremium) {\n      const originalCipher = await this.cipherService.get(cipher.id);\n      if (\n        originalCipher == null ||\n        originalCipher.organizationId == null ||\n        !originalCipher.organizationUseTotp\n      ) {\n        return Response.error(\"Premium status is required to use this feature.\");\n      }\n    }\n\n    const res = new StringResponse(totp);\n    return Response.success(res);\n  }\n\n  private async getNotes(id: string) {\n    const cipherResponse = await this.getCipher(id, (c) => !Utils.isNullOrWhitespace(c.notes));\n    if (!cipherResponse.success) {\n      return cipherResponse;\n    }\n\n    const cipher = cipherResponse.data as CipherResponse;\n    if (Utils.isNullOrWhitespace(cipher.notes)) {\n      return Response.error(\"No notes available for this item.\");\n    }\n\n    const res = new StringResponse(cipher.notes);\n    return Response.success(res);\n  }\n\n  private async getExposed(id: string) {\n    const passwordResponse = await this.getPassword(id);\n    if (!passwordResponse.success) {\n      return passwordResponse;\n    }\n\n    const exposedNumber = await this.auditService.passwordLeaked(\n      (passwordResponse.data as StringResponse).data\n    );\n    const res = new StringResponse(exposedNumber.toString());\n    return Response.success(res);\n  }\n\n  private async getAttachment(id: string, options: Options) {\n    if (options.itemId == null || options.itemId === \"\") {\n      return Response.badRequest(\"--itemid <itemid> required.\");\n    }\n\n    const itemId = options.itemId.toLowerCase();\n    const cipherResponse = await this.getCipher(itemId);\n    if (!cipherResponse.success) {\n      return cipherResponse;\n    }\n\n    const cipher = await this.getCipherView(itemId);\n    if (\n      cipher == null ||\n      Array.isArray(cipher) ||\n      cipher.attachments == null ||\n      cipher.attachments.length === 0\n    ) {\n      return Response.error(\"No attachments available for this item.\");\n    }\n\n    let attachments = cipher.attachments.filter(\n      (a) =>\n        a.id.toLowerCase() === id ||\n        (a.fileName != null && a.fileName.toLowerCase().indexOf(id) > -1)\n    );\n    if (attachments.length === 0) {\n      return Response.error(\"Attachment `\" + id + \"` was not found.\");\n    }\n\n    const exactMatches = attachments.filter((a) => a.fileName.toLowerCase() === id);\n    if (exactMatches.length === 1) {\n      attachments = exactMatches;\n    }\n\n    if (attachments.length > 1) {\n      return Response.multipleResults(attachments.map((a) => a.id));\n    }\n\n    if (!(await this.stateService.getCanAccessPremium())) {\n      const originalCipher = await this.cipherService.get(cipher.id);\n      if (originalCipher == null || originalCipher.organizationId == null) {\n        return Response.error(\"Premium status is required to use this feature.\");\n      }\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        cipher.id,\n        attachments[0].id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachments[0].url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const key =\n      attachments[0].key != null\n        ? attachments[0].key\n        : await this.cryptoService.getOrgKey(cipher.organizationId);\n    return await this.saveAttachmentToFile(url, key, attachments[0].fileName, options.output);\n  }\n\n  private async getFolder(id: string) {\n    let decFolder: FolderView = null;\n    if (Utils.isGuid(id)) {\n      const folder = await this.folderService.get(id);\n      if (folder != null) {\n        decFolder = await folder.decrypt();\n      }\n    } else if (id.trim() !== \"\") {\n      let folders = await this.folderService.getAllDecrypted();\n      folders = CliUtils.searchFolders(folders, id);\n      if (folders.length > 1) {\n        return Response.multipleResults(folders.map((f) => f.id));\n      }\n      if (folders.length > 0) {\n        decFolder = folders[0];\n      }\n    }\n\n    if (decFolder == null) {\n      return Response.notFound();\n    }\n    const res = new FolderResponse(decFolder);\n    return Response.success(res);\n  }\n\n  private async getCollection(id: string) {\n    let decCollection: CollectionView = null;\n    if (Utils.isGuid(id)) {\n      const collection = await this.collectionService.get(id);\n      if (collection != null) {\n        decCollection = await collection.decrypt();\n      }\n    } else if (id.trim() !== \"\") {\n      let collections = await this.collectionService.getAllDecrypted();\n      collections = CliUtils.searchCollections(collections, id);\n      if (collections.length > 1) {\n        return Response.multipleResults(collections.map((c) => c.id));\n      }\n      if (collections.length > 0) {\n        decCollection = collections[0];\n      }\n    }\n\n    if (decCollection == null) {\n      return Response.notFound();\n    }\n    const res = new CollectionResponse(decCollection);\n    return Response.success(res);\n  }\n\n  private async getOrganizationCollection(id: string, options: Options) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"`organizationid` option is required.\");\n    }\n    if (!Utils.isGuid(id)) {\n      return Response.badRequest(\"`\" + id + \"` is not a GUID.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    try {\n      const orgKey = await this.cryptoService.getOrgKey(options.organizationId);\n      if (orgKey == null) {\n        throw new Error(\"No encryption key for this organization.\");\n      }\n\n      const response = await this.apiService.getCollectionDetails(options.organizationId, id);\n      const decCollection = new CollectionView(response);\n      decCollection.name = await this.cryptoService.decryptToUtf8(\n        new EncString(response.name),\n        orgKey\n      );\n      const groups =\n        response.groups == null\n          ? null\n          : response.groups.map((g) => new SelectionReadOnly(g.id, g.readOnly, g.hidePasswords));\n      const res = new OrganizationCollectionResponse(decCollection, groups);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async getOrganization(id: string) {\n    let org: Organization = null;\n    if (Utils.isGuid(id)) {\n      org = await this.organizationService.get(id);\n    } else if (id.trim() !== \"\") {\n      let orgs = await this.organizationService.getAll();\n      orgs = CliUtils.searchOrganizations(orgs, id);\n      if (orgs.length > 1) {\n        return Response.multipleResults(orgs.map((c) => c.id));\n      }\n      if (orgs.length > 0) {\n        org = orgs[0];\n      }\n    }\n\n    if (org == null) {\n      return Response.notFound();\n    }\n    const res = new OrganizationResponse(org);\n    return Response.success(res);\n  }\n\n  private async getTemplate(id: string) {\n    let template: any = null;\n    switch (id.toLowerCase()) {\n      case \"item\":\n        template = Cipher.template();\n        break;\n      case \"item.field\":\n        template = Field.template();\n        break;\n      case \"item.login\":\n        template = Login.template();\n        break;\n      case \"item.login.uri\":\n        template = LoginUri.template();\n        break;\n      case \"item.card\":\n        template = Card.template();\n        break;\n      case \"item.identity\":\n        template = Identity.template();\n        break;\n      case \"item.securenote\":\n        template = SecureNote.template();\n        break;\n      case \"folder\":\n        template = Folder.template();\n        break;\n      case \"collection\":\n        template = Collection.template();\n        break;\n      case \"item-collections\":\n        template = [\"collection-id1\", \"collection-id2\"];\n        break;\n      case \"org-collection\":\n        template = OrganizationCollectionRequest.template();\n        break;\n      case \"send.text\":\n        template = SendResponse.template(SendType.Text);\n        break;\n      case \"send.file\":\n        template = SendResponse.template(SendType.File);\n        break;\n      default:\n        return Response.badRequest(\"Unknown template object.\");\n    }\n\n    const res = new TemplateResponse(template);\n    return Response.success(res);\n  }\n\n  private async getFingerprint(id: string) {\n    let fingerprint: string[] = null;\n    if (id === \"me\") {\n      fingerprint = await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n    } else if (Utils.isGuid(id)) {\n      try {\n        const response = await this.apiService.getUserPublicKey(id);\n        const pubKey = Utils.fromB64ToArray(response.publicKey);\n        fingerprint = await this.cryptoService.getFingerprint(id, pubKey.buffer);\n      } catch {\n        // eslint-disable-next-line\n      }\n    }\n\n    if (fingerprint == null) {\n      return Response.notFound();\n    }\n    const res = new StringResponse(fingerprint.join(\"-\"));\n    return Response.success(res);\n  }\n}\n\nclass Options {\n  itemId: string;\n  organizationId: string;\n  output: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.organizationId = passedOptions?.organizationid || passedOptions?.organizationId;\n    this.itemId = passedOptions?.itemid || passedOptions?.itemId;\n    this.output = passedOptions?.output;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse implements BaseResponse {\n  object: string;\n  data: BaseResponse[];\n\n  constructor(data: BaseResponse[]) {\n    this.object = \"list\";\n    this.data = data;\n  }\n}\n","import { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nexport class OrganizationUserResponse implements BaseResponse {\n  object: string;\n  id: string;\n  email: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  twoFactorEnabled: boolean;\n\n  constructor() {\n    this.object = \"org-member\";\n  }\n}\n","import { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport {\n  CollectionDetailsResponse as ApiCollectionDetailsResponse,\n  CollectionResponse as ApiCollectionResponse,\n} from \"jslib-common/models/response/collectionResponse\";\nimport { ListResponse as ApiListResponse } from \"jslib-common/models/response/listResponse\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { ListResponse } from \"jslib-node/cli/models/response/listResponse\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionResponse } from \"../models/response/collectionResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationUserResponse } from \"../models/response/organizationUserResponse\";\nimport { CliUtils } from \"../utils\";\n\nexport class ListCommand {\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private searchService: SearchService,\n    private apiService: ApiService\n  ) {}\n\n  async run(object: string, cmdOptions: Record<string, any>): Promise<Response> {\n    const normalizedOptions = new Options(cmdOptions);\n    switch (object.toLowerCase()) {\n      case \"items\":\n        return await this.listCiphers(normalizedOptions);\n      case \"folders\":\n        return await this.listFolders(normalizedOptions);\n      case \"collections\":\n        return await this.listCollections(normalizedOptions);\n      case \"org-collections\":\n        return await this.listOrganizationCollections(normalizedOptions);\n      case \"org-members\":\n        return await this.listOrganizationMembers(normalizedOptions);\n      case \"organizations\":\n        return await this.listOrganizations(normalizedOptions);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async listCiphers(options: Options) {\n    let ciphers: CipherView[];\n    options.trash = options.trash || false;\n    if (options.url != null && options.url.trim() !== \"\") {\n      ciphers = await this.cipherService.getAllDecryptedForUrl(options.url);\n    } else {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (\n      options.folderId != null ||\n      options.collectionId != null ||\n      options.organizationId != null\n    ) {\n      ciphers = ciphers.filter((c) => {\n        if (options.trash !== c.isDeleted) {\n          return false;\n        }\n        if (options.folderId != null) {\n          if (options.folderId === \"notnull\" && c.folderId != null) {\n            return true;\n          }\n          const folderId = options.folderId === \"null\" ? null : options.folderId;\n          if (folderId === c.folderId) {\n            return true;\n          }\n        }\n\n        if (options.organizationId != null) {\n          if (options.organizationId === \"notnull\" && c.organizationId != null) {\n            return true;\n          }\n          const organizationId = options.organizationId === \"null\" ? null : options.organizationId;\n          if (organizationId === c.organizationId) {\n            return true;\n          }\n        }\n\n        if (options.collectionId != null) {\n          if (\n            options.collectionId === \"notnull\" &&\n            c.collectionIds != null &&\n            c.collectionIds.length > 0\n          ) {\n            return true;\n          }\n          const collectionId = options.collectionId === \"null\" ? null : options.collectionId;\n          if (collectionId == null && (c.collectionIds == null || c.collectionIds.length === 0)) {\n            return true;\n          }\n          if (\n            collectionId != null &&\n            c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1\n          ) {\n            return true;\n          }\n        }\n        return false;\n      });\n    } else if (options.search == null || options.search.trim() === \"\") {\n      ciphers = ciphers.filter((c) => options.trash === c.isDeleted);\n    }\n\n    if (options.search != null && options.search.trim() !== \"\") {\n      ciphers = this.searchService.searchCiphersBasic(ciphers, options.search, options.trash);\n    }\n\n    const res = new ListResponse(ciphers.map((o) => new CipherResponse(o)));\n    return Response.success(res);\n  }\n\n  private async listFolders(options: Options) {\n    let folders = await this.folderService.getAllDecrypted();\n\n    if (options.search != null && options.search.trim() !== \"\") {\n      folders = CliUtils.searchFolders(folders, options.search);\n    }\n\n    const res = new ListResponse(folders.map((o) => new FolderResponse(o)));\n    return Response.success(res);\n  }\n\n  private async listCollections(options: Options) {\n    let collections = await this.collectionService.getAllDecrypted();\n\n    if (options.organizationId != null) {\n      collections = collections.filter((c) => {\n        if (options.organizationId === c.organizationId) {\n          return true;\n        }\n        return false;\n      });\n    }\n\n    if (options.search != null && options.search.trim() !== \"\") {\n      collections = CliUtils.searchCollections(collections, options.search);\n    }\n\n    const res = new ListResponse(collections.map((o) => new CollectionResponse(o)));\n    return Response.success(res);\n  }\n\n  private async listOrganizationCollections(options: Options) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"`organizationid` option is required.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    const organization = await this.organizationService.get(options.organizationId);\n    if (organization == null) {\n      return Response.error(\"Organization not found.\");\n    }\n\n    try {\n      let response: ApiListResponse<ApiCollectionResponse>;\n      if (organization.canViewAllCollections) {\n        response = await this.apiService.getCollections(options.organizationId);\n      } else {\n        response = await this.apiService.getUserCollections();\n      }\n      const collections = response.data\n        .filter((c) => c.organizationId === options.organizationId)\n        .map((r) => new Collection(new CollectionData(r as ApiCollectionDetailsResponse)));\n      let decCollections = await this.collectionService.decryptMany(collections);\n      if (options.search != null && options.search.trim() !== \"\") {\n        decCollections = CliUtils.searchCollections(decCollections, options.search);\n      }\n      const res = new ListResponse(decCollections.map((o) => new CollectionResponse(o)));\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async listOrganizationMembers(options: Options) {\n    if (options.organizationId == null || options.organizationId === \"\") {\n      return Response.badRequest(\"`organizationid` option is required.\");\n    }\n    if (!Utils.isGuid(options.organizationId)) {\n      return Response.badRequest(\"`\" + options.organizationId + \"` is not a GUID.\");\n    }\n    const organization = await this.organizationService.get(options.organizationId);\n    if (organization == null) {\n      return Response.error(\"Organization not found.\");\n    }\n\n    try {\n      const response = await this.apiService.getOrganizationUsers(options.organizationId);\n      const res = new ListResponse(\n        response.data.map((r) => {\n          const u = new OrganizationUserResponse();\n          u.email = r.email;\n          u.name = r.name;\n          u.id = r.id;\n          u.status = r.status;\n          u.type = r.type;\n          u.twoFactorEnabled = r.twoFactorEnabled;\n          return u;\n        })\n      );\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private async listOrganizations(options: Options) {\n    let organizations = await this.organizationService.getAll();\n\n    if (options.search != null && options.search.trim() !== \"\") {\n      organizations = CliUtils.searchOrganizations(organizations, options.search);\n    }\n\n    const res = new ListResponse(organizations.map((o) => new OrganizationResponse(o)));\n    return Response.success(res);\n  }\n}\n\nclass Options {\n  organizationId: string;\n  collectionId: string;\n  folderId: string;\n  search: string;\n  url: string;\n  trash: boolean;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.organizationId = passedOptions?.organizationid || passedOptions?.organizationId;\n    this.collectionId = passedOptions?.collectionid || passedOptions?.collectionId;\n    this.folderId = passedOptions?.folderid || passedOptions?.folderId;\n    this.search = passedOptions?.search;\n    this.url = passedOptions?.url;\n    this.trash = CliUtils.convertBooleanOption(passedOptions?.trash);\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nexport class RestoreCommand {\n  constructor(private cipherService: CipherService) {}\n\n  async run(object: string, id: string): Promise<Response> {\n    if (id != null) {\n      id = id.toLowerCase();\n    }\n\n    switch (object.toLowerCase()) {\n      case \"item\":\n        return await this.restoreCipher(id);\n      default:\n        return Response.badRequest(\"Unknown object.\");\n    }\n  }\n\n  private async restoreCipher(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n    if (cipher.deletedDate == null) {\n      return Response.badRequest(\"Cipher is not in trash.\");\n    }\n\n    try {\n      await this.cipherService.restoreWithServer(id);\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { NodeUtils } from \"jslib-common/misc/nodeUtils\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { SendResponse } from \"../../models/response/sendResponse\";\nimport { SendTextResponse } from \"../../models/response/sendTextResponse\";\nimport { CliUtils } from \"../../utils\";\n\nexport class SendCreateCommand {\n  constructor(\n    private sendService: SendService,\n    private stateService: StateService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async run(requestJson: any, cmdOptions: Record<string, any>) {\n    let req: any = null;\n    if (process.env.BW_SERVE !== \"true\" && (requestJson == null || requestJson === \"\")) {\n      requestJson = await CliUtils.readStdin();\n    }\n\n    if (requestJson == null || requestJson === \"\") {\n      return Response.badRequest(\"`requestJson` was not provided.\");\n    }\n\n    if (typeof requestJson !== \"string\") {\n      req = requestJson;\n      req.deletionDate = req.deletionDate == null ? null : new Date(req.deletionDate);\n      req.expirationDate = req.expirationDate == null ? null : new Date(req.expirationDate);\n    } else {\n      try {\n        const reqJson = Buffer.from(requestJson, \"base64\").toString();\n        req = SendResponse.fromJson(reqJson);\n\n        if (req == null) {\n          throw new Error(\"Null request\");\n        }\n      } catch (e) {\n        return Response.badRequest(\"Error parsing the encoded request data.\");\n      }\n    }\n\n    if (\n      req.deletionDate == null ||\n      isNaN(new Date(req.deletionDate).getTime()) ||\n      new Date(req.deletionDate) <= new Date()\n    ) {\n      return Response.badRequest(\"Must specify a valid deletion date after the current time\");\n    }\n\n    if (req.expirationDate != null && isNaN(new Date(req.expirationDate).getTime())) {\n      return Response.badRequest(\"Unable to parse expirationDate: \" + req.expirationDate);\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    return this.createSend(req, normalizedOptions);\n  }\n\n  private async createSend(req: SendResponse, options: Options) {\n    const filePath = req.file?.fileName ?? options.file;\n    const text = req.text?.text ?? options.text;\n    const hidden = req.text?.hidden ?? options.hidden;\n    const password = req.password ?? options.password;\n    const maxAccessCount = req.maxAccessCount ?? options.maxAccessCount;\n\n    req.key = null;\n    req.maxAccessCount = maxAccessCount;\n\n    switch (req.type) {\n      case SendType.File:\n        if (process.env.BW_SERVE === \"true\") {\n          return Response.error(\n            \"Creating a file-based Send is unsupported through the `serve` command at this time.\"\n          );\n        }\n\n        if (!(await this.stateService.getCanAccessPremium())) {\n          return Response.error(\"Premium status is required to use this feature.\");\n        }\n\n        if (filePath == null) {\n          return Response.badRequest(\n            \"Must specify a file to Send either with the --file option or in the request JSON.\"\n          );\n        }\n\n        req.file.fileName = path.basename(filePath);\n        break;\n      case SendType.Text:\n        if (text == null) {\n          return Response.badRequest(\n            \"Must specify text content to Send either with the --text option or in the request JSON.\"\n          );\n        }\n        req.text = new SendTextResponse();\n        req.text.text = text;\n        req.text.hidden = hidden;\n        break;\n      default:\n        return Response.badRequest(\n          \"Unknown Send type \" + SendType[req.type] + \". Valid types are: file, text\"\n        );\n    }\n\n    try {\n      let fileBuffer: ArrayBuffer = null;\n      if (req.type === SendType.File) {\n        fileBuffer = NodeUtils.bufferToArrayBuffer(fs.readFileSync(filePath));\n      }\n\n      const sendView = SendResponse.toView(req);\n      const [encSend, fileData] = await this.sendService.encrypt(sendView, fileBuffer, password);\n      // Add dates from template\n      encSend.deletionDate = sendView.deletionDate;\n      encSend.expirationDate = sendView.expirationDate;\n\n      await this.sendService.saveWithServer([encSend, fileData]);\n      const newSend = await this.sendService.get(encSend.id);\n      const decSend = await newSend.decrypt();\n      const res = new SendResponse(decSend, this.environmentService.getWebVaultUrl());\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n\nclass Options {\n  file: string;\n  text: string;\n  maxAccessCount: number;\n  password: string;\n  hidden: boolean;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.file = passedOptions?.file;\n    this.text = passedOptions?.text;\n    this.password = passedOptions?.password;\n    this.hidden = CliUtils.convertBooleanOption(passedOptions?.hidden);\n    this.maxAccessCount =\n      passedOptions?.maxAccessCount != null ? parseInt(passedOptions.maxAccessCount, null) : null;\n  }\n}\n","import { SendService } from \"jslib-common/abstractions/send.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nexport class SendDeleteCommand {\n  constructor(private sendService: SendService) {}\n\n  async run(id: string) {\n    const send = await this.sendService.get(id);\n\n    if (send == null) {\n      return Response.notFound();\n    }\n\n    try {\n      await this.sendService.deleteWithServer(id);\n      return Response.success();\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n","import { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { SendResponse } from \"../../models/response/sendResponse\";\nimport { CliUtils } from \"../../utils\";\n\nimport { SendGetCommand } from \"./get.command\";\n\nexport class SendEditCommand {\n  constructor(\n    private sendService: SendService,\n    private stateService: StateService,\n    private getCommand: SendGetCommand\n  ) {}\n\n  async run(requestJson: string, cmdOptions: Record<string, any>): Promise<Response> {\n    if (process.env.BW_SERVE !== \"true\" && (requestJson == null || requestJson === \"\")) {\n      requestJson = await CliUtils.readStdin();\n    }\n\n    if (requestJson == null || requestJson === \"\") {\n      return Response.badRequest(\"`requestJson` was not provided.\");\n    }\n\n    let req: SendResponse = null;\n    if (typeof requestJson !== \"string\") {\n      req = requestJson;\n      req.deletionDate = req.deletionDate == null ? null : new Date(req.deletionDate);\n      req.expirationDate = req.expirationDate == null ? null : new Date(req.expirationDate);\n    } else {\n      try {\n        const reqJson = Buffer.from(requestJson, \"base64\").toString();\n        req = SendResponse.fromJson(reqJson);\n      } catch (e) {\n        return Response.badRequest(\"Error parsing the encoded request data.\");\n      }\n    }\n\n    const normalizedOptions = new Options(cmdOptions);\n    req.id = normalizedOptions.itemId || req.id;\n\n    if (req.id != null) {\n      req.id = req.id.toLowerCase();\n    }\n\n    const send = await this.sendService.get(req.id);\n\n    if (send == null) {\n      return Response.notFound();\n    }\n\n    if (send.type !== req.type) {\n      return Response.badRequest(\"Cannot change a Send's type\");\n    }\n\n    if (send.type === SendType.File && !(await this.stateService.getCanAccessPremium())) {\n      return Response.error(\"Premium status is required to use this feature.\");\n    }\n\n    let sendView = await send.decrypt();\n    sendView = SendResponse.toView(req, sendView);\n\n    if (typeof req.password !== \"string\" || req.password === \"\") {\n      req.password = null;\n    }\n\n    try {\n      const [encSend, encFileData] = await this.sendService.encrypt(sendView, null, req.password);\n      // Add dates from template\n      encSend.deletionDate = sendView.deletionDate;\n      encSend.expirationDate = sendView.expirationDate;\n\n      await this.sendService.saveWithServer([encSend, encFileData]);\n    } catch (e) {\n      return Response.error(e);\n    }\n\n    return await this.getCommand.run(send.id, {});\n  }\n}\n\nclass Options {\n  itemId: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.itemId = passedOptions?.itemId || passedOptions?.itemid;\n  }\n}\n","import * as program from \"commander\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { SendResponse } from \"../../models/response/sendResponse\";\nimport { DownloadCommand } from \"../download.command\";\n\nexport class SendGetCommand extends DownloadCommand {\n  constructor(\n    private sendService: SendService,\n    private environmentService: EnvironmentService,\n    private searchService: SearchService,\n    cryptoService: CryptoService\n  ) {\n    super(cryptoService);\n  }\n\n  async run(id: string, options: program.OptionValues) {\n    const serveCommand = process.env.BW_SERVE === \"true\";\n    if (serveCommand && !Utils.isGuid(id)) {\n      return Response.badRequest(\"`\" + id + \"` is not a GUID.\");\n    }\n\n    let sends = await this.getSendView(id);\n    if (sends == null) {\n      return Response.notFound();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    let filter = (s: SendView) => true;\n    let selector = async (s: SendView): Promise<Response> =>\n      Response.success(new SendResponse(s, webVaultUrl));\n    if (!serveCommand && options?.text != null) {\n      filter = (s) => {\n        return filter(s) && s.text != null;\n      };\n      selector = async (s) => {\n        // Write to stdout and response success so we get the text string only to stdout\n        process.stdout.write(s.text.text);\n        return Response.success();\n      };\n    }\n\n    if (Array.isArray(sends)) {\n      if (filter != null) {\n        sends = sends.filter(filter);\n      }\n      if (sends.length > 1) {\n        return Response.multipleResults(sends.map((s) => s.id));\n      }\n      if (sends.length > 0) {\n        return selector(sends[0]);\n      } else {\n        return Response.notFound();\n      }\n    }\n\n    return selector(sends);\n  }\n\n  private async getSendView(id: string): Promise<SendView | SendView[]> {\n    if (Utils.isGuid(id)) {\n      const send = await this.sendService.get(id);\n      if (send != null) {\n        return await send.decrypt();\n      }\n    } else if (id.trim() !== \"\") {\n      let sends = await this.sendService.getAllDecrypted();\n      sends = this.searchService.searchSends(sends, id);\n      if (sends.length > 1) {\n        return sends;\n      } else if (sends.length > 0) {\n        return sends[0];\n      }\n    }\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { ListResponse } from \"jslib-node/cli/models/response/listResponse\";\n\nimport { SendResponse } from \"../..//models/response/sendResponse\";\n\nexport class SendListCommand {\n  constructor(\n    private sendService: SendService,\n    private environmentService: EnvironmentService,\n    private searchService: SearchService\n  ) {}\n\n  async run(cmdOptions: Record<string, any>): Promise<Response> {\n    let sends = await this.sendService.getAllDecrypted();\n\n    const normalizedOptions = new Options(cmdOptions);\n    if (normalizedOptions.search != null && normalizedOptions.search.trim() !== \"\") {\n      sends = this.searchService.searchSends(sends, normalizedOptions.search);\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const res = new ListResponse(sends.map((s) => new SendResponse(s, webVaultUrl)));\n    return Response.success(res);\n  }\n}\n\nclass Options {\n  search: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.search = passedOptions?.search;\n  }\n}\n","import { SendService } from \"jslib-common/abstractions/send.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { SendResponse } from \"../../models/response/sendResponse\";\n\nexport class SendRemovePasswordCommand {\n  constructor(private sendService: SendService) {}\n\n  async run(id: string) {\n    try {\n      await this.sendService.removePasswordWithServer(id);\n\n      const updatedSend = await this.sendService.get(id);\n      const decSend = await updatedSend.decrypt();\n      const res = new SendResponse(decSend);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CliUtils } from \"../utils\";\n\nexport class ShareCommand {\n  constructor(private cipherService: CipherService) {}\n\n  async run(id: string, organizationId: string, requestJson: string): Promise<Response> {\n    if (process.env.BW_SERVE !== \"true\" && (requestJson == null || requestJson === \"\")) {\n      requestJson = await CliUtils.readStdin();\n    }\n\n    if (requestJson == null || requestJson === \"\") {\n      return Response.badRequest(\"`requestJson` was not provided.\");\n    }\n\n    let req: string[] = [];\n    if (typeof requestJson !== \"string\") {\n      req = requestJson;\n    } else {\n      try {\n        const reqJson = Buffer.from(requestJson, \"base64\").toString();\n        req = JSON.parse(reqJson);\n        if (req == null || req.length === 0) {\n          return Response.badRequest(\"You must provide at least one collection id for this item.\");\n        }\n      } catch (e) {\n        return Response.badRequest(\"Error parsing the encoded request data.\");\n      }\n    }\n\n    if (id != null) {\n      id = id.toLowerCase();\n    }\n    if (organizationId != null) {\n      organizationId = organizationId.toLowerCase();\n    }\n\n    const cipher = await this.cipherService.get(id);\n    if (cipher == null) {\n      return Response.notFound();\n    }\n    if (cipher.organizationId != null) {\n      return Response.badRequest(\"This item already belongs to an organization.\");\n    }\n    const cipherView = await cipher.decrypt();\n    try {\n      await this.cipherService.shareWithServer(cipherView, organizationId, req);\n      const updatedCipher = await this.cipherService.get(cipher.id);\n      const decCipher = await updatedCipher.decrypt();\n      const res = new CipherResponse(decCipher);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { TemplateResponse } from \"../models/response/templateResponse\";\n\nexport class StatusCommand {\n  constructor(\n    private envService: EnvironmentService,\n    private syncService: SyncService,\n    private stateService: StateService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {}\n\n  async run(): Promise<Response> {\n    try {\n      const baseUrl = this.baseUrl();\n      const status = await this.status();\n      const lastSync = await this.syncService.getLastSync();\n      const userId = await this.stateService.getUserId();\n      const email = await this.stateService.getEmail();\n\n      return Response.success(\n        new TemplateResponse({\n          serverUrl: baseUrl,\n          lastSync: lastSync,\n          userEmail: email,\n          userId: userId,\n          status: status,\n        })\n      );\n    } catch (e) {\n      return Response.error(e);\n    }\n  }\n\n  private baseUrl(): string {\n    return this.envService.getUrls().base;\n  }\n\n  private async status(): Promise<string> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return \"unauthenticated\";\n    }\n\n    const isLocked = await this.vaultTimeoutService.isLocked();\n    return isLocked ? \"locked\" : \"unlocked\";\n  }\n}\n","import { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\nimport { StringResponse } from \"jslib-node/cli/models/response/stringResponse\";\n\nimport { CliUtils } from \"src/utils\";\n\nexport class SyncCommand {\n  constructor(private syncService: SyncService) {}\n\n  async run(cmdOptions: Record<string, any>): Promise<Response> {\n    const normalizedOptions = new Options(cmdOptions);\n    if (normalizedOptions.last) {\n      return await this.getLastSync();\n    }\n\n    try {\n      await this.syncService.fullSync(normalizedOptions.force, true);\n      const res = new MessageResponse(\"Syncing complete.\", null);\n      return Response.success(res);\n    } catch (e) {\n      return Response.error(\"Syncing failed: \" + e.toString());\n    }\n  }\n\n  private async getLastSync() {\n    const lastSyncDate = await this.syncService.getLastSync();\n    const res = new StringResponse(lastSyncDate == null ? null : lastSyncDate.toISOString());\n    return Response.success(res);\n  }\n}\n\nclass Options {\n  last: boolean;\n  force: boolean;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.last = CliUtils.convertBooleanOption(passedOptions?.last);\n    this.force = CliUtils.convertBooleanOption(passedOptions?.force);\n  }\n}\n","import * as inquirer from \"inquirer\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nexport class ConvertToKeyConnectorCommand {\n  constructor(\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private environmentService: EnvironmentService,\n    private syncService: SyncService,\n    private logout: () => Promise<void>\n  ) {}\n\n  async run(): Promise<Response> {\n    // If no interaction available, alert user to use web vault\n    const canInteract = process.env.BW_NOINTERACTION !== \"true\";\n    if (!canInteract) {\n      await this.logout();\n      return Response.error(\n        new MessageResponse(\n          \"An organization you are a member of is using Key Connector. \" +\n            \"In order to access the vault, you must opt-in to Key Connector now via the web vault. You have been logged out.\",\n          null\n        )\n      );\n    }\n\n    const organization = await this.keyConnectorService.getManagingOrganization();\n\n    const answer: inquirer.Answers = await inquirer.createPromptModule({ output: process.stderr })({\n      type: \"list\",\n      name: \"convert\",\n      message:\n        organization.name +\n        \" is using a self-hosted key server. A master password is no longer required to log in for members of this organization. \",\n      choices: [\n        {\n          name: \"Remove master password and unlock\",\n          value: \"remove\",\n        },\n        {\n          name: \"Leave organization and unlock\",\n          value: \"leave\",\n        },\n        {\n          name: \"Log out\",\n          value: \"exit\",\n        },\n      ],\n    });\n\n    if (answer.convert === \"remove\") {\n      try {\n        await this.keyConnectorService.migrateUser();\n      } catch (e) {\n        await this.logout();\n        throw e;\n      }\n\n      await this.keyConnectorService.removeConvertAccountRequired();\n      await this.keyConnectorService.setUsesKeyConnector(true);\n\n      // Update environment URL - required for api key login\n      const urls = this.environmentService.getUrls();\n      urls.keyConnector = organization.keyConnectorUrl;\n      await this.environmentService.setUrls(urls);\n\n      return Response.success();\n    } else if (answer.convert === \"leave\") {\n      await this.apiService.postLeaveOrganization(organization.id);\n      await this.keyConnectorService.removeConvertAccountRequired();\n      await this.syncService.fullSync(true);\n      return Response.success();\n    } else {\n      await this.logout();\n      return Response.error(\"You have been logged out.\");\n    }\n  }\n}\n","import { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nimport { CliUtils } from \"../utils\";\n\nimport { ConvertToKeyConnectorCommand } from \"./convertToKeyConnector.command\";\n\nexport class UnlockCommand {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private logService: ConsoleLogService,\n    private keyConnectorService: KeyConnectorService,\n    private environmentService: EnvironmentService,\n    private syncService: SyncService,\n    private logout: () => Promise<void>\n  ) {}\n\n  async run(password: string, cmdOptions: Record<string, any>) {\n    const normalizedOptions = new Options(cmdOptions);\n    const passwordResult = await CliUtils.getPassword(password, normalizedOptions, this.logService);\n\n    if (passwordResult instanceof Response) {\n      return passwordResult;\n    } else {\n      password = passwordResult;\n    }\n\n    await this.setNewSessionKey();\n    const email = await this.stateService.getEmail();\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const key = await this.cryptoService.makeKey(password, email, kdf, kdfIterations);\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n    if (key != null) {\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(password, key);\n      } else {\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          password,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        const request = new SecretVerificationRequest();\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          await this.apiService.postAccountVerifyPassword(request);\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            password,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch {\n          // Ignore\n        }\n      }\n    }\n\n    if (passwordValid) {\n      await this.cryptoService.setKey(key);\n\n      if (await this.keyConnectorService.getConvertAccountRequired()) {\n        const convertToKeyConnectorCommand = new ConvertToKeyConnectorCommand(\n          this.apiService,\n          this.keyConnectorService,\n          this.environmentService,\n          this.syncService,\n          this.logout\n        );\n        const convertResponse = await convertToKeyConnectorCommand.run();\n        if (!convertResponse.success) {\n          return convertResponse;\n        }\n      }\n\n      return this.successResponse();\n    } else {\n      return Response.error(\"Invalid master password.\");\n    }\n  }\n\n  private async setNewSessionKey() {\n    const key = await this.cryptoFunctionService.randomBytes(64);\n    process.env.BW_SESSION = Utils.fromBufferToB64(key);\n  }\n\n  private async successResponse() {\n    const res = new MessageResponse(\n      \"Your vault is now unlocked!\",\n      \"\\n\" +\n        \"To unlock your vault, set your session key to the `BW_SESSION` environment variable. ex:\\n\" +\n        '$ export BW_SESSION=\"' +\n        process.env.BW_SESSION +\n        '\"\\n' +\n        '> $env:BW_SESSION=\"' +\n        process.env.BW_SESSION +\n        '\"\\n\\n' +\n        \"You can also pass the session key to any command with the `--session` option. ex:\\n\" +\n        \"$ bw list items --session \" +\n        process.env.BW_SESSION\n    );\n    res.raw = process.env.BW_SESSION;\n    return Response.success(res);\n  }\n}\n\nclass Options {\n  passwordEnv: string;\n  passwordFile: string;\n\n  constructor(passedOptions: Record<string, any>) {\n    this.passwordEnv = passedOptions?.passwordenv || passedOptions?.passwordEnv;\n    this.passwordFile = passedOptions?.passwordfile || passedOptions?.passwordFile;\n  }\n}\n","import * as koaMulter from \"@koa/multer\";\nimport * as koaRouter from \"@koa/router\";\nimport * as program from \"commander\";\nimport * as koa from \"koa\";\nimport * as koaBodyParser from \"koa-bodyparser\";\nimport * as koaJson from \"koa-json\";\n\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { FileResponse } from \"jslib-node/cli/models/response/fileResponse\";\n\nimport { Main } from \"../bw\";\n\nimport { ConfirmCommand } from \"./confirm.command\";\nimport { CreateCommand } from \"./create.command\";\nimport { DeleteCommand } from \"./delete.command\";\nimport { EditCommand } from \"./edit.command\";\nimport { GenerateCommand } from \"./generate.command\";\nimport { GetCommand } from \"./get.command\";\nimport { ListCommand } from \"./list.command\";\nimport { LockCommand } from \"./lock.command\";\nimport { RestoreCommand } from \"./restore.command\";\nimport { SendCreateCommand } from \"./send/create.command\";\nimport { SendDeleteCommand } from \"./send/delete.command\";\nimport { SendEditCommand } from \"./send/edit.command\";\nimport { SendGetCommand } from \"./send/get.command\";\nimport { SendListCommand } from \"./send/list.command\";\nimport { SendRemovePasswordCommand } from \"./send/removePassword.command\";\nimport { ShareCommand } from \"./share.command\";\nimport { StatusCommand } from \"./status.command\";\nimport { SyncCommand } from \"./sync.command\";\nimport { UnlockCommand } from \"./unlock.command\";\n\nexport class ServeCommand {\n  private listCommand: ListCommand;\n  private getCommand: GetCommand;\n  private createCommand: CreateCommand;\n  private editCommand: EditCommand;\n  private generateCommand: GenerateCommand;\n  private shareCommand: ShareCommand;\n  private statusCommand: StatusCommand;\n  private syncCommand: SyncCommand;\n  private deleteCommand: DeleteCommand;\n  private confirmCommand: ConfirmCommand;\n  private restoreCommand: RestoreCommand;\n  private lockCommand: LockCommand;\n  private unlockCommand: UnlockCommand;\n\n  private sendCreateCommand: SendCreateCommand;\n  private sendDeleteCommand: SendDeleteCommand;\n  private sendEditCommand: SendEditCommand;\n  private sendGetCommand: SendGetCommand;\n  private sendListCommand: SendListCommand;\n  private sendRemovePasswordCommand: SendRemovePasswordCommand;\n\n  constructor(protected main: Main) {\n    this.getCommand = new GetCommand(\n      this.main.cipherService,\n      this.main.folderService,\n      this.main.collectionService,\n      this.main.totpService,\n      this.main.auditService,\n      this.main.cryptoService,\n      this.main.stateService,\n      this.main.searchService,\n      this.main.apiService,\n      this.main.organizationService\n    );\n    this.listCommand = new ListCommand(\n      this.main.cipherService,\n      this.main.folderService,\n      this.main.collectionService,\n      this.main.organizationService,\n      this.main.searchService,\n      this.main.apiService\n    );\n    this.createCommand = new CreateCommand(\n      this.main.cipherService,\n      this.main.folderService,\n      this.main.stateService,\n      this.main.cryptoService,\n      this.main.apiService\n    );\n    this.editCommand = new EditCommand(\n      this.main.cipherService,\n      this.main.folderService,\n      this.main.cryptoService,\n      this.main.apiService\n    );\n    this.generateCommand = new GenerateCommand(\n      this.main.passwordGenerationService,\n      this.main.stateService\n    );\n    this.syncCommand = new SyncCommand(this.main.syncService);\n    this.statusCommand = new StatusCommand(\n      this.main.environmentService,\n      this.main.syncService,\n      this.main.stateService,\n      this.main.vaultTimeoutService\n    );\n    this.deleteCommand = new DeleteCommand(\n      this.main.cipherService,\n      this.main.folderService,\n      this.main.stateService,\n      this.main.apiService\n    );\n    this.confirmCommand = new ConfirmCommand(this.main.apiService, this.main.cryptoService);\n    this.restoreCommand = new RestoreCommand(this.main.cipherService);\n    this.shareCommand = new ShareCommand(this.main.cipherService);\n    this.lockCommand = new LockCommand(this.main.vaultTimeoutService);\n    this.unlockCommand = new UnlockCommand(\n      this.main.cryptoService,\n      this.main.stateService,\n      this.main.cryptoFunctionService,\n      this.main.apiService,\n      this.main.logService,\n      this.main.keyConnectorService,\n      this.main.environmentService,\n      this.main.syncService,\n      async () => await this.main.logout()\n    );\n\n    this.sendCreateCommand = new SendCreateCommand(\n      this.main.sendService,\n      this.main.stateService,\n      this.main.environmentService\n    );\n    this.sendDeleteCommand = new SendDeleteCommand(this.main.sendService);\n    this.sendGetCommand = new SendGetCommand(\n      this.main.sendService,\n      this.main.environmentService,\n      this.main.searchService,\n      this.main.cryptoService\n    );\n    this.sendEditCommand = new SendEditCommand(\n      this.main.sendService,\n      this.main.stateService,\n      this.sendGetCommand\n    );\n    this.sendListCommand = new SendListCommand(\n      this.main.sendService,\n      this.main.environmentService,\n      this.main.searchService\n    );\n    this.sendRemovePasswordCommand = new SendRemovePasswordCommand(this.main.sendService);\n  }\n\n  async run(options: program.OptionValues) {\n    const port = options.port || 8087;\n    const hostname = options.hostname || \"localhost\";\n    const server = new koa();\n    const router = new koaRouter();\n    process.env.BW_SERVE = \"true\";\n    process.env.BW_NOINTERACTION = \"true\";\n\n    server.use(koaBodyParser()).use(koaJson({ pretty: false, param: \"pretty\" }));\n\n    router.get(\"/generate\", async (ctx, next) => {\n      const response = await this.generateCommand.run(ctx.request.query);\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.get(\"/status\", async (ctx, next) => {\n      const response = await this.statusCommand.run();\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.get(\"/list/object/:object\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      let response: Response = null;\n      if (ctx.params.object === \"send\") {\n        response = await this.sendListCommand.run(ctx.request.query);\n      } else {\n        response = await this.listCommand.run(ctx.params.object, ctx.request.query);\n      }\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.get(\"/send/list\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      const response = await this.sendListCommand.run(ctx.request.query);\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/sync\", async (ctx, next) => {\n      const response = await this.syncCommand.run(ctx.request.query);\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/lock\", async (ctx, next) => {\n      const response = await this.lockCommand.run();\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/unlock\", async (ctx, next) => {\n      const response = await this.unlockCommand.run(\n        ctx.request.body.password == null ? null : (ctx.request.body.password as string),\n        ctx.request.query\n      );\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/confirm/:object/:id\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      const response = await this.confirmCommand.run(\n        ctx.params.object,\n        ctx.params.id,\n        ctx.request.query\n      );\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/restore/:object/:id\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      const response = await this.restoreCommand.run(ctx.params.object, ctx.params.id);\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/move/:id/:organizationId\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      const response = await this.shareCommand.run(\n        ctx.params.id,\n        ctx.params.organizationId,\n        ctx.request.body // TODO: Check the format of this body for an array of collection ids\n      );\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/attachment\", koaMulter().single(\"file\"), async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      const response = await this.createCommand.run(\n        \"attachment\",\n        ctx.request.body,\n        ctx.request.query,\n        {\n          fileBuffer: ctx.request.file.buffer,\n          fileName: ctx.request.file.originalname,\n        }\n      );\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/send/:id/remove-password\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      const response = await this.sendRemovePasswordCommand.run(ctx.params.id);\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.post(\"/object/:object\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      let response: Response = null;\n      if (ctx.params.object === \"send\") {\n        response = await this.sendCreateCommand.run(ctx.request.body, ctx.request.query);\n      } else {\n        response = await this.createCommand.run(\n          ctx.params.object,\n          ctx.request.body,\n          ctx.request.query\n        );\n      }\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.put(\"/object/:object/:id\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      let response: Response = null;\n      if (ctx.params.object === \"send\") {\n        ctx.request.body.id = ctx.params.id;\n        response = await this.sendEditCommand.run(ctx.request.body, ctx.request.query);\n      } else {\n        response = await this.editCommand.run(\n          ctx.params.object,\n          ctx.params.id,\n          ctx.request.body,\n          ctx.request.query\n        );\n      }\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.get(\"/object/:object/:id\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      let response: Response = null;\n      if (ctx.params.object === \"send\") {\n        response = await this.sendGetCommand.run(ctx.params.id, null);\n      } else {\n        response = await this.getCommand.run(ctx.params.object, ctx.params.id, ctx.request.query);\n      }\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    router.delete(\"/object/:object/:id\", async (ctx, next) => {\n      if (await this.errorIfLocked(ctx.response)) {\n        await next();\n        return;\n      }\n      let response: Response = null;\n      if (ctx.params.object === \"send\") {\n        response = await this.sendDeleteCommand.run(ctx.params.id);\n      } else {\n        response = await this.deleteCommand.run(\n          ctx.params.object,\n          ctx.params.id,\n          ctx.request.query\n        );\n      }\n      this.processResponse(ctx.response, response);\n      await next();\n    });\n\n    server\n      .use(router.routes())\n      .use(router.allowedMethods())\n      .listen(port, hostname === \"all\" ? null : hostname, () => {\n        this.main.logService.info(\"Listening on \" + hostname + \":\" + port);\n      });\n  }\n\n  private processResponse(res: koa.Response, commandResponse: Response) {\n    if (!commandResponse.success) {\n      res.status = 400;\n    }\n    if (commandResponse.data instanceof FileResponse) {\n      res.body = commandResponse.data.data;\n      res.attachment(commandResponse.data.fileName);\n      res.set(\"Content-Type\", \"application/octet-stream\");\n      res.set(\"Content-Length\", commandResponse.data.data.length.toString());\n    } else {\n      res.body = commandResponse;\n    }\n  }\n\n  private async errorIfLocked(res: koa.Response) {\n    const authed = await this.main.stateService.getIsAuthenticated();\n    if (!authed) {\n      this.processResponse(res, Response.error(\"You are not logged in.\"));\n      return true;\n    }\n    if (await this.main.cryptoService.hasKeyInMemory()) {\n      return false;\n    } else if (await this.main.cryptoService.hasKeyStored(KeySuffixOptions.Auto)) {\n      // load key into memory\n      await this.main.cryptoService.getKey();\n      return false;\n    }\n    this.processResponse(res, Response.error(\"Vault is locked.\"));\n    return true;\n  }\n}\n","import * as chalk from \"chalk\";\nimport * as program from \"commander\";\n\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { BaseProgram } from \"jslib-node/cli/baseProgram\";\nimport { LogoutCommand } from \"jslib-node/cli/commands/logout.command\";\nimport { UpdateCommand } from \"jslib-node/cli/commands/update.command\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nimport { Main } from \"./bw\";\nimport { CompletionCommand } from \"./commands/completion.command\";\nimport { ConfigCommand } from \"./commands/config.command\";\nimport { EncodeCommand } from \"./commands/encode.command\";\nimport { GenerateCommand } from \"./commands/generate.command\";\nimport { LockCommand } from \"./commands/lock.command\";\nimport { LoginCommand } from \"./commands/login.command\";\nimport { ServeCommand } from \"./commands/serve.command\";\nimport { StatusCommand } from \"./commands/status.command\";\nimport { SyncCommand } from \"./commands/sync.command\";\nimport { UnlockCommand } from \"./commands/unlock.command\";\nimport { TemplateResponse } from \"./models/response/templateResponse\";\nimport { CliUtils } from \"./utils\";\n\nconst writeLn = CliUtils.writeLn;\n\nexport class Program extends BaseProgram {\n  constructor(protected main: Main) {\n    super(main.stateService, writeLn);\n  }\n\n  async register() {\n    program\n      .option(\"--pretty\", \"Format output. JSON is tabbed with two spaces.\")\n      .option(\"--raw\", \"Return raw output instead of a descriptive message.\")\n      .option(\"--response\", \"Return a JSON formatted version of response output.\")\n      .option(\"--cleanexit\", \"Exit with a success exit code (0) unless an error is thrown.\")\n      .option(\"--quiet\", \"Don't return anything to stdout.\")\n      .option(\"--nointeraction\", \"Do not prompt for interactive user input.\")\n      .option(\"--session <session>\", \"Pass session key instead of reading from env.\")\n      .version(await this.main.platformUtilsService.getApplicationVersion(), \"-v, --version\");\n\n    program.on(\"option:pretty\", () => {\n      process.env.BW_PRETTY = \"true\";\n    });\n\n    program.on(\"option:raw\", () => {\n      process.env.BW_RAW = \"true\";\n    });\n\n    program.on(\"option:quiet\", () => {\n      process.env.BW_QUIET = \"true\";\n    });\n\n    program.on(\"option:response\", () => {\n      process.env.BW_RESPONSE = \"true\";\n    });\n\n    program.on(\"option:cleanexit\", () => {\n      process.env.BW_CLEANEXIT = \"true\";\n    });\n\n    program.on(\"option:nointeraction\", () => {\n      process.env.BW_NOINTERACTION = \"true\";\n    });\n\n    program.on(\"option:session\", (key) => {\n      process.env.BW_SESSION = key;\n    });\n\n    program.on(\"command:*\", () => {\n      writeLn(chalk.redBright(\"Invalid command: \" + program.args.join(\" \")), false, true);\n      writeLn(\"See --help for a list of available commands.\", true, true);\n      process.exitCode = 1;\n    });\n\n    program.on(\"--help\", () => {\n      writeLn(\"\\n  Examples:\");\n      writeLn(\"\");\n      writeLn(\"    bw login\");\n      writeLn(\"    bw lock\");\n      writeLn(\"    bw unlock myPassword321\");\n      writeLn(\"    bw list --help\");\n      writeLn(\"    bw list items --search google\");\n      writeLn(\"    bw get item 99ee88d2-6046-4ea7-92c2-acac464b1412\");\n      writeLn(\"    bw get password google.com\");\n      writeLn('    echo \\'{\"name\":\"My Folder\"}\\' | bw encode');\n      writeLn(\"    bw create folder eyJuYW1lIjoiTXkgRm9sZGVyIn0K\");\n      writeLn(\n        \"    bw edit folder c7c7b60b-9c61-40f2-8ccd-36c49595ed72 eyJuYW1lIjoiTXkgRm9sZGVyMiJ9Cg==\"\n      );\n      writeLn(\"    bw delete item 99ee88d2-6046-4ea7-92c2-acac464b1412\");\n      writeLn(\"    bw generate -lusn --length 18\");\n      writeLn(\"    bw config server https://bitwarden.example.com\");\n      writeLn(\"    bw send -f ./file.ext\");\n      writeLn('    bw send \"text to send\"');\n      writeLn('    echo \"text to send\" | bw send');\n      writeLn(\n        \"    bw receive https://vault.bitwarden.com/#/send/rg3iuoS_Akm2gqy6ADRHmg/Ht7dYjsqjmgqUM3rjzZDSQ\"\n      );\n      writeLn(\"\", true);\n    });\n\n    program\n      .command(\"login [email] [password]\")\n      .description(\"Log into a user account.\")\n      .option(\"--method <method>\", \"Two-step login method.\")\n      .option(\"--code <code>\", \"Two-step login code.\")\n      .option(\"--sso\", \"Log in with Single-Sign On.\")\n      .option(\"--apikey\", \"Log in with an Api Key.\")\n      .option(\"--passwordenv <passwordenv>\", \"Environment variable storing your password\")\n      .option(\n        \"--passwordfile <passwordfile>\",\n        \"Path to a file containing your password as its first line\"\n      )\n      .option(\"--check\", \"Check login status.\", async () => {\n        const authed = await this.main.stateService.getIsAuthenticated();\n        if (authed) {\n          const res = new MessageResponse(\"You are logged in!\", null);\n          this.processResponse(Response.success(res), true);\n        }\n        this.processResponse(Response.error(\"You are not logged in.\"), true);\n      })\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    See docs for valid `method` enum values.\");\n        writeLn(\"\");\n        writeLn(\"    Pass `--raw` option to only return the session key.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw login\");\n        writeLn(\"    bw login john@example.com myPassword321 --raw\");\n        writeLn(\"    bw login john@example.com myPassword321 --method 1 --code 249213\");\n        writeLn(\"    bw login --sso\");\n        writeLn(\"\", true);\n      })\n      .action(async (email: string, password: string, options: program.OptionValues) => {\n        if (!options.check) {\n          await this.exitIfAuthed();\n          const command = new LoginCommand(\n            this.main.authService,\n            this.main.apiService,\n            this.main.cryptoFunctionService,\n            this.main.i18nService,\n            this.main.environmentService,\n            this.main.passwordGenerationService,\n            this.main.platformUtilsService,\n            this.main.stateService,\n            this.main.cryptoService,\n            this.main.policyService,\n            this.main.twoFactorService,\n            this.main.syncService,\n            this.main.keyConnectorService,\n            async () => await this.main.logout()\n          );\n          const response = await command.run(email, password, options);\n          this.processResponse(response);\n        }\n      });\n\n    program\n      .command(\"logout\")\n      .description(\"Log out of the current user account.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw logout\");\n        writeLn(\"\", true);\n      })\n      .action(async (cmd) => {\n        await this.exitIfNotAuthed();\n        const command = new LogoutCommand(\n          this.main.authService,\n          this.main.i18nService,\n          async () => await this.main.logout()\n        );\n        const response = await command.run();\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"lock\")\n      .description(\"Lock the vault and destroy active session keys.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw lock\");\n        writeLn(\"\", true);\n      })\n      .action(async (cmd) => {\n        await this.exitIfNotAuthed();\n\n        if (await this.main.keyConnectorService.getUsesKeyConnector()) {\n          const logoutCommand = new LogoutCommand(\n            this.main.authService,\n            this.main.i18nService,\n            async () => await this.main.logout()\n          );\n          await logoutCommand.run();\n          this.processResponse(\n            Response.error(\n              \"You cannot lock your vault because you are using Key Connector. \" +\n                \"To protect your vault, you have been logged out.\"\n            ),\n            true\n          );\n          return;\n        }\n\n        const command = new LockCommand(this.main.vaultTimeoutService);\n        const response = await command.run();\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"unlock [password]\")\n      .description(\"Unlock the vault and return a new session key.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    After unlocking, any previous session keys will no longer be valid.\");\n        writeLn(\"\");\n        writeLn(\"    Pass `--raw` option to only return the session key.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw unlock\");\n        writeLn(\"    bw unlock myPassword321\");\n        writeLn(\"    bw unlock myPassword321 --raw\");\n        writeLn(\"\", true);\n      })\n      .option(\"--check\", \"Check lock status.\", async () => {\n        const locked = await this.main.vaultTimeoutService.isLocked();\n        if (!locked) {\n          const res = new MessageResponse(\"Vault is unlocked!\", null);\n          this.processResponse(Response.success(res), true);\n        }\n        this.processResponse(Response.error(\"Vault is locked.\"), true);\n      })\n      .option(\"--passwordenv <passwordenv>\", \"Environment variable storing your password\")\n      .option(\n        \"--passwordfile <passwordfile>\",\n        \"Path to a file containing your password as its first line\"\n      )\n      .action(async (password, cmd) => {\n        if (!cmd.check) {\n          await this.exitIfNotAuthed();\n          const command = new UnlockCommand(\n            this.main.cryptoService,\n            this.main.stateService,\n            this.main.cryptoFunctionService,\n            this.main.apiService,\n            this.main.logService,\n            this.main.keyConnectorService,\n            this.main.environmentService,\n            this.main.syncService,\n            async () => await this.main.logout()\n          );\n          const response = await command.run(password, cmd);\n          this.processResponse(response);\n        }\n      });\n\n    program\n      .command(\"sync\")\n      .description(\"Pull the latest vault data from server.\")\n      .option(\"-f, --force\", \"Force a full sync.\")\n      .option(\"--last\", \"Get the last sync date.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw sync\");\n        writeLn(\"    bw sync -f\");\n        writeLn(\"    bw sync --last\");\n        writeLn(\"\", true);\n      })\n      .action(async (cmd) => {\n        await this.exitIfLocked();\n        const command = new SyncCommand(this.main.syncService);\n        const response = await command.run(cmd);\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"generate\")\n      .description(\"Generate a password/passphrase.\")\n      .option(\"-u, --uppercase\", \"Include uppercase characters.\")\n      .option(\"-l, --lowercase\", \"Include lowercase characters.\")\n      .option(\"-n, --number\", \"Include numeric characters.\")\n      .option(\"-s, --special\", \"Include special characters.\")\n      .option(\"-p, --passphrase\", \"Generate a passphrase.\")\n      .option(\"--length <length>\", \"Length of the password.\")\n      .option(\"--words <words>\", \"Number of words.\")\n      .option(\"--separator <separator>\", \"Word separator.\")\n      .option(\"-c, --capitalize\", \"Title case passphrase.\")\n      .option(\"--includeNumber\", \"Passphrase includes number.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    Default options are `-uln --length 14`.\");\n        writeLn(\"\");\n        writeLn(\"    Minimum `length` is 5.\");\n        writeLn(\"\");\n        writeLn(\"    Minimum `words` is 3.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw generate\");\n        writeLn(\"    bw generate -u -l --length 18\");\n        writeLn(\"    bw generate -ulns --length 25\");\n        writeLn(\"    bw generate -ul\");\n        writeLn(\"    bw generate -p --separator _\");\n        writeLn(\"    bw generate -p --words 5 --separator space\");\n        writeLn(\"\", true);\n      })\n      .action(async (options) => {\n        const command = new GenerateCommand(\n          this.main.passwordGenerationService,\n          this.main.stateService\n        );\n        const response = await command.run(options);\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"encode\")\n      .description(\"Base 64 encode stdin.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    Use to create `encodedJson` for `create` and `edit` commands.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn('    echo \\'{\"name\":\"My Folder\"}\\' | bw encode');\n        writeLn(\"\", true);\n      })\n      .action(async () => {\n        const command = new EncodeCommand();\n        const response = await command.run();\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"config <setting> [value]\")\n      .description(\"Configure CLI settings.\")\n      .option(\n        \"--web-vault <url>\",\n        \"Provides a custom web vault URL that differs from the base URL.\"\n      )\n      .option(\"--api <url>\", \"Provides a custom API URL that differs from the base URL.\")\n      .option(\"--identity <url>\", \"Provides a custom identity URL that differs from the base URL.\")\n      .option(\n        \"--icons <url>\",\n        \"Provides a custom icons service URL that differs from the base URL.\"\n      )\n      .option(\n        \"--notifications <url>\",\n        \"Provides a custom notifications URL that differs from the base URL.\"\n      )\n      .option(\"--events <url>\", \"Provides a custom events URL that differs from the base URL.\")\n      .option(\"--key-connector <url>\", \"Provides the URL for your Key Connector server.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Settings:\");\n        writeLn(\"\");\n        writeLn(\"    server - On-premises hosted installation URL.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw config server\");\n        writeLn(\"    bw config server https://bw.company.com\");\n        writeLn(\"    bw config server bitwarden.com\");\n        writeLn(\n          \"    bw config server --api http://localhost:4000 --identity http://localhost:33656\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (setting, value, options) => {\n        const command = new ConfigCommand(this.main.environmentService);\n        const response = await command.run(setting, value, options);\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"update\")\n      .description(\"Check for updates.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    Returns the URL to download the newest version of this CLI tool.\");\n        writeLn(\"\");\n        writeLn(\"    Use the `--raw` option to return only the download URL for the update.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw update\");\n        writeLn(\"    bw update --raw\");\n        writeLn(\"\", true);\n      })\n      .action(async () => {\n        const command = new UpdateCommand(\n          this.main.platformUtilsService,\n          this.main.i18nService,\n          \"cli\",\n          \"bw\",\n          true\n        );\n        const response = await command.run();\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"completion\")\n      .description(\"Generate shell completions.\")\n      .option(\"--shell <shell>\", \"Shell to generate completions for.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    Valid shells are `zsh`.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw completion --shell zsh\");\n        writeLn(\"\", true);\n      })\n      .action(async (options: program.OptionValues, cmd: program.Command) => {\n        const command = new CompletionCommand();\n        const response = await command.run(options);\n        this.processResponse(response);\n      });\n\n    program\n      .command(\"status\")\n      .description(\"Show server, last sync, user information, and vault status.\")\n      .on(\"--help\", () => {\n        writeLn(\"\");\n        writeLn(\"\");\n        writeLn(\"  Example return value:\");\n        writeLn(\"\");\n        writeLn(\"    {\");\n        writeLn('      \"serverUrl\": \"https://bitwarden.example.com\",');\n        writeLn('      \"lastSync\": \"2020-06-16T06:33:51.419Z\",');\n        writeLn('      \"userEmail\": \"user@example.com,');\n        writeLn('      \"userId\": \"00000000-0000-0000-0000-000000000000\",');\n        writeLn('      \"status\": \"locked\"');\n        writeLn(\"    }\");\n        writeLn(\"\");\n        writeLn(\"  Notes:\");\n        writeLn(\"\");\n        writeLn(\"  `status` is one of:\");\n        writeLn(\"    - `unauthenticated` when you are not logged in\");\n        writeLn(\"    - `locked` when you are logged in and the vault is locked\");\n        writeLn(\"    - `unlocked` when you are logged in and the vault is unlocked\");\n        writeLn(\"\", true);\n      })\n      .action(async () => {\n        const command = new StatusCommand(\n          this.main.environmentService,\n          this.main.syncService,\n          this.main.stateService,\n          this.main.vaultTimeoutService\n        );\n        const response = await command.run();\n        this.processResponse(response);\n      });\n\n    if (CliUtils.flagEnabled(\"serve\")) {\n      program\n        .command(\"serve\")\n        .description(\"Start a RESTful API webserver.\")\n        .option(\"--hostname <hostname>\", \"The hostname to bind your API webserver to.\")\n        .option(\"--port <port>\", \"The port to run your API webserver on.\")\n        .on(\"--help\", () => {\n          writeLn(\"\\n  Notes:\");\n          writeLn(\"\");\n          writeLn(\"    Default hostname is `localhost`.\");\n          writeLn(\"    Use hostname `all` for no hostname binding.\");\n          writeLn(\"    Default port is `8087`.\");\n          writeLn(\"\");\n          writeLn(\"  Examples:\");\n          writeLn(\"\");\n          writeLn(\"    bw serve\");\n          writeLn(\"    bw serve --port 8080\");\n          writeLn(\"    bw serve --hostname bwapi.mydomain.com --port 80\");\n          writeLn(\"\", true);\n        })\n        .action(async (cmd) => {\n          await this.exitIfNotAuthed();\n          const command = new ServeCommand(this.main);\n          await command.run(cmd);\n        });\n    }\n  }\n\n  protected processResponse(response: Response, exitImmediately = false) {\n    super.processResponse(response, exitImmediately, () => {\n      if (response.data.object === \"template\") {\n        return this.getJson((response.data as TemplateResponse).template);\n      }\n      return null;\n    });\n  }\n\n  protected async exitIfLocked() {\n    await this.exitIfNotAuthed();\n    if (await this.main.cryptoService.hasKeyInMemory()) {\n      return;\n    } else if (await this.main.cryptoService.hasKeyStored(KeySuffixOptions.Auto)) {\n      // load key into memory\n      await this.main.cryptoService.getKey();\n    } else if (process.env.BW_NOINTERACTION !== \"true\") {\n      // must unlock\n      if (await this.main.keyConnectorService.getUsesKeyConnector()) {\n        const response = Response.error(\n          \"Your vault is locked. You must unlock your vault using your session key.\\n\" +\n            \"If you do not have your session key, you can get a new one by logging out and logging in again.\"\n        );\n        this.processResponse(response, true);\n      } else {\n        const command = new UnlockCommand(\n          this.main.cryptoService,\n          this.main.stateService,\n          this.main.cryptoFunctionService,\n          this.main.apiService,\n          this.main.logService,\n          this.main.keyConnectorService,\n          this.main.environmentService,\n          this.main.syncService,\n          this.main.logout\n        );\n        const response = await command.run(null, null);\n        if (!response.success) {\n          this.processResponse(response, true);\n        }\n      }\n    } else {\n      this.processResponse(Response.error(\"Vault is locked.\"), true);\n    }\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendAccessView } from \"jslib-common/models/view/sendAccessView\";\nimport { BaseResponse } from \"jslib-node/cli/models/response/baseResponse\";\n\nimport { SendFileResponse } from \"./sendFileResponse\";\nimport { SendTextResponse } from \"./sendTextResponse\";\n\nexport class SendAccessResponse implements BaseResponse {\n  static template(): SendAccessResponse {\n    const req = new SendAccessResponse();\n    req.name = \"Send name\";\n    req.type = SendType.Text;\n    req.text = null;\n    req.file = null;\n    return req;\n  }\n\n  object = \"send-access\";\n  id: string;\n  name: string;\n  type: SendType;\n  text: SendTextResponse;\n  file: SendFileResponse;\n\n  constructor(o?: SendAccessView) {\n    if (o == null) {\n      return;\n    }\n    this.id = o.id;\n    this.name = o.name;\n    this.type = o.type;\n\n    if (o.type === SendType.Text && o.text != null) {\n      this.text = new SendTextResponse(o.text);\n    }\n    if (o.type === SendType.File && o.file != null) {\n      this.file = new SendFileResponse(o.file);\n    }\n  }\n}\n","import * as program from \"commander\";\nimport * as inquirer from \"inquirer\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { NodeUtils } from \"jslib-common/misc/nodeUtils\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SendAccess } from \"jslib-common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"jslib-common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { SendAccessView } from \"jslib-common/models/view/sendAccessView\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { SendAccessResponse } from \"../../models/response/sendAccessResponse\";\nimport { DownloadCommand } from \"../download.command\";\n\nexport class SendReceiveCommand extends DownloadCommand {\n  private canInteract: boolean;\n  private decKey: SymmetricCryptoKey;\n  private sendAccessRequest: SendAccessRequest;\n\n  constructor(\n    private apiService: ApiService,\n    cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService\n  ) {\n    super(cryptoService);\n  }\n\n  async run(url: string, options: program.OptionValues): Promise<Response> {\n    this.canInteract = process.env.BW_NOINTERACTION !== \"true\";\n\n    let urlObject: URL;\n    try {\n      urlObject = new URL(url);\n    } catch (e) {\n      return Response.badRequest(\"Failed to parse the provided Send url\");\n    }\n\n    const apiUrl = this.getApiUrl(urlObject);\n    const [id, key] = this.getIdAndKey(urlObject);\n\n    if (Utils.isNullOrWhitespace(id) || Utils.isNullOrWhitespace(key)) {\n      return Response.badRequest(\"Failed to parse url, the url provided is not a valid Send url\");\n    }\n\n    const keyArray = Utils.fromUrlB64ToArray(key);\n    this.sendAccessRequest = new SendAccessRequest();\n\n    let password = options.password;\n    if (password == null || password === \"\") {\n      if (options.passwordfile) {\n        password = await NodeUtils.readFirstLine(options.passwordfile);\n      } else if (options.passwordenv && process.env[options.passwordenv]) {\n        password = process.env[options.passwordenv];\n      }\n    }\n\n    if (password != null && password !== \"\") {\n      this.sendAccessRequest.password = await this.getUnlockedPassword(password, keyArray);\n    }\n\n    const response = await this.sendRequest(apiUrl, id, keyArray);\n\n    if (response instanceof Response) {\n      // Error scenario\n      return response;\n    }\n\n    if (options.obj != null) {\n      return Response.success(new SendAccessResponse(response));\n    }\n\n    switch (response.type) {\n      case SendType.Text:\n        // Write to stdout and response success so we get the text string only to stdout\n        process.stdout.write(response?.text?.text);\n        return Response.success();\n      case SendType.File: {\n        const downloadData = await this.apiService.getSendFileDownloadData(\n          response,\n          this.sendAccessRequest,\n          apiUrl\n        );\n        return await this.saveAttachmentToFile(\n          downloadData.url,\n          this.decKey,\n          response?.file?.fileName,\n          options.output\n        );\n      }\n      default:\n        return Response.success(new SendAccessResponse(response));\n    }\n  }\n\n  private getIdAndKey(url: URL): [string, string] {\n    const result = url.hash.slice(1).split(\"/\").slice(-2);\n    return [result[0], result[1]];\n  }\n\n  private getApiUrl(url: URL) {\n    const urls = this.environmentService.getUrls();\n    if (url.origin === \"https://send.bitwarden.com\") {\n      return \"https://vault.bitwarden.com/api\";\n    } else if (url.origin === urls.api) {\n      return url.origin;\n    } else if (this.platformUtilsService.isDev() && url.origin === urls.webVault) {\n      return urls.api;\n    } else {\n      return url.origin + \"/api\";\n    }\n  }\n\n  private async getUnlockedPassword(password: string, keyArray: ArrayBuffer) {\n    const passwordHash = await this.cryptoFunctionService.pbkdf2(\n      password,\n      keyArray,\n      \"sha256\",\n      100000\n    );\n    return Utils.fromBufferToB64(passwordHash);\n  }\n\n  private async sendRequest(\n    url: string,\n    id: string,\n    key: ArrayBuffer\n  ): Promise<Response | SendAccessView> {\n    try {\n      const sendResponse = await this.apiService.postSendAccess(id, this.sendAccessRequest, url);\n\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(key);\n      return await sendAccess.decrypt(this.decKey);\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          if (this.canInteract) {\n            const answer: inquirer.Answers = await inquirer.createPromptModule({\n              output: process.stderr,\n            })({\n              type: \"password\",\n              name: \"password\",\n              message: \"Send password:\",\n            });\n\n            // reattempt with new password\n            this.sendAccessRequest.password = await this.getUnlockedPassword(answer.password, key);\n            return await this.sendRequest(url, id, key);\n          }\n\n          return Response.badRequest(\"Incorrect or missing password\");\n        } else if (e.statusCode === 405) {\n          return Response.badRequest(\"Bad Request\");\n        } else if (e.statusCode === 404) {\n          return Response.notFound();\n        }\n      }\n      return Response.error(e);\n    }\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport * as chalk from \"chalk\";\nimport * as program from \"commander\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { Main } from \"./bw\";\nimport { GetCommand } from \"./commands/get.command\";\nimport { SendCreateCommand } from \"./commands/send/create.command\";\nimport { SendDeleteCommand } from \"./commands/send/delete.command\";\nimport { SendEditCommand } from \"./commands/send/edit.command\";\nimport { SendGetCommand } from \"./commands/send/get.command\";\nimport { SendListCommand } from \"./commands/send/list.command\";\nimport { SendReceiveCommand } from \"./commands/send/receive.command\";\nimport { SendRemovePasswordCommand } from \"./commands/send/removePassword.command\";\nimport { SendFileResponse } from \"./models/response/sendFileResponse\";\nimport { SendResponse } from \"./models/response/sendResponse\";\nimport { SendTextResponse } from \"./models/response/sendTextResponse\";\nimport { Program } from \"./program\";\nimport { CliUtils } from \"./utils\";\n\nconst writeLn = CliUtils.writeLn;\n\nexport class SendProgram extends Program {\n  constructor(main: Main) {\n    super(main);\n  }\n\n  async register() {\n    program.addCommand(this.sendCommand());\n    // receive is accessible both at `bw receive` and `bw send receive`\n    program.addCommand(this.receiveCommand());\n  }\n\n  private sendCommand(): program.Command {\n    return new program.Command(\"send\")\n      .arguments(\"<data>\")\n      .description(\n        \"Work with Bitwarden sends. A Send can be quickly created using this command or subcommands can be used to fine-tune the Send\",\n        {\n          data: \"The data to Send. Specify as a filepath with the --file option\",\n        }\n      )\n      .option(\"-f, --file\", \"Specifies that <data> is a filepath\")\n      .option(\n        \"-d, --deleteInDays <days>\",\n        \"The number of days in the future to set deletion date, defaults to 7\",\n        \"7\"\n      )\n      .option(\"-a, --maxAccessCount <amount>\", \"The amount of max possible accesses.\")\n      .option(\"--hidden\", \"Hide <data> in web by default. Valid only if --file is not set.\")\n      .option(\n        \"-n, --name <name>\",\n        \"The name of the Send. Defaults to a guid for text Sends and the filename for files.\"\n      )\n      .option(\"--notes <notes>\", \"Notes to add to the Send.\")\n      .option(\n        \"--fullObject\",\n        \"Specifies that the full Send object should be returned rather than just the access url.\"\n      )\n      .addCommand(this.listCommand())\n      .addCommand(this.templateCommand())\n      .addCommand(this.getCommand())\n      .addCommand(this.receiveCommand())\n      .addCommand(this.createCommand())\n      .addCommand(this.editCommand())\n      .addCommand(this.removePasswordCommand())\n      .addCommand(this.deleteCommand())\n      .action(async (data: string, options: program.OptionValues) => {\n        const encodedJson = this.makeSendJson(data, options);\n\n        let response: Response;\n        if (encodedJson instanceof Response) {\n          response = encodedJson;\n        } else {\n          response = await this.runCreate(encodedJson, options);\n        }\n\n        this.processResponse(response);\n      });\n  }\n\n  private receiveCommand(): program.Command {\n    return new program.Command(\"receive\")\n      .arguments(\"<url>\")\n      .description(\"Access a Bitwarden Send from a url\")\n      .option(\"--password <password>\", \"Password needed to access the Send.\")\n      .option(\"--passwordenv <passwordenv>\", \"Environment variable storing the Send's password\")\n      .option(\n        \"--passwordfile <passwordfile>\",\n        \"Path to a file containing the Sends password as its first line\"\n      )\n      .option(\"--obj\", \"Return the Send's json object rather than the Send's content\")\n      .option(\"--output <location>\", \"Specify a file path to save a File-type Send to\")\n      .on(\"--help\", () => {\n        writeLn(\"\");\n        writeLn(\n          \"If a password is required, the provided password is used or the user is prompted.\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (url: string, options: program.OptionValues) => {\n        const cmd = new SendReceiveCommand(\n          this.main.apiService,\n          this.main.cryptoService,\n          this.main.cryptoFunctionService,\n          this.main.platformUtilsService,\n          this.main.environmentService\n        );\n        const response = await cmd.run(url, options);\n        this.processResponse(response);\n      });\n  }\n\n  private listCommand(): program.Command {\n    return new program.Command(\"list\")\n\n      .description(\"List all the Sends owned by you\")\n      .on(\"--help\", () => {\n        writeLn(chalk(\"This is in the list command\"));\n      })\n      .action(async (options: program.OptionValues) => {\n        await this.exitIfLocked();\n        const cmd = new SendListCommand(\n          this.main.sendService,\n          this.main.environmentService,\n          this.main.searchService\n        );\n        const response = await cmd.run(options);\n        this.processResponse(response);\n      });\n  }\n\n  private templateCommand(): program.Command {\n    return new program.Command(\"template\")\n      .arguments(\"<object>\")\n      .description(\"Get json templates for send objects\", {\n        object: \"Valid objects are: send, send.text, send.file\",\n      })\n      .action(async (object) => {\n        const cmd = new GetCommand(\n          this.main.cipherService,\n          this.main.folderService,\n          this.main.collectionService,\n          this.main.totpService,\n          this.main.auditService,\n          this.main.cryptoService,\n          this.main.stateService,\n          this.main.searchService,\n          this.main.apiService,\n          this.main.organizationService\n        );\n        const response = await cmd.run(\"template\", object, null);\n        this.processResponse(response);\n      });\n  }\n\n  private getCommand(): program.Command {\n    return new program.Command(\"get\")\n      .arguments(\"<id>\")\n      .description(\"Get Sends owned by you.\")\n      .option(\"--output <output>\", \"Output directory or filename for attachment.\")\n      .option(\"--text\", \"Specifies to return the text content of a Send\")\n      .on(\"--help\", () => {\n        writeLn(\"\");\n        writeLn(\"  Id:\");\n        writeLn(\"\");\n        writeLn(\"    Search term or Send's globally unique `id`.\");\n        writeLn(\"\");\n        writeLn(\"    If raw output is specified and no output filename or directory is given for\");\n        writeLn(\"    an attachment query, the attachment content is written to stdout.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw get send searchText\");\n        writeLn(\"    bw get send id\");\n        writeLn(\"    bw get send searchText --text\");\n        writeLn(\"    bw get send searchText --file\");\n        writeLn(\"    bw get send searchText --file --output ../Photos/photo.jpg\");\n        writeLn(\"    bw get send searchText --file --raw\");\n        writeLn(\"\", true);\n      })\n      .action(async (id: string, options: program.OptionValues) => {\n        await this.exitIfLocked();\n        const cmd = new SendGetCommand(\n          this.main.sendService,\n          this.main.environmentService,\n          this.main.searchService,\n          this.main.cryptoService\n        );\n        const response = await cmd.run(id, options);\n        this.processResponse(response);\n      });\n  }\n\n  private createCommand(): program.Command {\n    return new program.Command(\"create\")\n      .arguments(\"[encodedJson]\")\n      .description(\"create a Send\", {\n        encodedJson: \"JSON object to upload. Can also be piped in through stdin.\",\n      })\n      .option(\"--file <path>\", \"file to Send. Can also be specified in parent's JSON.\")\n      .option(\"--text <text>\", \"text to Send. Can also be specified in parent's JSON.\")\n      .option(\"--hidden\", \"text hidden flag. Valid only with the --text option.\")\n      .option(\n        \"--password <password>\",\n        \"optional password to access this Send. Can also be specified in JSON\"\n      )\n      .on(\"--help\", () => {\n        writeLn(\"\");\n        writeLn(\"Note:\");\n        writeLn(\"  Options specified in JSON take precedence over command options\");\n        writeLn(\"\", true);\n      })\n      .action(\n        async (\n          encodedJson: string,\n          options: program.OptionValues,\n          args: { parent: program.Command }\n        ) => {\n          // Work-around to support `--fullObject` option for `send create --fullObject`\n          // Calling `option('--fullObject', ...)` above won't work due to Commander doesn't like same option\n          // to be defind on both parent-command and sub-command\n          const { fullObject = false } = args.parent.opts();\n          const mergedOptions = {\n            ...options,\n            fullObject: fullObject,\n          };\n\n          const response = await this.runCreate(encodedJson, mergedOptions);\n          this.processResponse(response);\n        }\n      );\n  }\n\n  private editCommand(): program.Command {\n    return new program.Command(\"edit\")\n      .arguments(\"[encodedJson]\")\n      .description(\"edit a Send\", {\n        encodedJson:\n          \"Updated JSON object to save. If not provided, encodedJson is read from stdin.\",\n      })\n      .option(\"--itemid <itemid>\", \"Overrides the itemId provided in [encodedJson]\")\n      .on(\"--help\", () => {\n        writeLn(\"\");\n        writeLn(\"Note:\");\n        writeLn(\"  You cannot update a File-type Send's file. Just delete and remake it\");\n        writeLn(\"\", true);\n      })\n      .action(async (encodedJson: string, options: program.OptionValues) => {\n        await this.exitIfLocked();\n        const getCmd = new SendGetCommand(\n          this.main.sendService,\n          this.main.environmentService,\n          this.main.searchService,\n          this.main.cryptoService\n        );\n        const cmd = new SendEditCommand(this.main.sendService, this.main.stateService, getCmd);\n        const response = await cmd.run(encodedJson, options);\n        this.processResponse(response);\n      });\n  }\n\n  private deleteCommand(): program.Command {\n    return new program.Command(\"delete\")\n      .arguments(\"<id>\")\n      .description(\"delete a Send\", {\n        id: \"The id of the Send to delete.\",\n      })\n      .action(async (id: string) => {\n        await this.exitIfLocked();\n        const cmd = new SendDeleteCommand(this.main.sendService);\n        const response = await cmd.run(id);\n        this.processResponse(response);\n      });\n  }\n\n  private removePasswordCommand(): program.Command {\n    return new program.Command(\"remove-password\")\n      .arguments(\"<id>\")\n      .description(\"removes the saved password from a Send.\", {\n        id: \"The id of the Send to alter.\",\n      })\n      .action(async (id: string) => {\n        await this.exitIfLocked();\n        const cmd = new SendRemovePasswordCommand(this.main.sendService);\n        const response = await cmd.run(id);\n        this.processResponse(response);\n      });\n  }\n\n  private makeSendJson(data: string, options: program.OptionValues) {\n    let sendFile = null;\n    let sendText = null;\n    let name = Utils.newGuid();\n    let type = SendType.Text;\n    if (options.file != null) {\n      data = path.resolve(data);\n      if (!fs.existsSync(data)) {\n        return Response.badRequest(\"data path does not exist\");\n      }\n\n      sendFile = SendFileResponse.template(data);\n      name = path.basename(data);\n      type = SendType.File;\n    } else {\n      sendText = SendTextResponse.template(data, options.hidden);\n    }\n\n    const template = Utils.assign(SendResponse.template(null, options.deleteInDays), {\n      name: options.name ?? name,\n      notes: options.notes,\n      file: sendFile,\n      text: sendText,\n      type: type,\n    });\n\n    return Buffer.from(JSON.stringify(template), \"utf8\").toString(\"base64\");\n  }\n\n  private async runCreate(encodedJson: string, options: program.OptionValues) {\n    await this.exitIfLocked();\n    const cmd = new SendCreateCommand(\n      this.main.sendService,\n      this.main.stateService,\n      this.main.environmentService\n    );\n    return await cmd.run(encodedJson, options);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage, localesDirectory, (formattedLocale: string) => {\n      const filePath = path.join(\n        __dirname,\n        this.localesDirectory + \"/\" + formattedLocale + \"/messages.json\"\n      );\n      const localesJson = fs.readFileSync(filePath, \"utf8\");\n      const locales = JSON.parse(localesJson.replace(/^\\uFEFF/, \"\")); // strip the BOM\n      return Promise.resolve(locales);\n    });\n\n    this.supportedTranslationLocales = [\"en\"];\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"proper-lockfile\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lowdb\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lowdb/adapters/FileSync\");","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport * as lowdb from \"lowdb\";\nimport * as FileSync from \"lowdb/adapters/FileSync\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StorageService } from \"jslib-common/abstractions/storage.service\";\nimport { NodeUtils } from \"jslib-common/misc/nodeUtils\";\nimport { sequentialize } from \"jslib-common/misc/sequentialize\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nexport class LowdbStorageService implements StorageService {\n  protected dataFilePath: string;\n  private db: lowdb.LowdbSync<any>;\n  private defaults: any;\n  private ready = false;\n\n  constructor(\n    protected logService: LogService,\n    defaults?: any,\n    private dir?: string,\n    private allowCache = false\n  ) {\n    this.defaults = defaults;\n  }\n\n  @sequentialize(() => \"lowdbStorageInit\")\n  async init() {\n    if (this.ready) {\n      return;\n    }\n\n    this.logService.info(\"Initializing lowdb storage service.\");\n    let adapter: lowdb.AdapterSync<any>;\n    if (Utils.isNode && this.dir != null) {\n      if (!fs.existsSync(this.dir)) {\n        this.logService.warning(`Could not find dir, \"${this.dir}\"; creating it instead.`);\n        NodeUtils.mkdirpSync(this.dir, \"700\");\n        this.logService.info(`Created dir \"${this.dir}\".`);\n      }\n      this.dataFilePath = path.join(this.dir, \"data.json\");\n      if (!fs.existsSync(this.dataFilePath)) {\n        this.logService.warning(\n          `Could not find data file, \"${this.dataFilePath}\"; creating it instead.`\n        );\n        fs.writeFileSync(this.dataFilePath, \"\", { mode: 0o600 });\n        fs.chmodSync(this.dataFilePath, 0o600);\n        this.logService.info(`Created data file \"${this.dataFilePath}\" with chmod 600.`);\n      } else {\n        this.logService.info(`db file \"${this.dataFilePath} already exists\"; using existing db`);\n      }\n      await this.lockDbFile(() => {\n        adapter = new FileSync(this.dataFilePath);\n      });\n    }\n    try {\n      this.logService.info(\"Attempting to create lowdb storage adapter.\");\n      this.db = lowdb(adapter);\n      this.logService.info(\"Successfully created lowdb storage adapter.\");\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        this.logService.warning(\n          `Error creating lowdb storage adapter, \"${e.message}\"; emptying data file.`\n        );\n        if (fs.existsSync(this.dataFilePath)) {\n          const backupPath = this.dataFilePath + \".bak\";\n          this.logService.warning(`Writing backup of data file to ${backupPath}`);\n          await fs.copyFile(this.dataFilePath, backupPath, () => {\n            this.logService.warning(\n              `Error while creating data file backup, \"${e.message}\". No backup may have been created.`\n            );\n          });\n        }\n        adapter.write({});\n        this.db = lowdb(adapter);\n      } else {\n        this.logService.error(`Error creating lowdb storage adapter, \"${e.message}\".`);\n        throw e;\n      }\n    }\n\n    if (this.defaults != null) {\n      this.lockDbFile(() => {\n        this.logService.info(\"Writing defaults.\");\n        this.readForNoCache();\n        this.db.defaults(this.defaults).write();\n        this.logService.info(\"Successfully wrote defaults to db.\");\n      });\n    }\n\n    this.ready = true;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    await this.waitForReady();\n    return this.lockDbFile(() => {\n      this.readForNoCache();\n      const val = this.db.get(key).value();\n      this.logService.debug(`Successfully read ${key} from db`);\n      if (val == null) {\n        return null;\n      }\n      return val as T;\n    });\n  }\n\n  has(key: string): Promise<boolean> {\n    return this.get(key).then((v) => v != null);\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    await this.waitForReady();\n    return this.lockDbFile(() => {\n      this.readForNoCache();\n      this.db.set(key, obj).write();\n      this.logService.debug(`Successfully wrote ${key} to db`);\n      return;\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    await this.waitForReady();\n    return this.lockDbFile(() => {\n      this.readForNoCache();\n      this.db.unset(key).write();\n      this.logService.debug(`Successfully removed ${key} from db`);\n      return;\n    });\n  }\n\n  protected async lockDbFile<T>(action: () => T): Promise<T> {\n    // Lock methods implemented in clients\n    return Promise.resolve(action());\n  }\n\n  private readForNoCache() {\n    if (!this.allowCache) {\n      this.db.read();\n    }\n  }\n\n  private async waitForReady() {\n    if (!this.ready) {\n      await this.init();\n    }\n  }\n}\n","import * as lock from \"proper-lockfile\";\nimport { OperationOptions } from \"retry\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { LowdbStorageService as LowdbStorageServiceBase } from \"jslib-node/services/lowdbStorage.service\";\n\nconst retries: OperationOptions = {\n  retries: 50,\n  minTimeout: 100,\n  maxTimeout: 250,\n  factor: 2,\n};\n\nexport class LowdbStorageService extends LowdbStorageServiceBase {\n  constructor(\n    logService: LogService,\n    defaults?: any,\n    dir?: string,\n    allowCache = false,\n    private requireLock = false\n  ) {\n    super(logService, defaults, dir, allowCache);\n  }\n\n  protected async lockDbFile<T>(action: () => T): Promise<T> {\n    if (this.requireLock && !Utils.isNullOrWhitespace(this.dataFilePath)) {\n      this.logService.info(\"acquiring db file lock\");\n      return await lock.lock(this.dataFilePath, { retries: retries }).then((release) => {\n        try {\n          return action();\n        } finally {\n          release();\n        }\n      });\n    } else {\n      return action();\n    }\n  }\n}\n","import { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StorageService } from \"jslib-common/abstractions/storage.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nexport class NodeEnvSecureStorageService implements StorageService {\n  constructor(\n    private storageService: StorageService,\n    private logService: LogService,\n    private cryptoService: () => CryptoService\n  ) {}\n\n  async get<T>(key: string): Promise<T> {\n    const value = await this.storageService.get<string>(this.makeProtectedStorageKey(key));\n    if (value == null) {\n      return null;\n    }\n    const obj = await this.decrypt(value);\n    return obj as any;\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n\n    if (obj !== null && typeof obj !== \"string\") {\n      throw new Error(\"Only string storage is allowed.\");\n    }\n    const protectedObj = await this.encrypt(obj);\n    await this.storageService.save(this.makeProtectedStorageKey(key), protectedObj);\n  }\n\n  remove(key: string): Promise<any> {\n    return this.storageService.remove(this.makeProtectedStorageKey(key));\n  }\n\n  private async encrypt(plainValue: string): Promise<string> {\n    const sessionKey = this.getSessionKey();\n    if (sessionKey == null) {\n      throw new Error(\"No session key available.\");\n    }\n    const encValue = await this.cryptoService().encryptToBytes(\n      Utils.fromB64ToArray(plainValue).buffer,\n      sessionKey\n    );\n    if (encValue == null) {\n      throw new Error(\"Value didn't encrypt.\");\n    }\n\n    return Utils.fromBufferToB64(encValue.buffer);\n  }\n\n  private async decrypt(encValue: string): Promise<string> {\n    try {\n      const sessionKey = this.getSessionKey();\n      if (sessionKey == null) {\n        return null;\n      }\n\n      const decValue = await this.cryptoService().decryptFromBytes(\n        Utils.fromB64ToArray(encValue).buffer,\n        sessionKey\n      );\n      if (decValue == null) {\n        this.logService.info(\"Failed to decrypt.\");\n        return null;\n      }\n\n      return Utils.fromBufferToB64(decValue);\n    } catch (e) {\n      this.logService.info(\"Decrypt error.\");\n      return null;\n    }\n  }\n\n  private getSessionKey() {\n    try {\n      if (process.env.BW_SESSION != null) {\n        const sessionBuffer = Utils.fromB64ToArray(process.env.BW_SESSION).buffer;\n        if (sessionBuffer != null) {\n          const sessionKey = new SymmetricCryptoKey(sessionBuffer);\n          if (sessionBuffer != null) {\n            return sessionKey;\n          }\n        }\n      }\n    } catch (e) {\n      this.logService.info(\"Session key is invalid.\");\n    }\n\n    return null;\n  }\n\n  private makeProtectedStorageKey(key: string) {\n    return \"__PROTECTED__\" + key;\n  }\n}\n","import * as program from \"commander\";\nimport * as inquirer from \"inquirer\";\n\nimport { ExportFormat, ExportService } from \"jslib-common/abstractions/export.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { CliUtils } from \"../utils\";\n\nexport class ExportCommand {\n  constructor(private exportService: ExportService, private policyService: PolicyService) {}\n\n  async run(options: program.OptionValues): Promise<Response> {\n    if (\n      options.organizationid == null &&\n      (await this.policyService.policyAppliesToUser(PolicyType.DisablePersonalVaultExport))\n    ) {\n      return Response.badRequest(\n        \"One or more organization policies prevents you from exporting your personal vault.\"\n      );\n    }\n\n    const format = options.format ?? \"csv\";\n\n    if (options.organizationid != null && !Utils.isGuid(options.organizationid)) {\n      return Response.error(\"`\" + options.organizationid + \"` is not a GUID.\");\n    }\n\n    let exportContent: string = null;\n    try {\n      exportContent =\n        format === \"encrypted_json\"\n          ? await this.getProtectedExport(options.password, options.organizationid)\n          : await this.getUnprotectedExport(format, options.organizationid);\n    } catch (e) {\n      return Response.error(e);\n    }\n    return await this.saveFile(exportContent, options, format);\n  }\n\n  private async getProtectedExport(passwordOption: string | boolean, organizationId?: string) {\n    const password = await this.promptPassword(passwordOption);\n    return password == null\n      ? await this.exportService.getExport(\"encrypted_json\", organizationId)\n      : await this.exportService.getPasswordProtectedExport(password, organizationId);\n  }\n\n  private async getUnprotectedExport(format: ExportFormat, organizationId?: string) {\n    return this.exportService.getExport(format, organizationId);\n  }\n\n  private async saveFile(\n    exportContent: string,\n    options: program.OptionValues,\n    format: ExportFormat\n  ): Promise<Response> {\n    try {\n      const fileName = this.getFileName(format, options.organizationid != null ? \"org\" : null);\n      return await CliUtils.saveResultToFile(exportContent, options.output, fileName);\n    } catch (e) {\n      return Response.error(e.toString());\n    }\n  }\n\n  private getFileName(format: ExportFormat, prefix?: string) {\n    if (format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      format = \"json\";\n    }\n    return this.exportService.getFileName(prefix, format);\n  }\n\n  private async promptPassword(password: string | boolean) {\n    // boolean => flag set with no value, we need to prompt for password\n    // string => flag set with value, use this value for password\n    // undefined/null/false => account protect, not password, no password needed\n    if (typeof password === \"string\") {\n      return password;\n    } else if (password) {\n      const answer: inquirer.Answers = await inquirer.createPromptModule({\n        output: process.stderr,\n      })({\n        type: \"password\",\n        name: \"password\",\n        message: \"Export file password:\",\n      });\n      return answer.password as string;\n    }\n    return null;\n  }\n}\n","import * as program from \"commander\";\nimport * as inquirer from \"inquirer\";\n\nimport { ImportService } from \"jslib-common/abstractions/import.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { ImportType } from \"jslib-common/enums/importOptions\";\nimport { Importer } from \"jslib-common/importers/importer\";\nimport { Response } from \"jslib-node/cli/models/response\";\nimport { MessageResponse } from \"jslib-node/cli/models/response/messageResponse\";\n\nimport { CliUtils } from \"../utils\";\n\nexport class ImportCommand {\n  constructor(\n    private importService: ImportService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async run(\n    format: ImportType,\n    filepath: string,\n    options: program.OptionValues\n  ): Promise<Response> {\n    const organizationId = options.organizationid;\n    if (organizationId != null) {\n      const organization = await this.organizationService.get(organizationId);\n\n      if (organization == null) {\n        return Response.badRequest(\n          `You do not belong to an organization with the ID of ${organizationId}. Check the organization ID and sync your vault.`\n        );\n      }\n\n      if (!organization.canAccessImportExport) {\n        return Response.badRequest(\n          \"You are not authorized to import into the provided organization.\"\n        );\n      }\n    }\n\n    if (options.formats || false) {\n      return await this.list();\n    } else {\n      return await this.import(format, filepath, organizationId);\n    }\n  }\n\n  private async import(format: ImportType, filepath: string, organizationId: string) {\n    if (format == null) {\n      return Response.badRequest(\"`format` was not provided.\");\n    }\n    if (filepath == null || filepath === \"\") {\n      return Response.badRequest(\"`filepath` was not provided.\");\n    }\n\n    const importer = await this.importService.getImporter(format, organizationId);\n    if (importer === null) {\n      return Response.badRequest(\"Proper importer type required.\");\n    }\n\n    try {\n      let contents;\n      if (format === \"1password1pux\") {\n        contents = await CliUtils.extract1PuxContent(filepath);\n      } else {\n        contents = await CliUtils.readFile(filepath);\n      }\n\n      if (contents === null || contents === \"\") {\n        return Response.badRequest(\"Import file was empty.\");\n      }\n\n      const response = await this.doImport(importer, contents, organizationId);\n      if (response.success) {\n        response.data = new MessageResponse(\"Imported \" + filepath, null);\n      }\n      return response;\n    } catch (err) {\n      return Response.badRequest(err);\n    }\n  }\n\n  private async list() {\n    const options = this.importService\n      .getImportOptions()\n      .sort((a, b) => {\n        return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;\n      })\n      .map((option) => option.id)\n      .join(\"\\n\");\n    const res = new MessageResponse(\"Supported input formats:\", options);\n    res.raw = options;\n    return Response.success(res);\n  }\n\n  private async doImport(\n    importer: Importer,\n    contents: string,\n    organizationId?: string\n  ): Promise<Response> {\n    const err = await this.importService.import(importer, contents, organizationId);\n    if (err != null) {\n      if (err.passwordRequired) {\n        importer = this.importService.getImporter(\n          \"bitwardenpasswordprotected\",\n          organizationId,\n          await this.promptPassword()\n        );\n        return this.doImport(importer, contents, organizationId);\n      }\n      return Response.badRequest(err.message);\n    }\n\n    return Response.success();\n  }\n\n  private async promptPassword() {\n    const answer: inquirer.Answers = await inquirer.createPromptModule({\n      output: process.stderr,\n    })({\n      type: \"password\",\n      name: \"password\",\n      message: \"Import file password:\",\n    });\n    return answer.password;\n  }\n}\n","import * as program from \"commander\";\n\nimport { Response } from \"jslib-node/cli/models/response\";\n\nimport { Main } from \"./bw\";\nimport { ConfirmCommand } from \"./commands/confirm.command\";\nimport { CreateCommand } from \"./commands/create.command\";\nimport { DeleteCommand } from \"./commands/delete.command\";\nimport { EditCommand } from \"./commands/edit.command\";\nimport { ExportCommand } from \"./commands/export.command\";\nimport { GetCommand } from \"./commands/get.command\";\nimport { ImportCommand } from \"./commands/import.command\";\nimport { ListCommand } from \"./commands/list.command\";\nimport { RestoreCommand } from \"./commands/restore.command\";\nimport { ShareCommand } from \"./commands/share.command\";\nimport { Program } from \"./program\";\nimport { CliUtils } from \"./utils\";\n\nconst writeLn = CliUtils.writeLn;\n\nexport class VaultProgram extends Program {\n  constructor(protected main: Main) {\n    super(main);\n  }\n\n  async register() {\n    program\n      .addCommand(this.listCommand())\n      .addCommand(this.getCommand())\n      .addCommand(this.createCommand())\n      .addCommand(this.editCommand())\n      .addCommand(this.deleteCommand())\n      .addCommand(this.restoreCommand())\n      .addCommand(this.shareCommand(\"move\", false))\n      .addCommand(this.confirmCommand())\n      .addCommand(this.importCommand())\n      .addCommand(this.exportCommand())\n      .addCommand(this.shareCommand(\"share\", true));\n  }\n\n  private validateObject(requestedObject: string, validObjects: string[]): boolean {\n    let success = true;\n    if (!validObjects.includes(requestedObject)) {\n      success = false;\n      this.processResponse(\n        Response.badRequest(\n          'Unknown object \"' +\n            requestedObject +\n            '\". Allowed objects are ' +\n            validObjects.join(\", \") +\n            \".\"\n        )\n      );\n    }\n    return success;\n  }\n\n  private listCommand(): program.Command {\n    const listObjects = [\n      \"items\",\n      \"folders\",\n      \"collections\",\n      \"org-collections\",\n      \"org-members\",\n      \"organizations\",\n    ];\n\n    return new program.Command(\"list\")\n      .arguments(\"<object>\")\n      .description(\"List an array of objects from the vault.\", {\n        object: \"Valid objects are: \" + listObjects.join(\", \"),\n      })\n      .option(\"--search <search>\", \"Perform a search on the listed objects.\")\n      .option(\"--url <url>\", \"Filter items of type login with a url-match search.\")\n      .option(\"--folderid <folderid>\", \"Filter items by folder id.\")\n      .option(\"--collectionid <collectionid>\", \"Filter items by collection id.\")\n      .option(\n        \"--organizationid <organizationid>\",\n        \"Filter items or collections by organization id.\"\n      )\n      .option(\"--trash\", \"Filter items that are deleted and in the trash.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\"    Combining search with a filter performs a logical AND operation.\");\n        writeLn(\"\");\n        writeLn(\"    Combining multiple filters performs a logical OR operation.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw list items\");\n        writeLn(\"    bw list items --folderid 60556c31-e649-4b5d-8daf-fc1c391a1bf2\");\n        writeLn(\n          \"    bw list items --search google --folderid 60556c31-e649-4b5d-8daf-fc1c391a1bf2\"\n        );\n        writeLn(\"    bw list items --url https://google.com\");\n        writeLn(\"    bw list items --folderid null\");\n        writeLn(\"    bw list items --organizationid notnull\");\n        writeLn(\n          \"    bw list items --folderid 60556c31-e649-4b5d-8daf-fc1c391a1bf2 --organizationid notnull\"\n        );\n        writeLn(\"    bw list items --trash\");\n        writeLn(\"    bw list folders --search email\");\n        writeLn(\"    bw list org-members --organizationid 60556c31-e649-4b5d-8daf-fc1c391a1bf2\");\n        writeLn(\"\", true);\n      })\n      .action(async (object, cmd) => {\n        if (!this.validateObject(object, listObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new ListCommand(\n          this.main.cipherService,\n          this.main.folderService,\n          this.main.collectionService,\n          this.main.organizationService,\n          this.main.searchService,\n          this.main.apiService\n        );\n        const response = await command.run(object, cmd);\n\n        this.processResponse(response);\n      });\n  }\n\n  private getCommand(): program.Command {\n    const getObjects = [\n      \"item\",\n      \"username\",\n      \"password\",\n      \"uri\",\n      \"totp\",\n      \"notes\",\n      \"exposed\",\n      \"attachment\",\n      \"folder\",\n      \"collection\",\n      \"org-collection\",\n      \"organization\",\n      \"template\",\n      \"fingerprint\",\n      \"send\",\n    ];\n    return new program.Command(\"get\")\n      .arguments(\"<object> <id>\")\n      .description(\"Get an object from the vault.\", {\n        object: \"Valid objects are: \" + getObjects.join(\", \"),\n        id: \"Search term or object's globally unique `id`.\",\n      })\n      .option(\"--itemid <itemid>\", \"Attachment's item id.\")\n      .option(\"--output <output>\", \"Output directory or filename for attachment.\")\n      .option(\"--organizationid <organizationid>\", \"Organization id for an organization object.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  If raw output is specified and no output filename or directory is given for\");\n        writeLn(\"  an attachment query, the attachment content is written to stdout.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw get item 99ee88d2-6046-4ea7-92c2-acac464b1412\");\n        writeLn(\"    bw get password https://google.com\");\n        writeLn(\"    bw get totp google.com\");\n        writeLn(\"    bw get notes google.com\");\n        writeLn(\"    bw get exposed yahoo.com\");\n        writeLn(\n          \"    bw get attachment b857igwl1dzrs2 --itemid 99ee88d2-6046-4ea7-92c2-acac464b1412 \" +\n            \"--output ./photo.jpg\"\n        );\n        writeLn(\n          \"    bw get attachment photo.jpg --itemid 99ee88d2-6046-4ea7-92c2-acac464b1412 --raw\"\n        );\n        writeLn(\"    bw get folder email\");\n        writeLn(\"    bw get template folder\");\n        writeLn(\"\", true);\n      })\n      .action(async (object, id, cmd) => {\n        if (!this.validateObject(object, getObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new GetCommand(\n          this.main.cipherService,\n          this.main.folderService,\n          this.main.collectionService,\n          this.main.totpService,\n          this.main.auditService,\n          this.main.cryptoService,\n          this.main.stateService,\n          this.main.searchService,\n          this.main.apiService,\n          this.main.organizationService\n        );\n        const response = await command.run(object, id, cmd);\n        this.processResponse(response);\n      });\n  }\n\n  private createCommand() {\n    const createObjects = [\"item\", \"attachment\", \"folder\", \"org-collection\"];\n    return new program.Command(\"create\")\n      .arguments(\"<object> [encodedJson]\")\n      .description(\"Create an object in the vault.\", {\n        object: \"Valid objects are: \" + createObjects.join(\", \"),\n        encodedJson: \"Encoded json of the object to create. Can also be piped into stdin.\",\n      })\n      .option(\"--file <file>\", \"Path to file for attachment.\")\n      .option(\"--itemid <itemid>\", \"Attachment's item id.\")\n      .option(\"--organizationid <organizationid>\", \"Organization id for an organization object.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw create folder eyJuYW1lIjoiTXkgRm9sZGVyIn0K\");\n        writeLn(\"    echo 'eyJuYW1lIjoiTXkgRm9sZGVyIn0K' | bw create folder\");\n        writeLn(\n          \"    bw create attachment --file ./myfile.csv \" +\n            \"--itemid 16b15b89-65b3-4639-ad2a-95052a6d8f66\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (object, encodedJson, cmd) => {\n        if (!this.validateObject(object, createObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new CreateCommand(\n          this.main.cipherService,\n          this.main.folderService,\n          this.main.stateService,\n          this.main.cryptoService,\n          this.main.apiService\n        );\n        const response = await command.run(object, encodedJson, cmd);\n        this.processResponse(response);\n      });\n  }\n\n  private editCommand(): program.Command {\n    const editObjects = [\"item\", \"item-collections\", \"folder\", \"org-collection\"];\n    return new program.Command(\"edit\")\n      .arguments(\"<object> <id> [encodedJson]\")\n      .description(\"Edit an object from the vault.\", {\n        object: \"Valid objects are: \" + editObjects.join(\", \"),\n        id: \"Object's globally unique `id`.\",\n        encodedJson: \"Encoded json of the object to create. Can also be piped into stdin.\",\n      })\n      .option(\"--organizationid <organizationid>\", \"Organization id for an organization object.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\n          \"    bw edit folder 5cdfbd80-d99f-409b-915b-f4c5d0241b02 eyJuYW1lIjoiTXkgRm9sZGVyMiJ9Cg==\"\n        );\n        writeLn(\n          \"    echo 'eyJuYW1lIjoiTXkgRm9sZGVyMiJ9Cg==' | \" +\n            \"bw edit folder 5cdfbd80-d99f-409b-915b-f4c5d0241b02\"\n        );\n        writeLn(\n          \"    bw edit item-collections 78307355-fd25-416b-88b8-b33fd0e88c82 \" +\n            \"WyI5NzQwNTNkMC0zYjMzLTRiOTgtODg2ZS1mZWNmNWM4ZGJhOTYiXQ==\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (object, id, encodedJson, cmd) => {\n        if (!this.validateObject(object, editObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new EditCommand(\n          this.main.cipherService,\n          this.main.folderService,\n          this.main.cryptoService,\n          this.main.apiService\n        );\n        const response = await command.run(object, id, encodedJson, cmd);\n        this.processResponse(response);\n      });\n  }\n\n  private deleteCommand(): program.Command {\n    const deleteObjects = [\"item\", \"attachment\", \"folder\", \"org-collection\"];\n    return new program.Command(\"delete\")\n      .arguments(\"<object> <id>\")\n      .description(\"Delete an object from the vault.\", {\n        object: \"Valid objects are: \" + deleteObjects.join(\", \"),\n        id: \"Object's globally unique `id`.\",\n      })\n      .option(\"--itemid <itemid>\", \"Attachment's item id.\")\n      .option(\"--organizationid <organizationid>\", \"Organization id for an organization object.\")\n      .option(\n        \"-p, --permanent\",\n        \"Permanently deletes the item instead of soft-deleting it (item only).\"\n      )\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw delete item 7063feab-4b10-472e-b64c-785e2b870b92\");\n        writeLn(\"    bw delete item 89c21cd2-fab0-4f69-8c6e-ab8a0168f69a --permanent\");\n        writeLn(\"    bw delete folder 5cdfbd80-d99f-409b-915b-f4c5d0241b02\");\n        writeLn(\n          \"    bw delete attachment b857igwl1dzrs2 --itemid 310d5ffd-e9a2-4451-af87-ea054dce0f78\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (object, id, cmd) => {\n        if (!this.validateObject(object, deleteObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new DeleteCommand(\n          this.main.cipherService,\n          this.main.folderService,\n          this.main.stateService,\n          this.main.apiService\n        );\n        const response = await command.run(object, id, cmd);\n        this.processResponse(response);\n      });\n  }\n\n  private restoreCommand(): program.Command {\n    const restoreObjects = [\"item\"];\n    return new program.Command(\"restore\")\n      .arguments(\"<object> <id>\")\n      .description(\"Restores an object from the trash.\", {\n        object: \"Valid objects are: \" + restoreObjects.join(\", \"),\n        id: \"Object's globally unique `id`.\",\n      })\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw restore item 7063feab-4b10-472e-b64c-785e2b870b92\");\n        writeLn(\"\", true);\n      })\n      .action(async (object, id, cmd) => {\n        if (!this.validateObject(object, restoreObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new RestoreCommand(this.main.cipherService);\n        const response = await command.run(object, id);\n        this.processResponse(response);\n      });\n  }\n\n  private shareCommand(commandName: string, deprecated: boolean): program.Command {\n    return new program.Command(commandName)\n      .arguments(\"<id> <organizationId> [encodedJson]\")\n      .description((deprecated ? \"--DEPRECATED-- \" : \"\") + \"Move an item to an organization.\", {\n        id: \"Object's globally unique `id`.\",\n        organizationId: \"Organization's globally unique `id`.\",\n        encodedJson: \"Encoded json of an array of collection ids. Can also be piped into stdin.\",\n      })\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\n          \"    bw \" +\n            commandName +\n            \" 4af958ce-96a7-45d9-beed-1e70fabaa27a \" +\n            \"6d82949b-b44d-468a-adae-3f3bacb0ea32 WyI5NzQwNTNkMC0zYjMzLTRiOTgtODg2ZS1mZWNmNWM4ZGJhOTYiXQ==\"\n        );\n        writeLn(\n          \"    echo '[\\\"974053d0-3b33-4b98-886e-fecf5c8dba96\\\"]' | bw encode | \" +\n            \"bw \" +\n            commandName +\n            \" 4af958ce-96a7-45d9-beed-1e70fabaa27a 6d82949b-b44d-468a-adae-3f3bacb0ea32\"\n        );\n        if (deprecated) {\n          writeLn(\"\");\n          writeLn('--DEPRECATED See \"bw move\" for the current implementation--');\n        }\n        writeLn(\"\", true);\n      })\n      .action(async (id, organizationId, encodedJson, cmd) => {\n        await this.exitIfLocked();\n        const command = new ShareCommand(this.main.cipherService);\n        const response = await command.run(id, organizationId, encodedJson);\n        this.processResponse(response);\n      });\n  }\n\n  private confirmCommand(): program.Command {\n    const confirmObjects = [\"org-member\"];\n    return new program.Command(\"confirm\")\n      .arguments(\"<object> <id>\")\n      .description(\"Confirm an object to the organization.\", {\n        object: \"Valid objects are: \" + confirmObjects.join(\", \"),\n        id: \"Object's globally unique `id`.\",\n      })\n      .option(\"--organizationid <organizationid>\", \"Organization id for an organization object.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Examples:\");\n        writeLn(\"\");\n        writeLn(\n          \"    bw confirm org-member 7063feab-4b10-472e-b64c-785e2b870b92 \" +\n            \"--organizationid 310d5ffd-e9a2-4451-af87-ea054dce0f78\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (object, id, cmd) => {\n        if (!this.validateObject(object, confirmObjects)) {\n          return;\n        }\n\n        await this.exitIfLocked();\n        const command = new ConfirmCommand(this.main.apiService, this.main.cryptoService);\n        const response = await command.run(object, id, cmd);\n        this.processResponse(response);\n      });\n  }\n\n  private importCommand(): program.Command {\n    return new program.Command(\"import\")\n      .arguments(\"[format] [input]\")\n      .description(\"Import vault data from a file.\", {\n        format: \"The format of [input]\",\n        input: \"Filepath to data to import\",\n      })\n      .option(\"--formats\", \"List formats\")\n      .option(\"--organizationid <organizationid>\", \"ID of the organization to import to.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw import --formats\");\n        writeLn(\"    bw import bitwardencsv ./from/source.csv\");\n        writeLn(\"    bw import keepass2xml keepass_backup.xml\");\n        writeLn(\n          \"    bw import --organizationid cf14adc3-aca5-4573-890a-f6fa231436d9 keepass2xml keepass_backup.xml\"\n        );\n      })\n      .action(async (format, filepath, options) => {\n        await this.exitIfLocked();\n        const command = new ImportCommand(this.main.importService, this.main.organizationService);\n        const response = await command.run(format, filepath, options);\n        this.processResponse(response);\n      });\n  }\n\n  private exportCommand(): program.Command {\n    return new program.Command(\"export\")\n      .description(\"Export vault data to a CSV or JSON file.\", {})\n      .option(\"--output <output>\", \"Output directory or filename.\")\n      .option(\"--format <format>\", \"Export file format.\")\n      .option(\n        \"--password [password]\",\n        \"Use password to encrypt instead of your Bitwarden account encryption key. Only applies to the encrypted_json format.\"\n      )\n      .option(\"--organizationid <organizationid>\", \"Organization id for an organization.\")\n      .on(\"--help\", () => {\n        writeLn(\"\\n  Notes:\");\n        writeLn(\"\");\n        writeLn(\n          \"    Valid formats are `csv`, `json`, and `encrypted_json`. Default format is `csv`.\"\n        );\n        writeLn(\"\");\n        writeLn(\n          \"    If --raw option is specified and no output filename or directory is given, the\"\n        );\n        writeLn(\"    result is written to stdout.\");\n        writeLn(\"\");\n        writeLn(\"  Examples:\");\n        writeLn(\"\");\n        writeLn(\"    bw export\");\n        writeLn(\"    bw --raw export\");\n        writeLn(\"    bw export myPassword321\");\n        writeLn(\"    bw export myPassword321 --format json\");\n        writeLn(\"    bw export --output ./exp/bw.csv\");\n        writeLn(\"    bw export myPassword321 --output bw.json --format json\");\n        writeLn(\n          \"    bw export myPassword321 --organizationid 7063feab-4b10-472e-b64c-785e2b870b92\"\n        );\n        writeLn(\"\", true);\n      })\n      .action(async (options) => {\n        await this.exitIfLocked();\n        const command = new ExportCommand(this.main.exportService, this.main.policyService);\n        const response = await command.run(options);\n        this.processResponse(response);\n      });\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport * as program from \"commander\";\nimport * as jsdom from \"jsdom\";\n\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { LogLevelType } from \"jslib-common/enums/logLevelType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { ImportService } from \"jslib-common/services/import.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NoopMessagingService } from \"jslib-common/services/noopMessaging.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { CliPlatformUtilsService } from \"jslib-node/cli/services/cliPlatformUtils.service\";\nimport { ConsoleLogService } from \"jslib-node/cli/services/consoleLog.service\";\nimport { NodeApiService } from \"jslib-node/services/nodeApi.service\";\nimport { NodeCryptoFunctionService } from \"jslib-node/services/nodeCryptoFunction.service\";\n\nimport { Program } from \"./program\";\nimport { SendProgram } from \"./send.program\";\nimport { I18nService } from \"./services/i18n.service\";\nimport { LowdbStorageService } from \"./services/lowdbStorage.service\";\nimport { NodeEnvSecureStorageService } from \"./services/nodeEnvSecureStorage.service\";\nimport { VaultProgram } from \"./vault.program\";\n\n// Polyfills\n(global as any).DOMParser = new jsdom.JSDOM().window.DOMParser;\n\n// eslint-disable-next-line\nconst packageJson = require(\"../package.json\");\n\nexport class Main {\n  messagingService: NoopMessagingService;\n  storageService: LowdbStorageService;\n  secureStorageService: NodeEnvSecureStorageService;\n  i18nService: I18nService;\n  platformUtilsService: CliPlatformUtilsService;\n  cryptoService: CryptoService;\n  tokenService: TokenService;\n  appIdService: AppIdService;\n  apiService: NodeApiService;\n  environmentService: EnvironmentService;\n  settingsService: SettingsService;\n  cipherService: CipherService;\n  folderService: FolderService;\n  collectionService: CollectionService;\n  vaultTimeoutService: VaultTimeoutService;\n  syncService: SyncService;\n  passwordGenerationService: PasswordGenerationService;\n  totpService: TotpService;\n  containerService: ContainerService;\n  auditService: AuditService;\n  importService: ImportService;\n  exportService: ExportService;\n  searchService: SearchService;\n  cryptoFunctionService: NodeCryptoFunctionService;\n  authService: AuthService;\n  policyService: PolicyService;\n  program: Program;\n  vaultProgram: VaultProgram;\n  sendProgram: SendProgram;\n  logService: ConsoleLogService;\n  sendService: SendService;\n  fileUploadService: FileUploadService;\n  keyConnectorService: KeyConnectorService;\n  userVerificationService: UserVerificationService;\n  stateService: StateService;\n  stateMigrationService: StateMigrationService;\n  organizationService: OrganizationService;\n  providerService: ProviderService;\n  twoFactorService: TwoFactorService;\n\n  constructor() {\n    let p = null;\n    const relativeDataDir = path.join(path.dirname(process.execPath), \"bw-data\");\n    if (fs.existsSync(relativeDataDir)) {\n      p = relativeDataDir;\n    } else if (process.env.BITWARDENCLI_APPDATA_DIR) {\n      p = path.resolve(process.env.BITWARDENCLI_APPDATA_DIR);\n    } else if (process.platform === \"darwin\") {\n      p = path.join(process.env.HOME, \"Library/Application Support/Bitwarden CLI\");\n    } else if (process.platform === \"win32\") {\n      p = path.join(process.env.APPDATA, \"Bitwarden CLI\");\n    } else if (process.env.XDG_CONFIG_HOME) {\n      p = path.join(process.env.XDG_CONFIG_HOME, \"Bitwarden CLI\");\n    } else {\n      p = path.join(process.env.HOME, \".config/Bitwarden CLI\");\n    }\n\n    this.i18nService = new I18nService(\"en\", \"./locales\");\n    this.platformUtilsService = new CliPlatformUtilsService(ClientType.Cli, packageJson);\n    this.logService = new ConsoleLogService(\n      this.platformUtilsService.isDev(),\n      (level) => process.env.BITWARDENCLI_DEBUG !== \"true\" && level <= LogLevelType.Info\n    );\n    this.cryptoFunctionService = new NodeCryptoFunctionService();\n    this.storageService = new LowdbStorageService(this.logService, null, p, false, true);\n    this.secureStorageService = new NodeEnvSecureStorageService(\n      this.storageService,\n      this.logService,\n      () => this.cryptoService\n    );\n\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n\n    this.cryptoService = new CryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n\n    this.appIdService = new AppIdService(this.storageService);\n    this.tokenService = new TokenService(this.stateService);\n    this.messagingService = new NoopMessagingService();\n    this.environmentService = new EnvironmentService(this.stateService);\n\n    const customUserAgent =\n      \"Bitwarden_CLI/\" +\n      this.platformUtilsService.getApplicationVersionSync() +\n      \" (\" +\n      this.platformUtilsService.getDeviceString().toUpperCase() +\n      \")\";\n    this.apiService = new NodeApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      async (expired: boolean) => await this.logout(),\n      customUserAgent\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n\n    this.settingsService = new SettingsService(this.stateService);\n\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      null,\n      this.logService,\n      this.stateService\n    );\n\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n\n    this.providerService = new ProviderService(this.stateService);\n\n    this.organizationService = new OrganizationService(this.stateService);\n\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      async () => await this.cryptoService.clearStoredKey(KeySuffixOptions.Auto),\n      null\n    );\n\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      async (expired: boolean) => await this.logout()\n    );\n\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n\n    this.importService = new ImportService(\n      this.cipherService,\n      this.folderService,\n      this.apiService,\n      this.i18nService,\n      this.collectionService,\n      this.platformUtilsService,\n      this.cryptoService\n    );\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.program = new Program(this);\n    this.vaultProgram = new VaultProgram(this);\n    this.sendProgram = new SendProgram(this);\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n  }\n\n  async run() {\n    await this.init();\n\n    await this.program.register();\n    await this.vaultProgram.register();\n    await this.sendProgram.register();\n\n    program.parse(process.argv);\n\n    if (process.argv.slice(2).length === 0) {\n      program.outputHelp();\n    }\n  }\n\n  async logout() {\n    this.authService.logOut(() => {\n      /* Do nothing */\n    });\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n    ]);\n    await this.stateService.clean();\n    process.env.BW_SESSION = null;\n  }\n\n  private async init() {\n    await this.storageService.init();\n    await this.stateService.init();\n    this.containerService.attachToWindow(global);\n    await this.environmentService.setUrlsFromStorage();\n    const locale = await this.stateService.getLocale();\n    await this.i18nService.init(locale);\n    this.twoFactorService.init();\n\n    const installedVersion = await this.stateService.getInstalledVersion();\n    const currentVersion = await this.platformUtilsService.getApplicationVersion();\n    if (installedVersion == null || installedVersion !== currentVersion) {\n      await this.stateService.setInstalledVersion(currentVersion);\n    }\n  }\n}\n\nconst main = new Main();\nmain.run();\n"],"names":[],"sourceRoot":""}